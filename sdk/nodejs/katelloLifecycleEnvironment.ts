// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class KatelloLifecycleEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing KatelloLifecycleEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KatelloLifecycleEnvironmentState, opts?: pulumi.CustomResourceOptions): KatelloLifecycleEnvironment {
        return new KatelloLifecycleEnvironment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'foreman:index/katelloLifecycleEnvironment:KatelloLifecycleEnvironment';

    /**
     * Returns true if the given object is an instance of KatelloLifecycleEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KatelloLifecycleEnvironment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KatelloLifecycleEnvironment.__pulumiType;
    }

    /**
     * @SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.
     */
    public /*out*/ readonly __meta_!: pulumi.Output<boolean>;
    /**
     * Description for the lifecycle environment
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
     * spaces replacement. @EXAMPLE
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * Specifies if this environment is the special 'Library' root environment.
     */
    public /*out*/ readonly library!: pulumi.Output<boolean>;
    /**
     * Name of the lifecycle environment. @EXAMPLE "My new env"
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * @EXAMPLE 1
     */
    public readonly organizationId!: pulumi.Output<number>;
    /**
     * ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
     * data.foreman_katello_lifecycle_environment.library.id
     */
    public readonly priorId!: pulumi.Output<number>;
    public /*out*/ readonly successorId!: pulumi.Output<number>;

    /**
     * Create a KatelloLifecycleEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KatelloLifecycleEnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KatelloLifecycleEnvironmentArgs | KatelloLifecycleEnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KatelloLifecycleEnvironmentState | undefined;
            resourceInputs["__meta_"] = state ? state.__meta_ : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["library"] = state ? state.library : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["priorId"] = state ? state.priorId : undefined;
            resourceInputs["successorId"] = state ? state.successorId : undefined;
        } else {
            const args = argsOrState as KatelloLifecycleEnvironmentArgs | undefined;
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.priorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priorId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["priorId"] = args ? args.priorId : undefined;
            resourceInputs["__meta_"] = undefined /*out*/;
            resourceInputs["library"] = undefined /*out*/;
            resourceInputs["successorId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KatelloLifecycleEnvironment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KatelloLifecycleEnvironment resources.
 */
export interface KatelloLifecycleEnvironmentState {
    /**
     * @SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.
     */
    __meta_?: pulumi.Input<boolean>;
    /**
     * Description for the lifecycle environment
     */
    description?: pulumi.Input<string>;
    /**
     * Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
     * spaces replacement. @EXAMPLE
     */
    label?: pulumi.Input<string>;
    /**
     * Specifies if this environment is the special 'Library' root environment.
     */
    library?: pulumi.Input<boolean>;
    /**
     * Name of the lifecycle environment. @EXAMPLE "My new env"
     */
    name?: pulumi.Input<string>;
    /**
     * @EXAMPLE 1
     */
    organizationId?: pulumi.Input<number>;
    /**
     * ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
     * data.foreman_katello_lifecycle_environment.library.id
     */
    priorId?: pulumi.Input<number>;
    successorId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a KatelloLifecycleEnvironment resource.
 */
export interface KatelloLifecycleEnvironmentArgs {
    /**
     * Description for the lifecycle environment
     */
    description?: pulumi.Input<string>;
    /**
     * Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
     * spaces replacement. @EXAMPLE
     */
    label?: pulumi.Input<string>;
    /**
     * Name of the lifecycle environment. @EXAMPLE "My new env"
     */
    name?: pulumi.Input<string>;
    /**
     * @EXAMPLE 1
     */
    organizationId: pulumi.Input<number>;
    /**
     * ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
     * data.foreman_katello_lifecycle_environment.library.id
     */
    priorId: pulumi.Input<number>;
}
