// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Parameter extends pulumi.CustomResource {
    /**
     * Get an existing Parameter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ParameterState, opts?: pulumi.CustomResourceOptions): Parameter {
        return new Parameter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'foreman:index/parameter:Parameter';

    /**
     * Returns true if the given object is an instance of Parameter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Parameter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Parameter.__pulumiType;
    }

    /**
     * @SUMMARY Foreman representation of parameter. Parameters serve as an identification string that defines autonomy,
     * authority, or control for a portion of a network.
     */
    public /*out*/ readonly __meta_!: pulumi.Output<boolean>;
    /**
     * ID of the domain to assign this parameter to
     */
    public readonly domainId!: pulumi.Output<number | undefined>;
    /**
     * ID of the host to assign this parameter to
     */
    public readonly hostId!: pulumi.Output<number | undefined>;
    /**
     * ID of the host group to assign this parameter to
     */
    public readonly hostgroupId!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * ID of the operating system to assign this parameter to
     */
    public readonly operatingsystemId!: pulumi.Output<number | undefined>;
    /**
     * ID of the subnet to assign this parameter to
     */
    public readonly subnetId!: pulumi.Output<number | undefined>;
    public readonly value!: pulumi.Output<string>;

    /**
     * Create a Parameter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ParameterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ParameterArgs | ParameterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ParameterState | undefined;
            resourceInputs["__meta_"] = state ? state.__meta_ : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["hostId"] = state ? state.hostId : undefined;
            resourceInputs["hostgroupId"] = state ? state.hostgroupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["operatingsystemId"] = state ? state.operatingsystemId : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as ParameterArgs | undefined;
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["domainId"] = args ? args.domainId : undefined;
            resourceInputs["hostId"] = args ? args.hostId : undefined;
            resourceInputs["hostgroupId"] = args ? args.hostgroupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["operatingsystemId"] = args ? args.operatingsystemId : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["__meta_"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Parameter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Parameter resources.
 */
export interface ParameterState {
    /**
     * @SUMMARY Foreman representation of parameter. Parameters serve as an identification string that defines autonomy,
     * authority, or control for a portion of a network.
     */
    __meta_?: pulumi.Input<boolean>;
    /**
     * ID of the domain to assign this parameter to
     */
    domainId?: pulumi.Input<number>;
    /**
     * ID of the host to assign this parameter to
     */
    hostId?: pulumi.Input<number>;
    /**
     * ID of the host group to assign this parameter to
     */
    hostgroupId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * ID of the operating system to assign this parameter to
     */
    operatingsystemId?: pulumi.Input<number>;
    /**
     * ID of the subnet to assign this parameter to
     */
    subnetId?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Parameter resource.
 */
export interface ParameterArgs {
    /**
     * ID of the domain to assign this parameter to
     */
    domainId?: pulumi.Input<number>;
    /**
     * ID of the host to assign this parameter to
     */
    hostId?: pulumi.Input<number>;
    /**
     * ID of the host group to assign this parameter to
     */
    hostgroupId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * ID of the operating system to assign this parameter to
     */
    operatingsystemId?: pulumi.Input<number>;
    /**
     * ID of the subnet to assign this parameter to
     */
    subnetId?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}
