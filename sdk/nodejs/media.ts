// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Media extends pulumi.CustomResource {
    /**
     * Get an existing Media resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MediaState, opts?: pulumi.CustomResourceOptions): Media {
        return new Media(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'foreman:index/media:Media';

    /**
     * Returns true if the given object is an instance of Media.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Media {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Media.__pulumiType;
    }

    /**
     * @SUMMARY Remote installation media.
     */
    public /*out*/ readonly __meta_!: pulumi.Output<boolean>;
    /**
     * Name of the media. @EXAMPLE "CentOS mirror"
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * IDs of the operating systems associated with this media.
     */
    public readonly operatingsystemIds!: pulumi.Output<number[]>;
    /**
     * Operating system family. Values include: `"AIX"`, `"Altlinux"`, `"Archlinux"`, `"Coreos"`, `"Debian"`, `"Freebsd"`,
     * `"Gentoo"`, `"Junos"`, `"NXOS"`, `"Redhat"`, `"Solaris"`, `"Suse"`, `"Windows"`.
     */
    public readonly osFamily!: pulumi.Output<string | undefined>;
    /**
     * The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture). For example:
     * http://mirror.centos.org/centos/$version/os/$arch Where $arch will be substituted for the host's actual OS architecture
     * and $version, $major, $minor will be substituted for the version of the operating system. Solaris and Debian media may
     * also use $release. @EXAMPLE "http://mirror.averse.net/centos/$major.$minor/os/$arch"
     */
    public readonly path!: pulumi.Output<string>;

    /**
     * Create a Media resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MediaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MediaArgs | MediaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MediaState | undefined;
            resourceInputs["__meta_"] = state ? state.__meta_ : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["operatingsystemIds"] = state ? state.operatingsystemIds : undefined;
            resourceInputs["osFamily"] = state ? state.osFamily : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
        } else {
            const args = argsOrState as MediaArgs | undefined;
            if ((!args || args.path === undefined) && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["operatingsystemIds"] = args ? args.operatingsystemIds : undefined;
            resourceInputs["osFamily"] = args ? args.osFamily : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["__meta_"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Media.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Media resources.
 */
export interface MediaState {
    /**
     * @SUMMARY Remote installation media.
     */
    __meta_?: pulumi.Input<boolean>;
    /**
     * Name of the media. @EXAMPLE "CentOS mirror"
     */
    name?: pulumi.Input<string>;
    /**
     * IDs of the operating systems associated with this media.
     */
    operatingsystemIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Operating system family. Values include: `"AIX"`, `"Altlinux"`, `"Archlinux"`, `"Coreos"`, `"Debian"`, `"Freebsd"`,
     * `"Gentoo"`, `"Junos"`, `"NXOS"`, `"Redhat"`, `"Solaris"`, `"Suse"`, `"Windows"`.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture). For example:
     * http://mirror.centos.org/centos/$version/os/$arch Where $arch will be substituted for the host's actual OS architecture
     * and $version, $major, $minor will be substituted for the version of the operating system. Solaris and Debian media may
     * also use $release. @EXAMPLE "http://mirror.averse.net/centos/$major.$minor/os/$arch"
     */
    path?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Media resource.
 */
export interface MediaArgs {
    /**
     * Name of the media. @EXAMPLE "CentOS mirror"
     */
    name?: pulumi.Input<string>;
    /**
     * IDs of the operating systems associated with this media.
     */
    operatingsystemIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Operating system family. Values include: `"AIX"`, `"Altlinux"`, `"Archlinux"`, `"Coreos"`, `"Debian"`, `"Freebsd"`,
     * `"Gentoo"`, `"Junos"`, `"NXOS"`, `"Redhat"`, `"Solaris"`, `"Suse"`, `"Windows"`.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture). For example:
     * http://mirror.centos.org/centos/$version/os/$arch Where $arch will be substituted for the host's actual OS architecture
     * and $version, $major, $minor will be substituted for the version of the operating system. Solaris and Debian media may
     * also use $release. @EXAMPLE "http://mirror.averse.net/centos/$major.$minor/os/$arch"
     */
    path: pulumi.Input<string>;
}
