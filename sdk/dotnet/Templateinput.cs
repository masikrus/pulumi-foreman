// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Foreman
{
    [ForemanResourceType("foreman:index/templateinput:Templateinput")]
    public partial class Templateinput : global::Pulumi.CustomResource
    {
        /// <summary>
        /// @SUMMARY Foreman representation of a template input.
        /// </summary>
        [Output("__meta_")]
        public Output<bool> __meta_ { get; private set; } = null!;

        [Output("advanced")]
        public Output<bool?> Advanced { get; private set; } = null!;

        [Output("default")]
        public Output<string> Default { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("factName")]
        public Output<string?> FactName { get; private set; } = null!;

        [Output("hiddenValue")]
        public Output<bool?> HiddenValue { get; private set; } = null!;

        [Output("inputType")]
        public Output<string?> InputType { get; private set; } = null!;

        /// <summary>
        /// The name of the template input
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("puppetClassName")]
        public Output<string?> PuppetClassName { get; private set; } = null!;

        [Output("puppetParameterName")]
        public Output<string?> PuppetParameterName { get; private set; } = null!;

        [Output("required")]
        public Output<bool?> Required { get; private set; } = null!;

        [Output("resourceType")]
        public Output<string?> ResourceType { get; private set; } = null!;

        [Output("templateId")]
        public Output<int> TemplateId { get; private set; } = null!;

        [Output("valueType")]
        public Output<string?> ValueType { get; private set; } = null!;

        [Output("variableName")]
        public Output<string?> VariableName { get; private set; } = null!;


        /// <summary>
        /// Create a Templateinput resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Templateinput(string name, TemplateinputArgs args, CustomResourceOptions? options = null)
            : base("foreman:index/templateinput:Templateinput", name, args ?? new TemplateinputArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Templateinput(string name, Input<string> id, TemplateinputState? state = null, CustomResourceOptions? options = null)
            : base("foreman:index/templateinput:Templateinput", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Templateinput resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Templateinput Get(string name, Input<string> id, TemplateinputState? state = null, CustomResourceOptions? options = null)
        {
            return new Templateinput(name, id, state, options);
        }
    }

    public sealed class TemplateinputArgs : global::Pulumi.ResourceArgs
    {
        [Input("advanced")]
        public Input<bool>? Advanced { get; set; }

        [Input("default", required: true)]
        public Input<string> Default { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("factName")]
        public Input<string>? FactName { get; set; }

        [Input("hiddenValue")]
        public Input<bool>? HiddenValue { get; set; }

        [Input("inputType")]
        public Input<string>? InputType { get; set; }

        /// <summary>
        /// The name of the template input
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("puppetClassName")]
        public Input<string>? PuppetClassName { get; set; }

        [Input("puppetParameterName")]
        public Input<string>? PuppetParameterName { get; set; }

        [Input("required")]
        public Input<bool>? Required { get; set; }

        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        [Input("valueType")]
        public Input<string>? ValueType { get; set; }

        [Input("variableName")]
        public Input<string>? VariableName { get; set; }

        public TemplateinputArgs()
        {
        }
        public static new TemplateinputArgs Empty => new TemplateinputArgs();
    }

    public sealed class TemplateinputState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// @SUMMARY Foreman representation of a template input.
        /// </summary>
        [Input("__meta_")]
        public Input<bool>? __meta_ { get; set; }

        [Input("advanced")]
        public Input<bool>? Advanced { get; set; }

        [Input("default")]
        public Input<string>? Default { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("factName")]
        public Input<string>? FactName { get; set; }

        [Input("hiddenValue")]
        public Input<bool>? HiddenValue { get; set; }

        [Input("inputType")]
        public Input<string>? InputType { get; set; }

        /// <summary>
        /// The name of the template input
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("puppetClassName")]
        public Input<string>? PuppetClassName { get; set; }

        [Input("puppetParameterName")]
        public Input<string>? PuppetParameterName { get; set; }

        [Input("required")]
        public Input<bool>? Required { get; set; }

        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        [Input("templateId")]
        public Input<int>? TemplateId { get; set; }

        [Input("valueType")]
        public Input<string>? ValueType { get; set; }

        [Input("variableName")]
        public Input<string>? VariableName { get; set; }

        public TemplateinputState()
        {
        }
        public static new TemplateinputState Empty => new TemplateinputState();
    }
}
