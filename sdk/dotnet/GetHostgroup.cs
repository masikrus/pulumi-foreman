// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Foreman
{
    public static class GetHostgroup
    {
        public static Task<GetHostgroupResult> InvokeAsync(GetHostgroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostgroupResult>("foreman:index/getHostgroup:getHostgroup", args ?? new GetHostgroupArgs(), options.WithDefaults());

        public static Output<GetHostgroupResult> Invoke(GetHostgroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostgroupResult>("foreman:index/getHostgroup:getHostgroup", args ?? new GetHostgroupInvokeArgs(), options.WithDefaults());

        public static Output<GetHostgroupResult> Invoke(GetHostgroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostgroupResult>("foreman:index/getHostgroup:getHostgroup", args ?? new GetHostgroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostgroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("title", required: true)]
        public string Title { get; set; } = null!;

        public GetHostgroupArgs()
        {
        }
        public static new GetHostgroupArgs Empty => new GetHostgroupArgs();
    }

    public sealed class GetHostgroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public GetHostgroupInvokeArgs()
        {
        }
        public static new GetHostgroupInvokeArgs Empty => new GetHostgroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostgroupResult
    {
        public readonly int ArchitectureId;
        public readonly int ComputeProfileId;
        public readonly int ComputeResourceId;
        public readonly ImmutableArray<int> ConfigGroupIds;
        public readonly int ContentSourceId;
        public readonly int ContentViewId;
        public readonly int DomainId;
        public readonly int EnvironmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int LifecycleEnvironmentId;
        public readonly int MediumId;
        public readonly string Name;
        public readonly int OperatingsystemId;
        public readonly ImmutableDictionary<string, string> Parameters;
        public readonly int ParentId;
        public readonly int PtableId;
        public readonly int PuppetCaProxyId;
        public readonly ImmutableArray<int> PuppetClassIds;
        public readonly int PuppetProxyId;
        public readonly string PxeLoader;
        public readonly int RealmId;
        public readonly string RootPassword;
        public readonly int SubnetId;
        public readonly string Title;

        [OutputConstructor]
        private GetHostgroupResult(
            int architectureId,

            int computeProfileId,

            int computeResourceId,

            ImmutableArray<int> configGroupIds,

            int contentSourceId,

            int contentViewId,

            int domainId,

            int environmentId,

            string id,

            int lifecycleEnvironmentId,

            int mediumId,

            string name,

            int operatingsystemId,

            ImmutableDictionary<string, string> parameters,

            int parentId,

            int ptableId,

            int puppetCaProxyId,

            ImmutableArray<int> puppetClassIds,

            int puppetProxyId,

            string pxeLoader,

            int realmId,

            string rootPassword,

            int subnetId,

            string title)
        {
            ArchitectureId = architectureId;
            ComputeProfileId = computeProfileId;
            ComputeResourceId = computeResourceId;
            ConfigGroupIds = configGroupIds;
            ContentSourceId = contentSourceId;
            ContentViewId = contentViewId;
            DomainId = domainId;
            EnvironmentId = environmentId;
            Id = id;
            LifecycleEnvironmentId = lifecycleEnvironmentId;
            MediumId = mediumId;
            Name = name;
            OperatingsystemId = operatingsystemId;
            Parameters = parameters;
            ParentId = parentId;
            PtableId = ptableId;
            PuppetCaProxyId = puppetCaProxyId;
            PuppetClassIds = puppetClassIds;
            PuppetProxyId = puppetProxyId;
            PxeLoader = pxeLoader;
            RealmId = realmId;
            RootPassword = rootPassword;
            SubnetId = subnetId;
            Title = title;
        }
    }
}
