// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Foreman
{
    [ForemanResourceType("foreman:index/overrideValue:OverrideValue")]
    public partial class OverrideValue : global::Pulumi.CustomResource
    {
        /// <summary>
        /// @SUMMARY Smart class parameter override value.
        /// </summary>
        [Output("__meta_")]
        public Output<bool> __meta_ { get; private set; } = null!;

        /// <summary>
        /// A map containing the match criteria. Must contain two keys: `type` and `value`.Type can be one of `fqdn`, `hostgroup`,
        /// `domain` or `os`@EXAMPLE { type = "hostgroup" value = "example_group" }
        /// </summary>
        [Output("match")]
        public Output<ImmutableDictionary<string, string>> Match { get; private set; } = null!;

        /// <summary>
        /// When set to `true` Foreman will not send this parameter in classification output. Default value is `false`.@EXAMPLE
        /// false
        /// </summary>
        [Output("omit")]
        public Output<bool?> Omit { get; private set; } = null!;

        /// <summary>
        /// ID of the smart class parameter to override.@EXAMPLE 1
        /// </summary>
        [Output("smartClassParameterId")]
        public Output<int> SmartClassParameterId { get; private set; } = null!;

        /// <summary>
        /// Smart parameter override value. Hashes and arrays must be JSON encoded.@EXAMPLE jsonencode({ key = "value" })
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a OverrideValue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OverrideValue(string name, OverrideValueArgs args, CustomResourceOptions? options = null)
            : base("foreman:index/overrideValue:OverrideValue", name, args ?? new OverrideValueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OverrideValue(string name, Input<string> id, OverrideValueState? state = null, CustomResourceOptions? options = null)
            : base("foreman:index/overrideValue:OverrideValue", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OverrideValue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OverrideValue Get(string name, Input<string> id, OverrideValueState? state = null, CustomResourceOptions? options = null)
        {
            return new OverrideValue(name, id, state, options);
        }
    }

    public sealed class OverrideValueArgs : global::Pulumi.ResourceArgs
    {
        [Input("match", required: true)]
        private InputMap<string>? _match;

        /// <summary>
        /// A map containing the match criteria. Must contain two keys: `type` and `value`.Type can be one of `fqdn`, `hostgroup`,
        /// `domain` or `os`@EXAMPLE { type = "hostgroup" value = "example_group" }
        /// </summary>
        public InputMap<string> Match
        {
            get => _match ?? (_match = new InputMap<string>());
            set => _match = value;
        }

        /// <summary>
        /// When set to `true` Foreman will not send this parameter in classification output. Default value is `false`.@EXAMPLE
        /// false
        /// </summary>
        [Input("omit")]
        public Input<bool>? Omit { get; set; }

        /// <summary>
        /// ID of the smart class parameter to override.@EXAMPLE 1
        /// </summary>
        [Input("smartClassParameterId", required: true)]
        public Input<int> SmartClassParameterId { get; set; } = null!;

        /// <summary>
        /// Smart parameter override value. Hashes and arrays must be JSON encoded.@EXAMPLE jsonencode({ key = "value" })
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public OverrideValueArgs()
        {
        }
        public static new OverrideValueArgs Empty => new OverrideValueArgs();
    }

    public sealed class OverrideValueState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// @SUMMARY Smart class parameter override value.
        /// </summary>
        [Input("__meta_")]
        public Input<bool>? __meta_ { get; set; }

        [Input("match")]
        private InputMap<string>? _match;

        /// <summary>
        /// A map containing the match criteria. Must contain two keys: `type` and `value`.Type can be one of `fqdn`, `hostgroup`,
        /// `domain` or `os`@EXAMPLE { type = "hostgroup" value = "example_group" }
        /// </summary>
        public InputMap<string> Match
        {
            get => _match ?? (_match = new InputMap<string>());
            set => _match = value;
        }

        /// <summary>
        /// When set to `true` Foreman will not send this parameter in classification output. Default value is `false`.@EXAMPLE
        /// false
        /// </summary>
        [Input("omit")]
        public Input<bool>? Omit { get; set; }

        /// <summary>
        /// ID of the smart class parameter to override.@EXAMPLE 1
        /// </summary>
        [Input("smartClassParameterId")]
        public Input<int>? SmartClassParameterId { get; set; }

        /// <summary>
        /// Smart parameter override value. Hashes and arrays must be JSON encoded.@EXAMPLE jsonencode({ key = "value" })
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public OverrideValueState()
        {
        }
        public static new OverrideValueState Empty => new OverrideValueState();
    }
}
