// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Foreman
{
    [ForemanResourceType("foreman:index/katelloSyncPlan:KatelloSyncPlan")]
    public partial class KatelloSyncPlan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// @SUMMARY A sync plan is used to schedule a synchronization of a product in katello
        /// </summary>
        [Output("__meta_")]
        public Output<bool> __meta_ { get; private set; } = null!;

        /// <summary>
        /// Custom cron logic for sync plan.@EXAMPLE "*/5 * * * *"
        /// </summary>
        [Output("cronExpression")]
        public Output<string?> CronExpression { get; private set; } = null!;

        /// <summary>
        /// Sync plan description.@EXAMPLE "A sync plan description"
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Enables or disables synchronization.@EXAMPLE true
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// How often synchronization should run. Valid values include: `"hourly"`, `"daily"`, `"weekly"`,`"custom cron"`.@EXAMPLE
        /// "daily"
        /// </summary>
        [Output("interval")]
        public Output<string> Interval { get; private set; } = null!;

        /// <summary>
        /// Sync plan name.@EXAMPLE "daily"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Start datetime of synchronization. Use the specified format: YYYY-MM-DD HH:MM:SS +0000, where '+0000' is the timezone
        /// difference. A value of '+0000' means UTC. @EXAMPLE "1970-01-01 00:00:00 +0000"
        /// </summary>
        [Output("syncDate")]
        public Output<string> SyncDate { get; private set; } = null!;


        /// <summary>
        /// Create a KatelloSyncPlan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KatelloSyncPlan(string name, KatelloSyncPlanArgs args, CustomResourceOptions? options = null)
            : base("foreman:index/katelloSyncPlan:KatelloSyncPlan", name, args ?? new KatelloSyncPlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KatelloSyncPlan(string name, Input<string> id, KatelloSyncPlanState? state = null, CustomResourceOptions? options = null)
            : base("foreman:index/katelloSyncPlan:KatelloSyncPlan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KatelloSyncPlan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KatelloSyncPlan Get(string name, Input<string> id, KatelloSyncPlanState? state = null, CustomResourceOptions? options = null)
        {
            return new KatelloSyncPlan(name, id, state, options);
        }
    }

    public sealed class KatelloSyncPlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom cron logic for sync plan.@EXAMPLE "*/5 * * * *"
        /// </summary>
        [Input("cronExpression")]
        public Input<string>? CronExpression { get; set; }

        /// <summary>
        /// Sync plan description.@EXAMPLE "A sync plan description"
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enables or disables synchronization.@EXAMPLE true
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// How often synchronization should run. Valid values include: `"hourly"`, `"daily"`, `"weekly"`,`"custom cron"`.@EXAMPLE
        /// "daily"
        /// </summary>
        [Input("interval", required: true)]
        public Input<string> Interval { get; set; } = null!;

        /// <summary>
        /// Sync plan name.@EXAMPLE "daily"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Start datetime of synchronization. Use the specified format: YYYY-MM-DD HH:MM:SS +0000, where '+0000' is the timezone
        /// difference. A value of '+0000' means UTC. @EXAMPLE "1970-01-01 00:00:00 +0000"
        /// </summary>
        [Input("syncDate", required: true)]
        public Input<string> SyncDate { get; set; } = null!;

        public KatelloSyncPlanArgs()
        {
        }
        public static new KatelloSyncPlanArgs Empty => new KatelloSyncPlanArgs();
    }

    public sealed class KatelloSyncPlanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// @SUMMARY A sync plan is used to schedule a synchronization of a product in katello
        /// </summary>
        [Input("__meta_")]
        public Input<bool>? __meta_ { get; set; }

        /// <summary>
        /// Custom cron logic for sync plan.@EXAMPLE "*/5 * * * *"
        /// </summary>
        [Input("cronExpression")]
        public Input<string>? CronExpression { get; set; }

        /// <summary>
        /// Sync plan description.@EXAMPLE "A sync plan description"
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enables or disables synchronization.@EXAMPLE true
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// How often synchronization should run. Valid values include: `"hourly"`, `"daily"`, `"weekly"`,`"custom cron"`.@EXAMPLE
        /// "daily"
        /// </summary>
        [Input("interval")]
        public Input<string>? Interval { get; set; }

        /// <summary>
        /// Sync plan name.@EXAMPLE "daily"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Start datetime of synchronization. Use the specified format: YYYY-MM-DD HH:MM:SS +0000, where '+0000' is the timezone
        /// difference. A value of '+0000' means UTC. @EXAMPLE "1970-01-01 00:00:00 +0000"
        /// </summary>
        [Input("syncDate")]
        public Input<string>? SyncDate { get; set; }

        public KatelloSyncPlanState()
        {
        }
        public static new KatelloSyncPlanState Empty => new KatelloSyncPlanState();
    }
}
