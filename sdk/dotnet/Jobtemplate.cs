// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Foreman
{
    [ForemanResourceType("foreman:index/jobtemplate:Jobtemplate")]
    public partial class Jobtemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// @SUMMARY Foreman representation of a job template.
        /// </summary>
        [Output("__meta_")]
        public Output<bool> __meta_ { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("descriptionFormat")]
        public Output<string?> DescriptionFormat { get; private set; } = null!;

        [Output("jobCategory")]
        public Output<string> JobCategory { get; private set; } = null!;

        [Output("locked")]
        public Output<bool?> Locked { get; private set; } = null!;

        /// <summary>
        /// The name of the job template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("providerType")]
        public Output<string?> ProviderType { get; private set; } = null!;

        [Output("snippet")]
        public Output<bool?> Snippet { get; private set; } = null!;

        /// <summary>
        /// The template content itself
        /// </summary>
        [Output("template")]
        public Output<string> Template { get; private set; } = null!;

        [Output("templateInputs")]
        public Output<ImmutableArray<Outputs.JobtemplateTemplateInput>> TemplateInputs { get; private set; } = null!;


        /// <summary>
        /// Create a Jobtemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Jobtemplate(string name, JobtemplateArgs args, CustomResourceOptions? options = null)
            : base("foreman:index/jobtemplate:Jobtemplate", name, args ?? new JobtemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Jobtemplate(string name, Input<string> id, JobtemplateState? state = null, CustomResourceOptions? options = null)
            : base("foreman:index/jobtemplate:Jobtemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Jobtemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Jobtemplate Get(string name, Input<string> id, JobtemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new Jobtemplate(name, id, state, options);
        }
    }

    public sealed class JobtemplateArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("descriptionFormat")]
        public Input<string>? DescriptionFormat { get; set; }

        [Input("jobCategory", required: true)]
        public Input<string> JobCategory { get; set; } = null!;

        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        /// <summary>
        /// The name of the job template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("providerType")]
        public Input<string>? ProviderType { get; set; }

        [Input("snippet")]
        public Input<bool>? Snippet { get; set; }

        /// <summary>
        /// The template content itself
        /// </summary>
        [Input("template", required: true)]
        public Input<string> Template { get; set; } = null!;

        [Input("templateInputs")]
        private InputList<Inputs.JobtemplateTemplateInputArgs>? _templateInputs;
        public InputList<Inputs.JobtemplateTemplateInputArgs> TemplateInputs
        {
            get => _templateInputs ?? (_templateInputs = new InputList<Inputs.JobtemplateTemplateInputArgs>());
            set => _templateInputs = value;
        }

        public JobtemplateArgs()
        {
        }
        public static new JobtemplateArgs Empty => new JobtemplateArgs();
    }

    public sealed class JobtemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// @SUMMARY Foreman representation of a job template.
        /// </summary>
        [Input("__meta_")]
        public Input<bool>? __meta_ { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("descriptionFormat")]
        public Input<string>? DescriptionFormat { get; set; }

        [Input("jobCategory")]
        public Input<string>? JobCategory { get; set; }

        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        /// <summary>
        /// The name of the job template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("providerType")]
        public Input<string>? ProviderType { get; set; }

        [Input("snippet")]
        public Input<bool>? Snippet { get; set; }

        /// <summary>
        /// The template content itself
        /// </summary>
        [Input("template")]
        public Input<string>? Template { get; set; }

        [Input("templateInputs")]
        private InputList<Inputs.JobtemplateTemplateInputGetArgs>? _templateInputs;
        public InputList<Inputs.JobtemplateTemplateInputGetArgs> TemplateInputs
        {
            get => _templateInputs ?? (_templateInputs = new InputList<Inputs.JobtemplateTemplateInputGetArgs>());
            set => _templateInputs = value;
        }

        public JobtemplateState()
        {
        }
        public static new JobtemplateState Empty => new JobtemplateState();
    }
}
