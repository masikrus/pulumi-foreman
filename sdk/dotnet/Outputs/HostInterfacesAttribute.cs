// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Foreman.Outputs
{

    [OutputType]
    public sealed class HostInterfacesAttribute
    {
        /// <summary>
        /// Identifiers of attached interfaces, e.g. 'eth1', 'eth2' as comma-separated list
        /// </summary>
        public readonly string? AttachedDevices;
        /// <summary>
        /// Identifier of the interface to which this interface belongs.
        /// </summary>
        public readonly string? AttachedTo;
        /// <summary>
        /// Provider used for BMC/IMPI functionality. Values include: `"IPMI"`
        /// </summary>
        public readonly string? BmcProvider;
        /// <summary>
        /// Hypervisor specific interface options
        /// </summary>
        public readonly ImmutableDictionary<string, string>? ComputeAttributes;
        /// <summary>
        /// Unique identifier for the interface.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// Identifier of this interface local to the host.
        /// </summary>
        public readonly string? Identifier;
        /// <summary>
        /// IP address associated with the interface.
        /// </summary>
        public readonly string? Ip;
        /// <summary>
        /// MAC address associated with the interface.
        /// </summary>
        public readonly string? Mac;
        /// <summary>
        /// Whether or not this interface is managed by Foreman.
        /// </summary>
        public readonly bool? Managed;
        /// <summary>
        /// Name of the interface
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Associated password used for BMC/IPMI functionality.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Whether or not this is the primary interface.
        /// </summary>
        public readonly bool? Primary;
        /// <summary>
        /// Whether or not this interface is used to provision the host.
        /// </summary>
        public readonly bool? Provision;
        /// <summary>
        /// ID of the subnet to associate with this interface.
        /// </summary>
        public readonly int? SubnetId;
        /// <summary>
        /// The type of interface. Values include: `"interface"`, `"bmc"`, `"bond"`, `"bridge"`.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// Username used for BMC/IPMI functionality.
        /// </summary>
        public readonly string? Username;
        /// <summary>
        /// Whether or not this is a virtual interface.
        /// </summary>
        public readonly bool? Virtual;

        [OutputConstructor]
        private HostInterfacesAttribute(
            string? attachedDevices,

            string? attachedTo,

            string? bmcProvider,

            ImmutableDictionary<string, string>? computeAttributes,

            int? id,

            string? identifier,

            string? ip,

            string? mac,

            bool? managed,

            string? name,

            string? password,

            bool? primary,

            bool? provision,

            int? subnetId,

            string? type,

            string? username,

            bool? @virtual)
        {
            AttachedDevices = attachedDevices;
            AttachedTo = attachedTo;
            BmcProvider = bmcProvider;
            ComputeAttributes = computeAttributes;
            Id = id;
            Identifier = identifier;
            Ip = ip;
            Mac = mac;
            Managed = managed;
            Name = name;
            Password = password;
            Primary = primary;
            Provision = provision;
            SubnetId = subnetId;
            Type = type;
            Username = username;
            Virtual = @virtual;
        }
    }
}
