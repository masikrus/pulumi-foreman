// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Foreman
{
    [ForemanResourceType("foreman:index/katelloLifecycleEnvironment:KatelloLifecycleEnvironment")]
    public partial class KatelloLifecycleEnvironment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// @SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.
        /// </summary>
        [Output("__meta_")]
        public Output<bool> __meta_ { get; private set; } = null!;

        /// <summary>
        /// Description for the lifecycle environment
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
        /// spaces replacement. @EXAMPLE
        /// </summary>
        [Output("label")]
        public Output<string> Label { get; private set; } = null!;

        /// <summary>
        /// Specifies if this environment is the special 'Library' root environment.
        /// </summary>
        [Output("library")]
        public Output<bool> Library { get; private set; } = null!;

        /// <summary>
        /// Name of the lifecycle environment. @EXAMPLE "My new env"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// @EXAMPLE 1
        /// </summary>
        [Output("organizationId")]
        public Output<int> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
        /// data.foreman_katello_lifecycle_environment.library.id
        /// </summary>
        [Output("priorId")]
        public Output<int> PriorId { get; private set; } = null!;

        [Output("successorId")]
        public Output<int> SuccessorId { get; private set; } = null!;


        /// <summary>
        /// Create a KatelloLifecycleEnvironment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KatelloLifecycleEnvironment(string name, KatelloLifecycleEnvironmentArgs args, CustomResourceOptions? options = null)
            : base("foreman:index/katelloLifecycleEnvironment:KatelloLifecycleEnvironment", name, args ?? new KatelloLifecycleEnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KatelloLifecycleEnvironment(string name, Input<string> id, KatelloLifecycleEnvironmentState? state = null, CustomResourceOptions? options = null)
            : base("foreman:index/katelloLifecycleEnvironment:KatelloLifecycleEnvironment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KatelloLifecycleEnvironment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KatelloLifecycleEnvironment Get(string name, Input<string> id, KatelloLifecycleEnvironmentState? state = null, CustomResourceOptions? options = null)
        {
            return new KatelloLifecycleEnvironment(name, id, state, options);
        }
    }

    public sealed class KatelloLifecycleEnvironmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description for the lifecycle environment
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
        /// spaces replacement. @EXAMPLE
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Name of the lifecycle environment. @EXAMPLE "My new env"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// @EXAMPLE 1
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<int> OrganizationId { get; set; } = null!;

        /// <summary>
        /// ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
        /// data.foreman_katello_lifecycle_environment.library.id
        /// </summary>
        [Input("priorId", required: true)]
        public Input<int> PriorId { get; set; } = null!;

        public KatelloLifecycleEnvironmentArgs()
        {
        }
        public static new KatelloLifecycleEnvironmentArgs Empty => new KatelloLifecycleEnvironmentArgs();
    }

    public sealed class KatelloLifecycleEnvironmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// @SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.
        /// </summary>
        [Input("__meta_")]
        public Input<bool>? __meta_ { get; set; }

        /// <summary>
        /// Description for the lifecycle environment
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
        /// spaces replacement. @EXAMPLE
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Specifies if this environment is the special 'Library' root environment.
        /// </summary>
        [Input("library")]
        public Input<bool>? Library { get; set; }

        /// <summary>
        /// Name of the lifecycle environment. @EXAMPLE "My new env"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// @EXAMPLE 1
        /// </summary>
        [Input("organizationId")]
        public Input<int>? OrganizationId { get; set; }

        /// <summary>
        /// ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
        /// data.foreman_katello_lifecycle_environment.library.id
        /// </summary>
        [Input("priorId")]
        public Input<int>? PriorId { get; set; }

        [Input("successorId")]
        public Input<int>? SuccessorId { get; set; }

        public KatelloLifecycleEnvironmentState()
        {
        }
        public static new KatelloLifecycleEnvironmentState Empty => new KatelloLifecycleEnvironmentState();
    }
}
