// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package foreman

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-foreman/sdk/go/foreman/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupJobtemplate(ctx *pulumi.Context, args *LookupJobtemplateArgs, opts ...pulumi.InvokeOption) (*LookupJobtemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupJobtemplateResult
	err := ctx.Invoke("foreman:index/getJobtemplate:getJobtemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getJobtemplate.
type LookupJobtemplateArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getJobtemplate.
type LookupJobtemplateResult struct {
	Description       string `pulumi:"description"`
	DescriptionFormat string `pulumi:"descriptionFormat"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                        `pulumi:"id"`
	JobCategory    string                        `pulumi:"jobCategory"`
	Locked         bool                          `pulumi:"locked"`
	Name           string                        `pulumi:"name"`
	ProviderType   string                        `pulumi:"providerType"`
	Snippet        bool                          `pulumi:"snippet"`
	Template       string                        `pulumi:"template"`
	TemplateInputs []GetJobtemplateTemplateInput `pulumi:"templateInputs"`
}

func LookupJobtemplateOutput(ctx *pulumi.Context, args LookupJobtemplateOutputArgs, opts ...pulumi.InvokeOption) LookupJobtemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupJobtemplateResultOutput, error) {
			args := v.(LookupJobtemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("foreman:index/getJobtemplate:getJobtemplate", args, LookupJobtemplateResultOutput{}, options).(LookupJobtemplateResultOutput), nil
		}).(LookupJobtemplateResultOutput)
}

// A collection of arguments for invoking getJobtemplate.
type LookupJobtemplateOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupJobtemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobtemplateArgs)(nil)).Elem()
}

// A collection of values returned by getJobtemplate.
type LookupJobtemplateResultOutput struct{ *pulumi.OutputState }

func (LookupJobtemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobtemplateResult)(nil)).Elem()
}

func (o LookupJobtemplateResultOutput) ToLookupJobtemplateResultOutput() LookupJobtemplateResultOutput {
	return o
}

func (o LookupJobtemplateResultOutput) ToLookupJobtemplateResultOutputWithContext(ctx context.Context) LookupJobtemplateResultOutput {
	return o
}

func (o LookupJobtemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupJobtemplateResultOutput) DescriptionFormat() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) string { return v.DescriptionFormat }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupJobtemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupJobtemplateResultOutput) JobCategory() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) string { return v.JobCategory }).(pulumi.StringOutput)
}

func (o LookupJobtemplateResultOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) bool { return v.Locked }).(pulumi.BoolOutput)
}

func (o LookupJobtemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupJobtemplateResultOutput) ProviderType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) string { return v.ProviderType }).(pulumi.StringOutput)
}

func (o LookupJobtemplateResultOutput) Snippet() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) bool { return v.Snippet }).(pulumi.BoolOutput)
}

func (o LookupJobtemplateResultOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) string { return v.Template }).(pulumi.StringOutput)
}

func (o LookupJobtemplateResultOutput) TemplateInputs() GetJobtemplateTemplateInputArrayOutput {
	return o.ApplyT(func(v LookupJobtemplateResult) []GetJobtemplateTemplateInput { return v.TemplateInputs }).(GetJobtemplateTemplateInputArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupJobtemplateResultOutput{})
}
