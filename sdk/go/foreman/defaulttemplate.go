// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package foreman

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-foreman/sdk/go/foreman/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Defaulttemplate struct {
	pulumi.CustomResourceState

	// @SUMMARY Foreman representation of default Template. Default Templates serve as an identification string that defines
	// autonomy, authority, or control for a portion of a network.
	__meta_ pulumi.BoolOutput `pulumi:"__meta_"`
	// ID of the operating system to assign this Default Template to
	OperatingsystemId pulumi.IntPtrOutput `pulumi:"operatingsystemId"`
	// Id of the Provisioning Template
	ProvisioningtemplateId pulumi.IntPtrOutput `pulumi:"provisioningtemplateId"`
	// Template Kind Id to define the Default Template
	TemplatekindId pulumi.IntPtrOutput `pulumi:"templatekindId"`
}

// NewDefaulttemplate registers a new resource with the given unique name, arguments, and options.
func NewDefaulttemplate(ctx *pulumi.Context,
	name string, args *DefaulttemplateArgs, opts ...pulumi.ResourceOption) (*Defaulttemplate, error) {
	if args == nil {
		args = &DefaulttemplateArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Defaulttemplate
	err := ctx.RegisterResource("foreman:index/defaulttemplate:Defaulttemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaulttemplate gets an existing Defaulttemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaulttemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaulttemplateState, opts ...pulumi.ResourceOption) (*Defaulttemplate, error) {
	var resource Defaulttemplate
	err := ctx.ReadResource("foreman:index/defaulttemplate:Defaulttemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Defaulttemplate resources.
type defaulttemplateState struct {
	// @SUMMARY Foreman representation of default Template. Default Templates serve as an identification string that defines
	// autonomy, authority, or control for a portion of a network.
	__meta_ *bool `pulumi:"__meta_"`
	// ID of the operating system to assign this Default Template to
	OperatingsystemId *int `pulumi:"operatingsystemId"`
	// Id of the Provisioning Template
	ProvisioningtemplateId *int `pulumi:"provisioningtemplateId"`
	// Template Kind Id to define the Default Template
	TemplatekindId *int `pulumi:"templatekindId"`
}

type DefaulttemplateState struct {
	// @SUMMARY Foreman representation of default Template. Default Templates serve as an identification string that defines
	// autonomy, authority, or control for a portion of a network.
	__meta_ pulumi.BoolPtrInput
	// ID of the operating system to assign this Default Template to
	OperatingsystemId pulumi.IntPtrInput
	// Id of the Provisioning Template
	ProvisioningtemplateId pulumi.IntPtrInput
	// Template Kind Id to define the Default Template
	TemplatekindId pulumi.IntPtrInput
}

func (DefaulttemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaulttemplateState)(nil)).Elem()
}

type defaulttemplateArgs struct {
	// ID of the operating system to assign this Default Template to
	OperatingsystemId *int `pulumi:"operatingsystemId"`
	// Id of the Provisioning Template
	ProvisioningtemplateId *int `pulumi:"provisioningtemplateId"`
	// Template Kind Id to define the Default Template
	TemplatekindId *int `pulumi:"templatekindId"`
}

// The set of arguments for constructing a Defaulttemplate resource.
type DefaulttemplateArgs struct {
	// ID of the operating system to assign this Default Template to
	OperatingsystemId pulumi.IntPtrInput
	// Id of the Provisioning Template
	ProvisioningtemplateId pulumi.IntPtrInput
	// Template Kind Id to define the Default Template
	TemplatekindId pulumi.IntPtrInput
}

func (DefaulttemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaulttemplateArgs)(nil)).Elem()
}

type DefaulttemplateInput interface {
	pulumi.Input

	ToDefaulttemplateOutput() DefaulttemplateOutput
	ToDefaulttemplateOutputWithContext(ctx context.Context) DefaulttemplateOutput
}

func (*Defaulttemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**Defaulttemplate)(nil)).Elem()
}

func (i *Defaulttemplate) ToDefaulttemplateOutput() DefaulttemplateOutput {
	return i.ToDefaulttemplateOutputWithContext(context.Background())
}

func (i *Defaulttemplate) ToDefaulttemplateOutputWithContext(ctx context.Context) DefaulttemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaulttemplateOutput)
}

// DefaulttemplateArrayInput is an input type that accepts DefaulttemplateArray and DefaulttemplateArrayOutput values.
// You can construct a concrete instance of `DefaulttemplateArrayInput` via:
//
//	DefaulttemplateArray{ DefaulttemplateArgs{...} }
type DefaulttemplateArrayInput interface {
	pulumi.Input

	ToDefaulttemplateArrayOutput() DefaulttemplateArrayOutput
	ToDefaulttemplateArrayOutputWithContext(context.Context) DefaulttemplateArrayOutput
}

type DefaulttemplateArray []DefaulttemplateInput

func (DefaulttemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Defaulttemplate)(nil)).Elem()
}

func (i DefaulttemplateArray) ToDefaulttemplateArrayOutput() DefaulttemplateArrayOutput {
	return i.ToDefaulttemplateArrayOutputWithContext(context.Background())
}

func (i DefaulttemplateArray) ToDefaulttemplateArrayOutputWithContext(ctx context.Context) DefaulttemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaulttemplateArrayOutput)
}

// DefaulttemplateMapInput is an input type that accepts DefaulttemplateMap and DefaulttemplateMapOutput values.
// You can construct a concrete instance of `DefaulttemplateMapInput` via:
//
//	DefaulttemplateMap{ "key": DefaulttemplateArgs{...} }
type DefaulttemplateMapInput interface {
	pulumi.Input

	ToDefaulttemplateMapOutput() DefaulttemplateMapOutput
	ToDefaulttemplateMapOutputWithContext(context.Context) DefaulttemplateMapOutput
}

type DefaulttemplateMap map[string]DefaulttemplateInput

func (DefaulttemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Defaulttemplate)(nil)).Elem()
}

func (i DefaulttemplateMap) ToDefaulttemplateMapOutput() DefaulttemplateMapOutput {
	return i.ToDefaulttemplateMapOutputWithContext(context.Background())
}

func (i DefaulttemplateMap) ToDefaulttemplateMapOutputWithContext(ctx context.Context) DefaulttemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaulttemplateMapOutput)
}

type DefaulttemplateOutput struct{ *pulumi.OutputState }

func (DefaulttemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Defaulttemplate)(nil)).Elem()
}

func (o DefaulttemplateOutput) ToDefaulttemplateOutput() DefaulttemplateOutput {
	return o
}

func (o DefaulttemplateOutput) ToDefaulttemplateOutputWithContext(ctx context.Context) DefaulttemplateOutput {
	return o
}

// @SUMMARY Foreman representation of default Template. Default Templates serve as an identification string that defines
// autonomy, authority, or control for a portion of a network.
func (o DefaulttemplateOutput) __meta_() pulumi.BoolOutput {
	return o.ApplyT(func(v *Defaulttemplate) pulumi.BoolOutput { return v.__meta_ }).(pulumi.BoolOutput)
}

// ID of the operating system to assign this Default Template to
func (o DefaulttemplateOutput) OperatingsystemId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Defaulttemplate) pulumi.IntPtrOutput { return v.OperatingsystemId }).(pulumi.IntPtrOutput)
}

// Id of the Provisioning Template
func (o DefaulttemplateOutput) ProvisioningtemplateId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Defaulttemplate) pulumi.IntPtrOutput { return v.ProvisioningtemplateId }).(pulumi.IntPtrOutput)
}

// Template Kind Id to define the Default Template
func (o DefaulttemplateOutput) TemplatekindId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Defaulttemplate) pulumi.IntPtrOutput { return v.TemplatekindId }).(pulumi.IntPtrOutput)
}

type DefaulttemplateArrayOutput struct{ *pulumi.OutputState }

func (DefaulttemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Defaulttemplate)(nil)).Elem()
}

func (o DefaulttemplateArrayOutput) ToDefaulttemplateArrayOutput() DefaulttemplateArrayOutput {
	return o
}

func (o DefaulttemplateArrayOutput) ToDefaulttemplateArrayOutputWithContext(ctx context.Context) DefaulttemplateArrayOutput {
	return o
}

func (o DefaulttemplateArrayOutput) Index(i pulumi.IntInput) DefaulttemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Defaulttemplate {
		return vs[0].([]*Defaulttemplate)[vs[1].(int)]
	}).(DefaulttemplateOutput)
}

type DefaulttemplateMapOutput struct{ *pulumi.OutputState }

func (DefaulttemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Defaulttemplate)(nil)).Elem()
}

func (o DefaulttemplateMapOutput) ToDefaulttemplateMapOutput() DefaulttemplateMapOutput {
	return o
}

func (o DefaulttemplateMapOutput) ToDefaulttemplateMapOutputWithContext(ctx context.Context) DefaulttemplateMapOutput {
	return o
}

func (o DefaulttemplateMapOutput) MapIndex(k pulumi.StringInput) DefaulttemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Defaulttemplate {
		return vs[0].(map[string]*Defaulttemplate)[vs[1].(string)]
	}).(DefaulttemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DefaulttemplateInput)(nil)).Elem(), &Defaulttemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaulttemplateArrayInput)(nil)).Elem(), DefaulttemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaulttemplateMapInput)(nil)).Elem(), DefaulttemplateMap{})
	pulumi.RegisterOutputType(DefaulttemplateOutput{})
	pulumi.RegisterOutputType(DefaulttemplateArrayOutput{})
	pulumi.RegisterOutputType(DefaulttemplateMapOutput{})
}
