// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package foreman

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-foreman/sdk/go/foreman/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupKatelloContentView(ctx *pulumi.Context, args *LookupKatelloContentViewArgs, opts ...pulumi.InvokeOption) (*LookupKatelloContentViewResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKatelloContentViewResult
	err := ctx.Invoke("foreman:index/getKatelloContentView:getKatelloContentView", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKatelloContentView.
type LookupKatelloContentViewArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getKatelloContentView.
type LookupKatelloContentViewResult struct {
	AutoPublish  bool                          `pulumi:"autoPublish"`
	ComponentIds []int                         `pulumi:"componentIds"`
	Composite    bool                          `pulumi:"composite"`
	Description  string                        `pulumi:"description"`
	Filtered     bool                          `pulumi:"filtered"`
	Filters      []GetKatelloContentViewFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	Label             string `pulumi:"label"`
	LatestVersionId   int    `pulumi:"latestVersionId"`
	Name              string `pulumi:"name"`
	OrganizationId    int    `pulumi:"organizationId"`
	RepositoryIds     []int  `pulumi:"repositoryIds"`
	SolveDependencies bool   `pulumi:"solveDependencies"`
}

func LookupKatelloContentViewOutput(ctx *pulumi.Context, args LookupKatelloContentViewOutputArgs, opts ...pulumi.InvokeOption) LookupKatelloContentViewResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKatelloContentViewResultOutput, error) {
			args := v.(LookupKatelloContentViewArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("foreman:index/getKatelloContentView:getKatelloContentView", args, LookupKatelloContentViewResultOutput{}, options).(LookupKatelloContentViewResultOutput), nil
		}).(LookupKatelloContentViewResultOutput)
}

// A collection of arguments for invoking getKatelloContentView.
type LookupKatelloContentViewOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupKatelloContentViewOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKatelloContentViewArgs)(nil)).Elem()
}

// A collection of values returned by getKatelloContentView.
type LookupKatelloContentViewResultOutput struct{ *pulumi.OutputState }

func (LookupKatelloContentViewResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKatelloContentViewResult)(nil)).Elem()
}

func (o LookupKatelloContentViewResultOutput) ToLookupKatelloContentViewResultOutput() LookupKatelloContentViewResultOutput {
	return o
}

func (o LookupKatelloContentViewResultOutput) ToLookupKatelloContentViewResultOutputWithContext(ctx context.Context) LookupKatelloContentViewResultOutput {
	return o
}

func (o LookupKatelloContentViewResultOutput) AutoPublish() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) bool { return v.AutoPublish }).(pulumi.BoolOutput)
}

func (o LookupKatelloContentViewResultOutput) ComponentIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) []int { return v.ComponentIds }).(pulumi.IntArrayOutput)
}

func (o LookupKatelloContentViewResultOutput) Composite() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) bool { return v.Composite }).(pulumi.BoolOutput)
}

func (o LookupKatelloContentViewResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupKatelloContentViewResultOutput) Filtered() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) bool { return v.Filtered }).(pulumi.BoolOutput)
}

func (o LookupKatelloContentViewResultOutput) Filters() GetKatelloContentViewFilterArrayOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) []GetKatelloContentViewFilter { return v.Filters }).(GetKatelloContentViewFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupKatelloContentViewResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKatelloContentViewResultOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) string { return v.Label }).(pulumi.StringOutput)
}

func (o LookupKatelloContentViewResultOutput) LatestVersionId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) int { return v.LatestVersionId }).(pulumi.IntOutput)
}

func (o LookupKatelloContentViewResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupKatelloContentViewResultOutput) OrganizationId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) int { return v.OrganizationId }).(pulumi.IntOutput)
}

func (o LookupKatelloContentViewResultOutput) RepositoryIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) []int { return v.RepositoryIds }).(pulumi.IntArrayOutput)
}

func (o LookupKatelloContentViewResultOutput) SolveDependencies() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKatelloContentViewResult) bool { return v.SolveDependencies }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKatelloContentViewResultOutput{})
}
