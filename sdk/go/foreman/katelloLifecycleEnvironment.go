// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package foreman

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-foreman/sdk/go/foreman/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KatelloLifecycleEnvironment struct {
	pulumi.CustomResourceState

	// @SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.
	__meta_ pulumi.BoolOutput `pulumi:"__meta_"`
	// Description for the lifecycle environment
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
	// spaces replacement. @EXAMPLE
	Label pulumi.StringOutput `pulumi:"label"`
	// Specifies if this environment is the special 'Library' root environment.
	Library pulumi.BoolOutput `pulumi:"library"`
	// Name of the lifecycle environment. @EXAMPLE "My new env"
	Name pulumi.StringOutput `pulumi:"name"`
	// @EXAMPLE 1
	OrganizationId pulumi.IntOutput `pulumi:"organizationId"`
	// ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
	// data.foreman_katello_lifecycle_environment.library.id
	PriorId     pulumi.IntOutput `pulumi:"priorId"`
	SuccessorId pulumi.IntOutput `pulumi:"successorId"`
}

// NewKatelloLifecycleEnvironment registers a new resource with the given unique name, arguments, and options.
func NewKatelloLifecycleEnvironment(ctx *pulumi.Context,
	name string, args *KatelloLifecycleEnvironmentArgs, opts ...pulumi.ResourceOption) (*KatelloLifecycleEnvironment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.PriorId == nil {
		return nil, errors.New("invalid value for required argument 'PriorId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KatelloLifecycleEnvironment
	err := ctx.RegisterResource("foreman:index/katelloLifecycleEnvironment:KatelloLifecycleEnvironment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKatelloLifecycleEnvironment gets an existing KatelloLifecycleEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKatelloLifecycleEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KatelloLifecycleEnvironmentState, opts ...pulumi.ResourceOption) (*KatelloLifecycleEnvironment, error) {
	var resource KatelloLifecycleEnvironment
	err := ctx.ReadResource("foreman:index/katelloLifecycleEnvironment:KatelloLifecycleEnvironment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KatelloLifecycleEnvironment resources.
type katelloLifecycleEnvironmentState struct {
	// @SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.
	__meta_ *bool `pulumi:"__meta_"`
	// Description for the lifecycle environment
	Description *string `pulumi:"description"`
	// Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
	// spaces replacement. @EXAMPLE
	Label *string `pulumi:"label"`
	// Specifies if this environment is the special 'Library' root environment.
	Library *bool `pulumi:"library"`
	// Name of the lifecycle environment. @EXAMPLE "My new env"
	Name *string `pulumi:"name"`
	// @EXAMPLE 1
	OrganizationId *int `pulumi:"organizationId"`
	// ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
	// data.foreman_katello_lifecycle_environment.library.id
	PriorId     *int `pulumi:"priorId"`
	SuccessorId *int `pulumi:"successorId"`
}

type KatelloLifecycleEnvironmentState struct {
	// @SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.
	__meta_ pulumi.BoolPtrInput
	// Description for the lifecycle environment
	Description pulumi.StringPtrInput
	// Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
	// spaces replacement. @EXAMPLE
	Label pulumi.StringPtrInput
	// Specifies if this environment is the special 'Library' root environment.
	Library pulumi.BoolPtrInput
	// Name of the lifecycle environment. @EXAMPLE "My new env"
	Name pulumi.StringPtrInput
	// @EXAMPLE 1
	OrganizationId pulumi.IntPtrInput
	// ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
	// data.foreman_katello_lifecycle_environment.library.id
	PriorId     pulumi.IntPtrInput
	SuccessorId pulumi.IntPtrInput
}

func (KatelloLifecycleEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*katelloLifecycleEnvironmentState)(nil)).Elem()
}

type katelloLifecycleEnvironmentArgs struct {
	// Description for the lifecycle environment
	Description *string `pulumi:"description"`
	// Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
	// spaces replacement. @EXAMPLE
	Label *string `pulumi:"label"`
	// Name of the lifecycle environment. @EXAMPLE "My new env"
	Name *string `pulumi:"name"`
	// @EXAMPLE 1
	OrganizationId int `pulumi:"organizationId"`
	// ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
	// data.foreman_katello_lifecycle_environment.library.id
	PriorId int `pulumi:"priorId"`
}

// The set of arguments for constructing a KatelloLifecycleEnvironment resource.
type KatelloLifecycleEnvironmentArgs struct {
	// Description for the lifecycle environment
	Description pulumi.StringPtrInput
	// Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
	// spaces replacement. @EXAMPLE
	Label pulumi.StringPtrInput
	// Name of the lifecycle environment. @EXAMPLE "My new env"
	Name pulumi.StringPtrInput
	// @EXAMPLE 1
	OrganizationId pulumi.IntInput
	// ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
	// data.foreman_katello_lifecycle_environment.library.id
	PriorId pulumi.IntInput
}

func (KatelloLifecycleEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*katelloLifecycleEnvironmentArgs)(nil)).Elem()
}

type KatelloLifecycleEnvironmentInput interface {
	pulumi.Input

	ToKatelloLifecycleEnvironmentOutput() KatelloLifecycleEnvironmentOutput
	ToKatelloLifecycleEnvironmentOutputWithContext(ctx context.Context) KatelloLifecycleEnvironmentOutput
}

func (*KatelloLifecycleEnvironment) ElementType() reflect.Type {
	return reflect.TypeOf((**KatelloLifecycleEnvironment)(nil)).Elem()
}

func (i *KatelloLifecycleEnvironment) ToKatelloLifecycleEnvironmentOutput() KatelloLifecycleEnvironmentOutput {
	return i.ToKatelloLifecycleEnvironmentOutputWithContext(context.Background())
}

func (i *KatelloLifecycleEnvironment) ToKatelloLifecycleEnvironmentOutputWithContext(ctx context.Context) KatelloLifecycleEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KatelloLifecycleEnvironmentOutput)
}

// KatelloLifecycleEnvironmentArrayInput is an input type that accepts KatelloLifecycleEnvironmentArray and KatelloLifecycleEnvironmentArrayOutput values.
// You can construct a concrete instance of `KatelloLifecycleEnvironmentArrayInput` via:
//
//	KatelloLifecycleEnvironmentArray{ KatelloLifecycleEnvironmentArgs{...} }
type KatelloLifecycleEnvironmentArrayInput interface {
	pulumi.Input

	ToKatelloLifecycleEnvironmentArrayOutput() KatelloLifecycleEnvironmentArrayOutput
	ToKatelloLifecycleEnvironmentArrayOutputWithContext(context.Context) KatelloLifecycleEnvironmentArrayOutput
}

type KatelloLifecycleEnvironmentArray []KatelloLifecycleEnvironmentInput

func (KatelloLifecycleEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KatelloLifecycleEnvironment)(nil)).Elem()
}

func (i KatelloLifecycleEnvironmentArray) ToKatelloLifecycleEnvironmentArrayOutput() KatelloLifecycleEnvironmentArrayOutput {
	return i.ToKatelloLifecycleEnvironmentArrayOutputWithContext(context.Background())
}

func (i KatelloLifecycleEnvironmentArray) ToKatelloLifecycleEnvironmentArrayOutputWithContext(ctx context.Context) KatelloLifecycleEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KatelloLifecycleEnvironmentArrayOutput)
}

// KatelloLifecycleEnvironmentMapInput is an input type that accepts KatelloLifecycleEnvironmentMap and KatelloLifecycleEnvironmentMapOutput values.
// You can construct a concrete instance of `KatelloLifecycleEnvironmentMapInput` via:
//
//	KatelloLifecycleEnvironmentMap{ "key": KatelloLifecycleEnvironmentArgs{...} }
type KatelloLifecycleEnvironmentMapInput interface {
	pulumi.Input

	ToKatelloLifecycleEnvironmentMapOutput() KatelloLifecycleEnvironmentMapOutput
	ToKatelloLifecycleEnvironmentMapOutputWithContext(context.Context) KatelloLifecycleEnvironmentMapOutput
}

type KatelloLifecycleEnvironmentMap map[string]KatelloLifecycleEnvironmentInput

func (KatelloLifecycleEnvironmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KatelloLifecycleEnvironment)(nil)).Elem()
}

func (i KatelloLifecycleEnvironmentMap) ToKatelloLifecycleEnvironmentMapOutput() KatelloLifecycleEnvironmentMapOutput {
	return i.ToKatelloLifecycleEnvironmentMapOutputWithContext(context.Background())
}

func (i KatelloLifecycleEnvironmentMap) ToKatelloLifecycleEnvironmentMapOutputWithContext(ctx context.Context) KatelloLifecycleEnvironmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KatelloLifecycleEnvironmentMapOutput)
}

type KatelloLifecycleEnvironmentOutput struct{ *pulumi.OutputState }

func (KatelloLifecycleEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KatelloLifecycleEnvironment)(nil)).Elem()
}

func (o KatelloLifecycleEnvironmentOutput) ToKatelloLifecycleEnvironmentOutput() KatelloLifecycleEnvironmentOutput {
	return o
}

func (o KatelloLifecycleEnvironmentOutput) ToKatelloLifecycleEnvironmentOutputWithContext(ctx context.Context) KatelloLifecycleEnvironmentOutput {
	return o
}

// @SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.
func (o KatelloLifecycleEnvironmentOutput) __meta_() pulumi.BoolOutput {
	return o.ApplyT(func(v *KatelloLifecycleEnvironment) pulumi.BoolOutput { return v.__meta_ }).(pulumi.BoolOutput)
}

// Description for the lifecycle environment
func (o KatelloLifecycleEnvironmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KatelloLifecycleEnvironment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as
// spaces replacement. @EXAMPLE
func (o KatelloLifecycleEnvironmentOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *KatelloLifecycleEnvironment) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// Specifies if this environment is the special 'Library' root environment.
func (o KatelloLifecycleEnvironmentOutput) Library() pulumi.BoolOutput {
	return o.ApplyT(func(v *KatelloLifecycleEnvironment) pulumi.BoolOutput { return v.Library }).(pulumi.BoolOutput)
}

// Name of the lifecycle environment. @EXAMPLE "My new env"
func (o KatelloLifecycleEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KatelloLifecycleEnvironment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// @EXAMPLE 1
func (o KatelloLifecycleEnvironmentOutput) OrganizationId() pulumi.IntOutput {
	return o.ApplyT(func(v *KatelloLifecycleEnvironment) pulumi.IntOutput { return v.OrganizationId }).(pulumi.IntOutput)
}

// ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE
// data.foreman_katello_lifecycle_environment.library.id
func (o KatelloLifecycleEnvironmentOutput) PriorId() pulumi.IntOutput {
	return o.ApplyT(func(v *KatelloLifecycleEnvironment) pulumi.IntOutput { return v.PriorId }).(pulumi.IntOutput)
}

func (o KatelloLifecycleEnvironmentOutput) SuccessorId() pulumi.IntOutput {
	return o.ApplyT(func(v *KatelloLifecycleEnvironment) pulumi.IntOutput { return v.SuccessorId }).(pulumi.IntOutput)
}

type KatelloLifecycleEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (KatelloLifecycleEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KatelloLifecycleEnvironment)(nil)).Elem()
}

func (o KatelloLifecycleEnvironmentArrayOutput) ToKatelloLifecycleEnvironmentArrayOutput() KatelloLifecycleEnvironmentArrayOutput {
	return o
}

func (o KatelloLifecycleEnvironmentArrayOutput) ToKatelloLifecycleEnvironmentArrayOutputWithContext(ctx context.Context) KatelloLifecycleEnvironmentArrayOutput {
	return o
}

func (o KatelloLifecycleEnvironmentArrayOutput) Index(i pulumi.IntInput) KatelloLifecycleEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KatelloLifecycleEnvironment {
		return vs[0].([]*KatelloLifecycleEnvironment)[vs[1].(int)]
	}).(KatelloLifecycleEnvironmentOutput)
}

type KatelloLifecycleEnvironmentMapOutput struct{ *pulumi.OutputState }

func (KatelloLifecycleEnvironmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KatelloLifecycleEnvironment)(nil)).Elem()
}

func (o KatelloLifecycleEnvironmentMapOutput) ToKatelloLifecycleEnvironmentMapOutput() KatelloLifecycleEnvironmentMapOutput {
	return o
}

func (o KatelloLifecycleEnvironmentMapOutput) ToKatelloLifecycleEnvironmentMapOutputWithContext(ctx context.Context) KatelloLifecycleEnvironmentMapOutput {
	return o
}

func (o KatelloLifecycleEnvironmentMapOutput) MapIndex(k pulumi.StringInput) KatelloLifecycleEnvironmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KatelloLifecycleEnvironment {
		return vs[0].(map[string]*KatelloLifecycleEnvironment)[vs[1].(string)]
	}).(KatelloLifecycleEnvironmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KatelloLifecycleEnvironmentInput)(nil)).Elem(), &KatelloLifecycleEnvironment{})
	pulumi.RegisterInputType(reflect.TypeOf((*KatelloLifecycleEnvironmentArrayInput)(nil)).Elem(), KatelloLifecycleEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KatelloLifecycleEnvironmentMapInput)(nil)).Elem(), KatelloLifecycleEnvironmentMap{})
	pulumi.RegisterOutputType(KatelloLifecycleEnvironmentOutput{})
	pulumi.RegisterOutputType(KatelloLifecycleEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(KatelloLifecycleEnvironmentMapOutput{})
}
