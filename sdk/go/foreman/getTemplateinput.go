// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package foreman

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-foreman/sdk/go/foreman/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupTemplateinput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupTemplateinputResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTemplateinputResult
	err := ctx.Invoke("foreman:index/getTemplateinput:getTemplateinput", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getTemplateinput.
type LookupTemplateinputResult struct {
	Advanced            bool   `pulumi:"advanced"`
	Default             string `pulumi:"default"`
	Description         string `pulumi:"description"`
	FactName            string `pulumi:"factName"`
	HiddenValue         bool   `pulumi:"hiddenValue"`
	Id                  string `pulumi:"id"`
	InputType           string `pulumi:"inputType"`
	Name                string `pulumi:"name"`
	PuppetClassName     string `pulumi:"puppetClassName"`
	PuppetParameterName string `pulumi:"puppetParameterName"`
	Required            bool   `pulumi:"required"`
	ResourceType        string `pulumi:"resourceType"`
	TemplateId          int    `pulumi:"templateId"`
	ValueType           string `pulumi:"valueType"`
	VariableName        string `pulumi:"variableName"`
}

func LookupTemplateinputOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) LookupTemplateinputResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (LookupTemplateinputResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("foreman:index/getTemplateinput:getTemplateinput", nil, LookupTemplateinputResultOutput{}, options).(LookupTemplateinputResultOutput), nil
	}).(LookupTemplateinputResultOutput)
}

// A collection of values returned by getTemplateinput.
type LookupTemplateinputResultOutput struct{ *pulumi.OutputState }

func (LookupTemplateinputResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTemplateinputResult)(nil)).Elem()
}

func (o LookupTemplateinputResultOutput) ToLookupTemplateinputResultOutput() LookupTemplateinputResultOutput {
	return o
}

func (o LookupTemplateinputResultOutput) ToLookupTemplateinputResultOutputWithContext(ctx context.Context) LookupTemplateinputResultOutput {
	return o
}

func (o LookupTemplateinputResultOutput) Advanced() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) bool { return v.Advanced }).(pulumi.BoolOutput)
}

func (o LookupTemplateinputResultOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.Default }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) FactName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.FactName }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) HiddenValue() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) bool { return v.HiddenValue }).(pulumi.BoolOutput)
}

func (o LookupTemplateinputResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) InputType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.InputType }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) PuppetClassName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.PuppetClassName }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) PuppetParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.PuppetParameterName }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) bool { return v.Required }).(pulumi.BoolOutput)
}

func (o LookupTemplateinputResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) TemplateId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) int { return v.TemplateId }).(pulumi.IntOutput)
}

func (o LookupTemplateinputResultOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.ValueType }).(pulumi.StringOutput)
}

func (o LookupTemplateinputResultOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateinputResult) string { return v.VariableName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTemplateinputResultOutput{})
}
