// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package foreman

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-foreman/sdk/go/foreman/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ComputeprofileComputeAttribute struct {
	// ID of the compute resource
	ComputeResourceId int `pulumi:"computeResourceId"`
	// ID of the compute_attribute
	Id *int `pulumi:"id"`
	// Auto-generated name of the compute attribute
	Name *string `pulumi:"name"`
	// VM attributes as JSON
	VmAttrs map[string]string `pulumi:"vmAttrs"`
}

// ComputeprofileComputeAttributeInput is an input type that accepts ComputeprofileComputeAttributeArgs and ComputeprofileComputeAttributeOutput values.
// You can construct a concrete instance of `ComputeprofileComputeAttributeInput` via:
//
//	ComputeprofileComputeAttributeArgs{...}
type ComputeprofileComputeAttributeInput interface {
	pulumi.Input

	ToComputeprofileComputeAttributeOutput() ComputeprofileComputeAttributeOutput
	ToComputeprofileComputeAttributeOutputWithContext(context.Context) ComputeprofileComputeAttributeOutput
}

type ComputeprofileComputeAttributeArgs struct {
	// ID of the compute resource
	ComputeResourceId pulumi.IntInput `pulumi:"computeResourceId"`
	// ID of the compute_attribute
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Auto-generated name of the compute attribute
	Name pulumi.StringPtrInput `pulumi:"name"`
	// VM attributes as JSON
	VmAttrs pulumi.StringMapInput `pulumi:"vmAttrs"`
}

func (ComputeprofileComputeAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeprofileComputeAttribute)(nil)).Elem()
}

func (i ComputeprofileComputeAttributeArgs) ToComputeprofileComputeAttributeOutput() ComputeprofileComputeAttributeOutput {
	return i.ToComputeprofileComputeAttributeOutputWithContext(context.Background())
}

func (i ComputeprofileComputeAttributeArgs) ToComputeprofileComputeAttributeOutputWithContext(ctx context.Context) ComputeprofileComputeAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeprofileComputeAttributeOutput)
}

// ComputeprofileComputeAttributeArrayInput is an input type that accepts ComputeprofileComputeAttributeArray and ComputeprofileComputeAttributeArrayOutput values.
// You can construct a concrete instance of `ComputeprofileComputeAttributeArrayInput` via:
//
//	ComputeprofileComputeAttributeArray{ ComputeprofileComputeAttributeArgs{...} }
type ComputeprofileComputeAttributeArrayInput interface {
	pulumi.Input

	ToComputeprofileComputeAttributeArrayOutput() ComputeprofileComputeAttributeArrayOutput
	ToComputeprofileComputeAttributeArrayOutputWithContext(context.Context) ComputeprofileComputeAttributeArrayOutput
}

type ComputeprofileComputeAttributeArray []ComputeprofileComputeAttributeInput

func (ComputeprofileComputeAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeprofileComputeAttribute)(nil)).Elem()
}

func (i ComputeprofileComputeAttributeArray) ToComputeprofileComputeAttributeArrayOutput() ComputeprofileComputeAttributeArrayOutput {
	return i.ToComputeprofileComputeAttributeArrayOutputWithContext(context.Background())
}

func (i ComputeprofileComputeAttributeArray) ToComputeprofileComputeAttributeArrayOutputWithContext(ctx context.Context) ComputeprofileComputeAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeprofileComputeAttributeArrayOutput)
}

type ComputeprofileComputeAttributeOutput struct{ *pulumi.OutputState }

func (ComputeprofileComputeAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeprofileComputeAttribute)(nil)).Elem()
}

func (o ComputeprofileComputeAttributeOutput) ToComputeprofileComputeAttributeOutput() ComputeprofileComputeAttributeOutput {
	return o
}

func (o ComputeprofileComputeAttributeOutput) ToComputeprofileComputeAttributeOutputWithContext(ctx context.Context) ComputeprofileComputeAttributeOutput {
	return o
}

// ID of the compute resource
func (o ComputeprofileComputeAttributeOutput) ComputeResourceId() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeprofileComputeAttribute) int { return v.ComputeResourceId }).(pulumi.IntOutput)
}

// ID of the compute_attribute
func (o ComputeprofileComputeAttributeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeprofileComputeAttribute) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Auto-generated name of the compute attribute
func (o ComputeprofileComputeAttributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeprofileComputeAttribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// VM attributes as JSON
func (o ComputeprofileComputeAttributeOutput) VmAttrs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeprofileComputeAttribute) map[string]string { return v.VmAttrs }).(pulumi.StringMapOutput)
}

type ComputeprofileComputeAttributeArrayOutput struct{ *pulumi.OutputState }

func (ComputeprofileComputeAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeprofileComputeAttribute)(nil)).Elem()
}

func (o ComputeprofileComputeAttributeArrayOutput) ToComputeprofileComputeAttributeArrayOutput() ComputeprofileComputeAttributeArrayOutput {
	return o
}

func (o ComputeprofileComputeAttributeArrayOutput) ToComputeprofileComputeAttributeArrayOutputWithContext(ctx context.Context) ComputeprofileComputeAttributeArrayOutput {
	return o
}

func (o ComputeprofileComputeAttributeArrayOutput) Index(i pulumi.IntInput) ComputeprofileComputeAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeprofileComputeAttribute {
		return vs[0].([]ComputeprofileComputeAttribute)[vs[1].(int)]
	}).(ComputeprofileComputeAttributeOutput)
}

type HostInterfacesAttribute struct {
	// Identifiers of attached interfaces, e.g. 'eth1', 'eth2' as comma-separated list
	AttachedDevices *string `pulumi:"attachedDevices"`
	// Identifier of the interface to which this interface belongs.
	AttachedTo *string `pulumi:"attachedTo"`
	// Provider used for BMC/IMPI functionality. Values include: `"IPMI"`
	BmcProvider *string `pulumi:"bmcProvider"`
	// Hypervisor specific interface options
	ComputeAttributes map[string]string `pulumi:"computeAttributes"`
	// Unique identifier for the interface.
	Id *int `pulumi:"id"`
	// Identifier of this interface local to the host.
	Identifier *string `pulumi:"identifier"`
	// IP address associated with the interface.
	Ip *string `pulumi:"ip"`
	// MAC address associated with the interface.
	Mac *string `pulumi:"mac"`
	// Whether or not this interface is managed by Foreman.
	Managed *bool `pulumi:"managed"`
	// Name of the interface
	Name *string `pulumi:"name"`
	// Associated password used for BMC/IPMI functionality.
	Password *string `pulumi:"password"`
	// Whether or not this is the primary interface.
	Primary *bool `pulumi:"primary"`
	// Whether or not this interface is used to provision the host.
	Provision *bool `pulumi:"provision"`
	// ID of the subnet to associate with this interface.
	SubnetId *int `pulumi:"subnetId"`
	// The type of interface. Values include: `"interface"`, `"bmc"`, `"bond"`, `"bridge"`.
	Type *string `pulumi:"type"`
	// Username used for BMC/IPMI functionality.
	Username *string `pulumi:"username"`
	// Whether or not this is a virtual interface.
	Virtual *bool `pulumi:"virtual"`
}

// HostInterfacesAttributeInput is an input type that accepts HostInterfacesAttributeArgs and HostInterfacesAttributeOutput values.
// You can construct a concrete instance of `HostInterfacesAttributeInput` via:
//
//	HostInterfacesAttributeArgs{...}
type HostInterfacesAttributeInput interface {
	pulumi.Input

	ToHostInterfacesAttributeOutput() HostInterfacesAttributeOutput
	ToHostInterfacesAttributeOutputWithContext(context.Context) HostInterfacesAttributeOutput
}

type HostInterfacesAttributeArgs struct {
	// Identifiers of attached interfaces, e.g. 'eth1', 'eth2' as comma-separated list
	AttachedDevices pulumi.StringPtrInput `pulumi:"attachedDevices"`
	// Identifier of the interface to which this interface belongs.
	AttachedTo pulumi.StringPtrInput `pulumi:"attachedTo"`
	// Provider used for BMC/IMPI functionality. Values include: `"IPMI"`
	BmcProvider pulumi.StringPtrInput `pulumi:"bmcProvider"`
	// Hypervisor specific interface options
	ComputeAttributes pulumi.StringMapInput `pulumi:"computeAttributes"`
	// Unique identifier for the interface.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Identifier of this interface local to the host.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// IP address associated with the interface.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// MAC address associated with the interface.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Whether or not this interface is managed by Foreman.
	Managed pulumi.BoolPtrInput `pulumi:"managed"`
	// Name of the interface
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Associated password used for BMC/IPMI functionality.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Whether or not this is the primary interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Whether or not this interface is used to provision the host.
	Provision pulumi.BoolPtrInput `pulumi:"provision"`
	// ID of the subnet to associate with this interface.
	SubnetId pulumi.IntPtrInput `pulumi:"subnetId"`
	// The type of interface. Values include: `"interface"`, `"bmc"`, `"bond"`, `"bridge"`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Username used for BMC/IPMI functionality.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Whether or not this is a virtual interface.
	Virtual pulumi.BoolPtrInput `pulumi:"virtual"`
}

func (HostInterfacesAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostInterfacesAttribute)(nil)).Elem()
}

func (i HostInterfacesAttributeArgs) ToHostInterfacesAttributeOutput() HostInterfacesAttributeOutput {
	return i.ToHostInterfacesAttributeOutputWithContext(context.Background())
}

func (i HostInterfacesAttributeArgs) ToHostInterfacesAttributeOutputWithContext(ctx context.Context) HostInterfacesAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostInterfacesAttributeOutput)
}

// HostInterfacesAttributeArrayInput is an input type that accepts HostInterfacesAttributeArray and HostInterfacesAttributeArrayOutput values.
// You can construct a concrete instance of `HostInterfacesAttributeArrayInput` via:
//
//	HostInterfacesAttributeArray{ HostInterfacesAttributeArgs{...} }
type HostInterfacesAttributeArrayInput interface {
	pulumi.Input

	ToHostInterfacesAttributeArrayOutput() HostInterfacesAttributeArrayOutput
	ToHostInterfacesAttributeArrayOutputWithContext(context.Context) HostInterfacesAttributeArrayOutput
}

type HostInterfacesAttributeArray []HostInterfacesAttributeInput

func (HostInterfacesAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostInterfacesAttribute)(nil)).Elem()
}

func (i HostInterfacesAttributeArray) ToHostInterfacesAttributeArrayOutput() HostInterfacesAttributeArrayOutput {
	return i.ToHostInterfacesAttributeArrayOutputWithContext(context.Background())
}

func (i HostInterfacesAttributeArray) ToHostInterfacesAttributeArrayOutputWithContext(ctx context.Context) HostInterfacesAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostInterfacesAttributeArrayOutput)
}

type HostInterfacesAttributeOutput struct{ *pulumi.OutputState }

func (HostInterfacesAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostInterfacesAttribute)(nil)).Elem()
}

func (o HostInterfacesAttributeOutput) ToHostInterfacesAttributeOutput() HostInterfacesAttributeOutput {
	return o
}

func (o HostInterfacesAttributeOutput) ToHostInterfacesAttributeOutputWithContext(ctx context.Context) HostInterfacesAttributeOutput {
	return o
}

// Identifiers of attached interfaces, e.g. 'eth1', 'eth2' as comma-separated list
func (o HostInterfacesAttributeOutput) AttachedDevices() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.AttachedDevices }).(pulumi.StringPtrOutput)
}

// Identifier of the interface to which this interface belongs.
func (o HostInterfacesAttributeOutput) AttachedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.AttachedTo }).(pulumi.StringPtrOutput)
}

// Provider used for BMC/IMPI functionality. Values include: `"IPMI"`
func (o HostInterfacesAttributeOutput) BmcProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.BmcProvider }).(pulumi.StringPtrOutput)
}

// Hypervisor specific interface options
func (o HostInterfacesAttributeOutput) ComputeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) map[string]string { return v.ComputeAttributes }).(pulumi.StringMapOutput)
}

// Unique identifier for the interface.
func (o HostInterfacesAttributeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Identifier of this interface local to the host.
func (o HostInterfacesAttributeOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// IP address associated with the interface.
func (o HostInterfacesAttributeOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// MAC address associated with the interface.
func (o HostInterfacesAttributeOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Whether or not this interface is managed by Foreman.
func (o HostInterfacesAttributeOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *bool { return v.Managed }).(pulumi.BoolPtrOutput)
}

// Name of the interface
func (o HostInterfacesAttributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Associated password used for BMC/IPMI functionality.
func (o HostInterfacesAttributeOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Whether or not this is the primary interface.
func (o HostInterfacesAttributeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Whether or not this interface is used to provision the host.
func (o HostInterfacesAttributeOutput) Provision() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *bool { return v.Provision }).(pulumi.BoolPtrOutput)
}

// ID of the subnet to associate with this interface.
func (o HostInterfacesAttributeOutput) SubnetId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *int { return v.SubnetId }).(pulumi.IntPtrOutput)
}

// The type of interface. Values include: `"interface"`, `"bmc"`, `"bond"`, `"bridge"`.
func (o HostInterfacesAttributeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Username used for BMC/IPMI functionality.
func (o HostInterfacesAttributeOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Whether or not this is a virtual interface.
func (o HostInterfacesAttributeOutput) Virtual() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostInterfacesAttribute) *bool { return v.Virtual }).(pulumi.BoolPtrOutput)
}

type HostInterfacesAttributeArrayOutput struct{ *pulumi.OutputState }

func (HostInterfacesAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostInterfacesAttribute)(nil)).Elem()
}

func (o HostInterfacesAttributeArrayOutput) ToHostInterfacesAttributeArrayOutput() HostInterfacesAttributeArrayOutput {
	return o
}

func (o HostInterfacesAttributeArrayOutput) ToHostInterfacesAttributeArrayOutputWithContext(ctx context.Context) HostInterfacesAttributeArrayOutput {
	return o
}

func (o HostInterfacesAttributeArrayOutput) Index(i pulumi.IntInput) HostInterfacesAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostInterfacesAttribute {
		return vs[0].([]HostInterfacesAttribute)[vs[1].(int)]
	}).(HostInterfacesAttributeOutput)
}

type JobtemplateTemplateInput struct {
	// @SUMMARY Foreman representation of a template input.
	__meta_     *bool   `pulumi:"__meta_"`
	Advanced    *bool   `pulumi:"advanced"`
	Default     string  `pulumi:"default"`
	Description *string `pulumi:"description"`
	FactName    *string `pulumi:"factName"`
	HiddenValue *bool   `pulumi:"hiddenValue"`
	Id          *string `pulumi:"id"`
	InputType   *string `pulumi:"inputType"`
	// The name of the template input
	Name                string  `pulumi:"name"`
	PuppetClassName     *string `pulumi:"puppetClassName"`
	PuppetParameterName *string `pulumi:"puppetParameterName"`
	Required            *bool   `pulumi:"required"`
	ResourceType        *string `pulumi:"resourceType"`
	TemplateId          *int    `pulumi:"templateId"`
	ValueType           *string `pulumi:"valueType"`
	VariableName        *string `pulumi:"variableName"`
}

// JobtemplateTemplateInputInput is an input type that accepts JobtemplateTemplateInputArgs and JobtemplateTemplateInputOutput values.
// You can construct a concrete instance of `JobtemplateTemplateInputInput` via:
//
//	JobtemplateTemplateInputArgs{...}
type JobtemplateTemplateInputInput interface {
	pulumi.Input

	ToJobtemplateTemplateInputOutput() JobtemplateTemplateInputOutput
	ToJobtemplateTemplateInputOutputWithContext(context.Context) JobtemplateTemplateInputOutput
}

type JobtemplateTemplateInputArgs struct {
	// @SUMMARY Foreman representation of a template input.
	__meta_     pulumi.BoolPtrInput   `pulumi:"__meta_"`
	Advanced    pulumi.BoolPtrInput   `pulumi:"advanced"`
	Default     pulumi.StringInput    `pulumi:"default"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	FactName    pulumi.StringPtrInput `pulumi:"factName"`
	HiddenValue pulumi.BoolPtrInput   `pulumi:"hiddenValue"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	InputType   pulumi.StringPtrInput `pulumi:"inputType"`
	// The name of the template input
	Name                pulumi.StringInput    `pulumi:"name"`
	PuppetClassName     pulumi.StringPtrInput `pulumi:"puppetClassName"`
	PuppetParameterName pulumi.StringPtrInput `pulumi:"puppetParameterName"`
	Required            pulumi.BoolPtrInput   `pulumi:"required"`
	ResourceType        pulumi.StringPtrInput `pulumi:"resourceType"`
	TemplateId          pulumi.IntPtrInput    `pulumi:"templateId"`
	ValueType           pulumi.StringPtrInput `pulumi:"valueType"`
	VariableName        pulumi.StringPtrInput `pulumi:"variableName"`
}

func (JobtemplateTemplateInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobtemplateTemplateInput)(nil)).Elem()
}

func (i JobtemplateTemplateInputArgs) ToJobtemplateTemplateInputOutput() JobtemplateTemplateInputOutput {
	return i.ToJobtemplateTemplateInputOutputWithContext(context.Background())
}

func (i JobtemplateTemplateInputArgs) ToJobtemplateTemplateInputOutputWithContext(ctx context.Context) JobtemplateTemplateInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobtemplateTemplateInputOutput)
}

// JobtemplateTemplateInputArrayInput is an input type that accepts JobtemplateTemplateInputArray and JobtemplateTemplateInputArrayOutput values.
// You can construct a concrete instance of `JobtemplateTemplateInputArrayInput` via:
//
//	JobtemplateTemplateInputArray{ JobtemplateTemplateInputArgs{...} }
type JobtemplateTemplateInputArrayInput interface {
	pulumi.Input

	ToJobtemplateTemplateInputArrayOutput() JobtemplateTemplateInputArrayOutput
	ToJobtemplateTemplateInputArrayOutputWithContext(context.Context) JobtemplateTemplateInputArrayOutput
}

type JobtemplateTemplateInputArray []JobtemplateTemplateInputInput

func (JobtemplateTemplateInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobtemplateTemplateInput)(nil)).Elem()
}

func (i JobtemplateTemplateInputArray) ToJobtemplateTemplateInputArrayOutput() JobtemplateTemplateInputArrayOutput {
	return i.ToJobtemplateTemplateInputArrayOutputWithContext(context.Background())
}

func (i JobtemplateTemplateInputArray) ToJobtemplateTemplateInputArrayOutputWithContext(ctx context.Context) JobtemplateTemplateInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobtemplateTemplateInputArrayOutput)
}

type JobtemplateTemplateInputOutput struct{ *pulumi.OutputState }

func (JobtemplateTemplateInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobtemplateTemplateInput)(nil)).Elem()
}

func (o JobtemplateTemplateInputOutput) ToJobtemplateTemplateInputOutput() JobtemplateTemplateInputOutput {
	return o
}

func (o JobtemplateTemplateInputOutput) ToJobtemplateTemplateInputOutputWithContext(ctx context.Context) JobtemplateTemplateInputOutput {
	return o
}

// @SUMMARY Foreman representation of a template input.
func (o JobtemplateTemplateInputOutput) __meta_() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *bool { return v.__meta_ }).(pulumi.BoolPtrOutput)
}

func (o JobtemplateTemplateInputOutput) Advanced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *bool { return v.Advanced }).(pulumi.BoolPtrOutput)
}

func (o JobtemplateTemplateInputOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) string { return v.Default }).(pulumi.StringOutput)
}

func (o JobtemplateTemplateInputOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobtemplateTemplateInputOutput) FactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *string { return v.FactName }).(pulumi.StringPtrOutput)
}

func (o JobtemplateTemplateInputOutput) HiddenValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *bool { return v.HiddenValue }).(pulumi.BoolPtrOutput)
}

func (o JobtemplateTemplateInputOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o JobtemplateTemplateInputOutput) InputType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *string { return v.InputType }).(pulumi.StringPtrOutput)
}

// The name of the template input
func (o JobtemplateTemplateInputOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) string { return v.Name }).(pulumi.StringOutput)
}

func (o JobtemplateTemplateInputOutput) PuppetClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *string { return v.PuppetClassName }).(pulumi.StringPtrOutput)
}

func (o JobtemplateTemplateInputOutput) PuppetParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *string { return v.PuppetParameterName }).(pulumi.StringPtrOutput)
}

func (o JobtemplateTemplateInputOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o JobtemplateTemplateInputOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

func (o JobtemplateTemplateInputOutput) TemplateId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *int { return v.TemplateId }).(pulumi.IntPtrOutput)
}

func (o JobtemplateTemplateInputOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *string { return v.ValueType }).(pulumi.StringPtrOutput)
}

func (o JobtemplateTemplateInputOutput) VariableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobtemplateTemplateInput) *string { return v.VariableName }).(pulumi.StringPtrOutput)
}

type JobtemplateTemplateInputArrayOutput struct{ *pulumi.OutputState }

func (JobtemplateTemplateInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobtemplateTemplateInput)(nil)).Elem()
}

func (o JobtemplateTemplateInputArrayOutput) ToJobtemplateTemplateInputArrayOutput() JobtemplateTemplateInputArrayOutput {
	return o
}

func (o JobtemplateTemplateInputArrayOutput) ToJobtemplateTemplateInputArrayOutputWithContext(ctx context.Context) JobtemplateTemplateInputArrayOutput {
	return o
}

func (o JobtemplateTemplateInputArrayOutput) Index(i pulumi.IntInput) JobtemplateTemplateInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobtemplateTemplateInput {
		return vs[0].([]JobtemplateTemplateInput)[vs[1].(int)]
	}).(JobtemplateTemplateInputOutput)
}

type KatelloContentViewFilter struct {
	Description *string `pulumi:"description"`
	Id          *int    `pulumi:"id"`
	// specifies if content should be included or excluded, default: inclusion=false
	Inclusion *bool                          `pulumi:"inclusion"`
	Name      string                         `pulumi:"name"`
	Rules     []KatelloContentViewFilterRule `pulumi:"rules"`
	// Type of this filter, e.g. DEB or RPM
	Type string `pulumi:"type"`
}

// KatelloContentViewFilterInput is an input type that accepts KatelloContentViewFilterArgs and KatelloContentViewFilterOutput values.
// You can construct a concrete instance of `KatelloContentViewFilterInput` via:
//
//	KatelloContentViewFilterArgs{...}
type KatelloContentViewFilterInput interface {
	pulumi.Input

	ToKatelloContentViewFilterOutput() KatelloContentViewFilterOutput
	ToKatelloContentViewFilterOutputWithContext(context.Context) KatelloContentViewFilterOutput
}

type KatelloContentViewFilterArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	// specifies if content should be included or excluded, default: inclusion=false
	Inclusion pulumi.BoolPtrInput                    `pulumi:"inclusion"`
	Name      pulumi.StringInput                     `pulumi:"name"`
	Rules     KatelloContentViewFilterRuleArrayInput `pulumi:"rules"`
	// Type of this filter, e.g. DEB or RPM
	Type pulumi.StringInput `pulumi:"type"`
}

func (KatelloContentViewFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KatelloContentViewFilter)(nil)).Elem()
}

func (i KatelloContentViewFilterArgs) ToKatelloContentViewFilterOutput() KatelloContentViewFilterOutput {
	return i.ToKatelloContentViewFilterOutputWithContext(context.Background())
}

func (i KatelloContentViewFilterArgs) ToKatelloContentViewFilterOutputWithContext(ctx context.Context) KatelloContentViewFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KatelloContentViewFilterOutput)
}

// KatelloContentViewFilterArrayInput is an input type that accepts KatelloContentViewFilterArray and KatelloContentViewFilterArrayOutput values.
// You can construct a concrete instance of `KatelloContentViewFilterArrayInput` via:
//
//	KatelloContentViewFilterArray{ KatelloContentViewFilterArgs{...} }
type KatelloContentViewFilterArrayInput interface {
	pulumi.Input

	ToKatelloContentViewFilterArrayOutput() KatelloContentViewFilterArrayOutput
	ToKatelloContentViewFilterArrayOutputWithContext(context.Context) KatelloContentViewFilterArrayOutput
}

type KatelloContentViewFilterArray []KatelloContentViewFilterInput

func (KatelloContentViewFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KatelloContentViewFilter)(nil)).Elem()
}

func (i KatelloContentViewFilterArray) ToKatelloContentViewFilterArrayOutput() KatelloContentViewFilterArrayOutput {
	return i.ToKatelloContentViewFilterArrayOutputWithContext(context.Background())
}

func (i KatelloContentViewFilterArray) ToKatelloContentViewFilterArrayOutputWithContext(ctx context.Context) KatelloContentViewFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KatelloContentViewFilterArrayOutput)
}

type KatelloContentViewFilterOutput struct{ *pulumi.OutputState }

func (KatelloContentViewFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KatelloContentViewFilter)(nil)).Elem()
}

func (o KatelloContentViewFilterOutput) ToKatelloContentViewFilterOutput() KatelloContentViewFilterOutput {
	return o
}

func (o KatelloContentViewFilterOutput) ToKatelloContentViewFilterOutputWithContext(ctx context.Context) KatelloContentViewFilterOutput {
	return o
}

func (o KatelloContentViewFilterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KatelloContentViewFilter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o KatelloContentViewFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KatelloContentViewFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// specifies if content should be included or excluded, default: inclusion=false
func (o KatelloContentViewFilterOutput) Inclusion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KatelloContentViewFilter) *bool { return v.Inclusion }).(pulumi.BoolPtrOutput)
}

func (o KatelloContentViewFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KatelloContentViewFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o KatelloContentViewFilterOutput) Rules() KatelloContentViewFilterRuleArrayOutput {
	return o.ApplyT(func(v KatelloContentViewFilter) []KatelloContentViewFilterRule { return v.Rules }).(KatelloContentViewFilterRuleArrayOutput)
}

// Type of this filter, e.g. DEB or RPM
func (o KatelloContentViewFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KatelloContentViewFilter) string { return v.Type }).(pulumi.StringOutput)
}

type KatelloContentViewFilterArrayOutput struct{ *pulumi.OutputState }

func (KatelloContentViewFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KatelloContentViewFilter)(nil)).Elem()
}

func (o KatelloContentViewFilterArrayOutput) ToKatelloContentViewFilterArrayOutput() KatelloContentViewFilterArrayOutput {
	return o
}

func (o KatelloContentViewFilterArrayOutput) ToKatelloContentViewFilterArrayOutputWithContext(ctx context.Context) KatelloContentViewFilterArrayOutput {
	return o
}

func (o KatelloContentViewFilterArrayOutput) Index(i pulumi.IntInput) KatelloContentViewFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KatelloContentViewFilter {
		return vs[0].([]KatelloContentViewFilter)[vs[1].(int)]
	}).(KatelloContentViewFilterOutput)
}

type KatelloContentViewFilterRule struct {
	Architecture *string `pulumi:"architecture"`
	Id           *int    `pulumi:"id"`
	// Filter pattern of this filter @EXAMPLE apt*
	Name string `pulumi:"name"`
}

// KatelloContentViewFilterRuleInput is an input type that accepts KatelloContentViewFilterRuleArgs and KatelloContentViewFilterRuleOutput values.
// You can construct a concrete instance of `KatelloContentViewFilterRuleInput` via:
//
//	KatelloContentViewFilterRuleArgs{...}
type KatelloContentViewFilterRuleInput interface {
	pulumi.Input

	ToKatelloContentViewFilterRuleOutput() KatelloContentViewFilterRuleOutput
	ToKatelloContentViewFilterRuleOutputWithContext(context.Context) KatelloContentViewFilterRuleOutput
}

type KatelloContentViewFilterRuleArgs struct {
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	Id           pulumi.IntPtrInput    `pulumi:"id"`
	// Filter pattern of this filter @EXAMPLE apt*
	Name pulumi.StringInput `pulumi:"name"`
}

func (KatelloContentViewFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KatelloContentViewFilterRule)(nil)).Elem()
}

func (i KatelloContentViewFilterRuleArgs) ToKatelloContentViewFilterRuleOutput() KatelloContentViewFilterRuleOutput {
	return i.ToKatelloContentViewFilterRuleOutputWithContext(context.Background())
}

func (i KatelloContentViewFilterRuleArgs) ToKatelloContentViewFilterRuleOutputWithContext(ctx context.Context) KatelloContentViewFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KatelloContentViewFilterRuleOutput)
}

// KatelloContentViewFilterRuleArrayInput is an input type that accepts KatelloContentViewFilterRuleArray and KatelloContentViewFilterRuleArrayOutput values.
// You can construct a concrete instance of `KatelloContentViewFilterRuleArrayInput` via:
//
//	KatelloContentViewFilterRuleArray{ KatelloContentViewFilterRuleArgs{...} }
type KatelloContentViewFilterRuleArrayInput interface {
	pulumi.Input

	ToKatelloContentViewFilterRuleArrayOutput() KatelloContentViewFilterRuleArrayOutput
	ToKatelloContentViewFilterRuleArrayOutputWithContext(context.Context) KatelloContentViewFilterRuleArrayOutput
}

type KatelloContentViewFilterRuleArray []KatelloContentViewFilterRuleInput

func (KatelloContentViewFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KatelloContentViewFilterRule)(nil)).Elem()
}

func (i KatelloContentViewFilterRuleArray) ToKatelloContentViewFilterRuleArrayOutput() KatelloContentViewFilterRuleArrayOutput {
	return i.ToKatelloContentViewFilterRuleArrayOutputWithContext(context.Background())
}

func (i KatelloContentViewFilterRuleArray) ToKatelloContentViewFilterRuleArrayOutputWithContext(ctx context.Context) KatelloContentViewFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KatelloContentViewFilterRuleArrayOutput)
}

type KatelloContentViewFilterRuleOutput struct{ *pulumi.OutputState }

func (KatelloContentViewFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KatelloContentViewFilterRule)(nil)).Elem()
}

func (o KatelloContentViewFilterRuleOutput) ToKatelloContentViewFilterRuleOutput() KatelloContentViewFilterRuleOutput {
	return o
}

func (o KatelloContentViewFilterRuleOutput) ToKatelloContentViewFilterRuleOutputWithContext(ctx context.Context) KatelloContentViewFilterRuleOutput {
	return o
}

func (o KatelloContentViewFilterRuleOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KatelloContentViewFilterRule) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

func (o KatelloContentViewFilterRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KatelloContentViewFilterRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Filter pattern of this filter @EXAMPLE apt*
func (o KatelloContentViewFilterRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KatelloContentViewFilterRule) string { return v.Name }).(pulumi.StringOutput)
}

type KatelloContentViewFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (KatelloContentViewFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KatelloContentViewFilterRule)(nil)).Elem()
}

func (o KatelloContentViewFilterRuleArrayOutput) ToKatelloContentViewFilterRuleArrayOutput() KatelloContentViewFilterRuleArrayOutput {
	return o
}

func (o KatelloContentViewFilterRuleArrayOutput) ToKatelloContentViewFilterRuleArrayOutputWithContext(ctx context.Context) KatelloContentViewFilterRuleArrayOutput {
	return o
}

func (o KatelloContentViewFilterRuleArrayOutput) Index(i pulumi.IntInput) KatelloContentViewFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KatelloContentViewFilterRule {
		return vs[0].([]KatelloContentViewFilterRule)[vs[1].(int)]
	}).(KatelloContentViewFilterRuleOutput)
}

type ProvisioningtemplateTemplateCombinationsAttribute struct {
	// The environment ID for this template combination.
	EnvironmentId *int `pulumi:"environmentId"`
	// The hostgroup ID for this template combination.
	HostgroupId *int `pulumi:"hostgroupId"`
	// Template combination unique identifier.
	Id *int `pulumi:"id"`
}

// ProvisioningtemplateTemplateCombinationsAttributeInput is an input type that accepts ProvisioningtemplateTemplateCombinationsAttributeArgs and ProvisioningtemplateTemplateCombinationsAttributeOutput values.
// You can construct a concrete instance of `ProvisioningtemplateTemplateCombinationsAttributeInput` via:
//
//	ProvisioningtemplateTemplateCombinationsAttributeArgs{...}
type ProvisioningtemplateTemplateCombinationsAttributeInput interface {
	pulumi.Input

	ToProvisioningtemplateTemplateCombinationsAttributeOutput() ProvisioningtemplateTemplateCombinationsAttributeOutput
	ToProvisioningtemplateTemplateCombinationsAttributeOutputWithContext(context.Context) ProvisioningtemplateTemplateCombinationsAttributeOutput
}

type ProvisioningtemplateTemplateCombinationsAttributeArgs struct {
	// The environment ID for this template combination.
	EnvironmentId pulumi.IntPtrInput `pulumi:"environmentId"`
	// The hostgroup ID for this template combination.
	HostgroupId pulumi.IntPtrInput `pulumi:"hostgroupId"`
	// Template combination unique identifier.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ProvisioningtemplateTemplateCombinationsAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningtemplateTemplateCombinationsAttribute)(nil)).Elem()
}

func (i ProvisioningtemplateTemplateCombinationsAttributeArgs) ToProvisioningtemplateTemplateCombinationsAttributeOutput() ProvisioningtemplateTemplateCombinationsAttributeOutput {
	return i.ToProvisioningtemplateTemplateCombinationsAttributeOutputWithContext(context.Background())
}

func (i ProvisioningtemplateTemplateCombinationsAttributeArgs) ToProvisioningtemplateTemplateCombinationsAttributeOutputWithContext(ctx context.Context) ProvisioningtemplateTemplateCombinationsAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningtemplateTemplateCombinationsAttributeOutput)
}

// ProvisioningtemplateTemplateCombinationsAttributeArrayInput is an input type that accepts ProvisioningtemplateTemplateCombinationsAttributeArray and ProvisioningtemplateTemplateCombinationsAttributeArrayOutput values.
// You can construct a concrete instance of `ProvisioningtemplateTemplateCombinationsAttributeArrayInput` via:
//
//	ProvisioningtemplateTemplateCombinationsAttributeArray{ ProvisioningtemplateTemplateCombinationsAttributeArgs{...} }
type ProvisioningtemplateTemplateCombinationsAttributeArrayInput interface {
	pulumi.Input

	ToProvisioningtemplateTemplateCombinationsAttributeArrayOutput() ProvisioningtemplateTemplateCombinationsAttributeArrayOutput
	ToProvisioningtemplateTemplateCombinationsAttributeArrayOutputWithContext(context.Context) ProvisioningtemplateTemplateCombinationsAttributeArrayOutput
}

type ProvisioningtemplateTemplateCombinationsAttributeArray []ProvisioningtemplateTemplateCombinationsAttributeInput

func (ProvisioningtemplateTemplateCombinationsAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProvisioningtemplateTemplateCombinationsAttribute)(nil)).Elem()
}

func (i ProvisioningtemplateTemplateCombinationsAttributeArray) ToProvisioningtemplateTemplateCombinationsAttributeArrayOutput() ProvisioningtemplateTemplateCombinationsAttributeArrayOutput {
	return i.ToProvisioningtemplateTemplateCombinationsAttributeArrayOutputWithContext(context.Background())
}

func (i ProvisioningtemplateTemplateCombinationsAttributeArray) ToProvisioningtemplateTemplateCombinationsAttributeArrayOutputWithContext(ctx context.Context) ProvisioningtemplateTemplateCombinationsAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningtemplateTemplateCombinationsAttributeArrayOutput)
}

type ProvisioningtemplateTemplateCombinationsAttributeOutput struct{ *pulumi.OutputState }

func (ProvisioningtemplateTemplateCombinationsAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningtemplateTemplateCombinationsAttribute)(nil)).Elem()
}

func (o ProvisioningtemplateTemplateCombinationsAttributeOutput) ToProvisioningtemplateTemplateCombinationsAttributeOutput() ProvisioningtemplateTemplateCombinationsAttributeOutput {
	return o
}

func (o ProvisioningtemplateTemplateCombinationsAttributeOutput) ToProvisioningtemplateTemplateCombinationsAttributeOutputWithContext(ctx context.Context) ProvisioningtemplateTemplateCombinationsAttributeOutput {
	return o
}

// The environment ID for this template combination.
func (o ProvisioningtemplateTemplateCombinationsAttributeOutput) EnvironmentId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisioningtemplateTemplateCombinationsAttribute) *int { return v.EnvironmentId }).(pulumi.IntPtrOutput)
}

// The hostgroup ID for this template combination.
func (o ProvisioningtemplateTemplateCombinationsAttributeOutput) HostgroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisioningtemplateTemplateCombinationsAttribute) *int { return v.HostgroupId }).(pulumi.IntPtrOutput)
}

// Template combination unique identifier.
func (o ProvisioningtemplateTemplateCombinationsAttributeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisioningtemplateTemplateCombinationsAttribute) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ProvisioningtemplateTemplateCombinationsAttributeArrayOutput struct{ *pulumi.OutputState }

func (ProvisioningtemplateTemplateCombinationsAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProvisioningtemplateTemplateCombinationsAttribute)(nil)).Elem()
}

func (o ProvisioningtemplateTemplateCombinationsAttributeArrayOutput) ToProvisioningtemplateTemplateCombinationsAttributeArrayOutput() ProvisioningtemplateTemplateCombinationsAttributeArrayOutput {
	return o
}

func (o ProvisioningtemplateTemplateCombinationsAttributeArrayOutput) ToProvisioningtemplateTemplateCombinationsAttributeArrayOutputWithContext(ctx context.Context) ProvisioningtemplateTemplateCombinationsAttributeArrayOutput {
	return o
}

func (o ProvisioningtemplateTemplateCombinationsAttributeArrayOutput) Index(i pulumi.IntInput) ProvisioningtemplateTemplateCombinationsAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProvisioningtemplateTemplateCombinationsAttribute {
		return vs[0].([]ProvisioningtemplateTemplateCombinationsAttribute)[vs[1].(int)]
	}).(ProvisioningtemplateTemplateCombinationsAttributeOutput)
}

type GetComputeprofileComputeAttribute struct {
	// ID of the compute resource
	ComputeResourceId int `pulumi:"computeResourceId"`
	// ID of the compute_attribute
	Id int `pulumi:"id"`
	// Auto-generated name of the compute attribute
	Name string `pulumi:"name"`
	// VM attributes as JSON
	VmAttrs map[string]string `pulumi:"vmAttrs"`
}

// GetComputeprofileComputeAttributeInput is an input type that accepts GetComputeprofileComputeAttributeArgs and GetComputeprofileComputeAttributeOutput values.
// You can construct a concrete instance of `GetComputeprofileComputeAttributeInput` via:
//
//	GetComputeprofileComputeAttributeArgs{...}
type GetComputeprofileComputeAttributeInput interface {
	pulumi.Input

	ToGetComputeprofileComputeAttributeOutput() GetComputeprofileComputeAttributeOutput
	ToGetComputeprofileComputeAttributeOutputWithContext(context.Context) GetComputeprofileComputeAttributeOutput
}

type GetComputeprofileComputeAttributeArgs struct {
	// ID of the compute resource
	ComputeResourceId pulumi.IntInput `pulumi:"computeResourceId"`
	// ID of the compute_attribute
	Id pulumi.IntInput `pulumi:"id"`
	// Auto-generated name of the compute attribute
	Name pulumi.StringInput `pulumi:"name"`
	// VM attributes as JSON
	VmAttrs pulumi.StringMapInput `pulumi:"vmAttrs"`
}

func (GetComputeprofileComputeAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeprofileComputeAttribute)(nil)).Elem()
}

func (i GetComputeprofileComputeAttributeArgs) ToGetComputeprofileComputeAttributeOutput() GetComputeprofileComputeAttributeOutput {
	return i.ToGetComputeprofileComputeAttributeOutputWithContext(context.Background())
}

func (i GetComputeprofileComputeAttributeArgs) ToGetComputeprofileComputeAttributeOutputWithContext(ctx context.Context) GetComputeprofileComputeAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeprofileComputeAttributeOutput)
}

// GetComputeprofileComputeAttributeArrayInput is an input type that accepts GetComputeprofileComputeAttributeArray and GetComputeprofileComputeAttributeArrayOutput values.
// You can construct a concrete instance of `GetComputeprofileComputeAttributeArrayInput` via:
//
//	GetComputeprofileComputeAttributeArray{ GetComputeprofileComputeAttributeArgs{...} }
type GetComputeprofileComputeAttributeArrayInput interface {
	pulumi.Input

	ToGetComputeprofileComputeAttributeArrayOutput() GetComputeprofileComputeAttributeArrayOutput
	ToGetComputeprofileComputeAttributeArrayOutputWithContext(context.Context) GetComputeprofileComputeAttributeArrayOutput
}

type GetComputeprofileComputeAttributeArray []GetComputeprofileComputeAttributeInput

func (GetComputeprofileComputeAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeprofileComputeAttribute)(nil)).Elem()
}

func (i GetComputeprofileComputeAttributeArray) ToGetComputeprofileComputeAttributeArrayOutput() GetComputeprofileComputeAttributeArrayOutput {
	return i.ToGetComputeprofileComputeAttributeArrayOutputWithContext(context.Background())
}

func (i GetComputeprofileComputeAttributeArray) ToGetComputeprofileComputeAttributeArrayOutputWithContext(ctx context.Context) GetComputeprofileComputeAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeprofileComputeAttributeArrayOutput)
}

type GetComputeprofileComputeAttributeOutput struct{ *pulumi.OutputState }

func (GetComputeprofileComputeAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeprofileComputeAttribute)(nil)).Elem()
}

func (o GetComputeprofileComputeAttributeOutput) ToGetComputeprofileComputeAttributeOutput() GetComputeprofileComputeAttributeOutput {
	return o
}

func (o GetComputeprofileComputeAttributeOutput) ToGetComputeprofileComputeAttributeOutputWithContext(ctx context.Context) GetComputeprofileComputeAttributeOutput {
	return o
}

// ID of the compute resource
func (o GetComputeprofileComputeAttributeOutput) ComputeResourceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeprofileComputeAttribute) int { return v.ComputeResourceId }).(pulumi.IntOutput)
}

// ID of the compute_attribute
func (o GetComputeprofileComputeAttributeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeprofileComputeAttribute) int { return v.Id }).(pulumi.IntOutput)
}

// Auto-generated name of the compute attribute
func (o GetComputeprofileComputeAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeprofileComputeAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// VM attributes as JSON
func (o GetComputeprofileComputeAttributeOutput) VmAttrs() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetComputeprofileComputeAttribute) map[string]string { return v.VmAttrs }).(pulumi.StringMapOutput)
}

type GetComputeprofileComputeAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetComputeprofileComputeAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeprofileComputeAttribute)(nil)).Elem()
}

func (o GetComputeprofileComputeAttributeArrayOutput) ToGetComputeprofileComputeAttributeArrayOutput() GetComputeprofileComputeAttributeArrayOutput {
	return o
}

func (o GetComputeprofileComputeAttributeArrayOutput) ToGetComputeprofileComputeAttributeArrayOutputWithContext(ctx context.Context) GetComputeprofileComputeAttributeArrayOutput {
	return o
}

func (o GetComputeprofileComputeAttributeArrayOutput) Index(i pulumi.IntInput) GetComputeprofileComputeAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeprofileComputeAttribute {
		return vs[0].([]GetComputeprofileComputeAttribute)[vs[1].(int)]
	}).(GetComputeprofileComputeAttributeOutput)
}

type GetJobtemplateTemplateInput struct {
	// @SUMMARY Foreman representation of a template input.
	__meta_     bool   `pulumi:"__meta_"`
	Advanced    bool   `pulumi:"advanced"`
	Default     string `pulumi:"default"`
	Description string `pulumi:"description"`
	FactName    string `pulumi:"factName"`
	HiddenValue bool   `pulumi:"hiddenValue"`
	Id          string `pulumi:"id"`
	InputType   string `pulumi:"inputType"`
	// The name of the template input
	Name                string `pulumi:"name"`
	PuppetClassName     string `pulumi:"puppetClassName"`
	PuppetParameterName string `pulumi:"puppetParameterName"`
	Required            bool   `pulumi:"required"`
	ResourceType        string `pulumi:"resourceType"`
	TemplateId          int    `pulumi:"templateId"`
	ValueType           string `pulumi:"valueType"`
	VariableName        string `pulumi:"variableName"`
}

// GetJobtemplateTemplateInputInput is an input type that accepts GetJobtemplateTemplateInputArgs and GetJobtemplateTemplateInputOutput values.
// You can construct a concrete instance of `GetJobtemplateTemplateInputInput` via:
//
//	GetJobtemplateTemplateInputArgs{...}
type GetJobtemplateTemplateInputInput interface {
	pulumi.Input

	ToGetJobtemplateTemplateInputOutput() GetJobtemplateTemplateInputOutput
	ToGetJobtemplateTemplateInputOutputWithContext(context.Context) GetJobtemplateTemplateInputOutput
}

type GetJobtemplateTemplateInputArgs struct {
	// @SUMMARY Foreman representation of a template input.
	__meta_     pulumi.BoolInput   `pulumi:"__meta_"`
	Advanced    pulumi.BoolInput   `pulumi:"advanced"`
	Default     pulumi.StringInput `pulumi:"default"`
	Description pulumi.StringInput `pulumi:"description"`
	FactName    pulumi.StringInput `pulumi:"factName"`
	HiddenValue pulumi.BoolInput   `pulumi:"hiddenValue"`
	Id          pulumi.StringInput `pulumi:"id"`
	InputType   pulumi.StringInput `pulumi:"inputType"`
	// The name of the template input
	Name                pulumi.StringInput `pulumi:"name"`
	PuppetClassName     pulumi.StringInput `pulumi:"puppetClassName"`
	PuppetParameterName pulumi.StringInput `pulumi:"puppetParameterName"`
	Required            pulumi.BoolInput   `pulumi:"required"`
	ResourceType        pulumi.StringInput `pulumi:"resourceType"`
	TemplateId          pulumi.IntInput    `pulumi:"templateId"`
	ValueType           pulumi.StringInput `pulumi:"valueType"`
	VariableName        pulumi.StringInput `pulumi:"variableName"`
}

func (GetJobtemplateTemplateInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobtemplateTemplateInput)(nil)).Elem()
}

func (i GetJobtemplateTemplateInputArgs) ToGetJobtemplateTemplateInputOutput() GetJobtemplateTemplateInputOutput {
	return i.ToGetJobtemplateTemplateInputOutputWithContext(context.Background())
}

func (i GetJobtemplateTemplateInputArgs) ToGetJobtemplateTemplateInputOutputWithContext(ctx context.Context) GetJobtemplateTemplateInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobtemplateTemplateInputOutput)
}

// GetJobtemplateTemplateInputArrayInput is an input type that accepts GetJobtemplateTemplateInputArray and GetJobtemplateTemplateInputArrayOutput values.
// You can construct a concrete instance of `GetJobtemplateTemplateInputArrayInput` via:
//
//	GetJobtemplateTemplateInputArray{ GetJobtemplateTemplateInputArgs{...} }
type GetJobtemplateTemplateInputArrayInput interface {
	pulumi.Input

	ToGetJobtemplateTemplateInputArrayOutput() GetJobtemplateTemplateInputArrayOutput
	ToGetJobtemplateTemplateInputArrayOutputWithContext(context.Context) GetJobtemplateTemplateInputArrayOutput
}

type GetJobtemplateTemplateInputArray []GetJobtemplateTemplateInputInput

func (GetJobtemplateTemplateInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobtemplateTemplateInput)(nil)).Elem()
}

func (i GetJobtemplateTemplateInputArray) ToGetJobtemplateTemplateInputArrayOutput() GetJobtemplateTemplateInputArrayOutput {
	return i.ToGetJobtemplateTemplateInputArrayOutputWithContext(context.Background())
}

func (i GetJobtemplateTemplateInputArray) ToGetJobtemplateTemplateInputArrayOutputWithContext(ctx context.Context) GetJobtemplateTemplateInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobtemplateTemplateInputArrayOutput)
}

type GetJobtemplateTemplateInputOutput struct{ *pulumi.OutputState }

func (GetJobtemplateTemplateInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobtemplateTemplateInput)(nil)).Elem()
}

func (o GetJobtemplateTemplateInputOutput) ToGetJobtemplateTemplateInputOutput() GetJobtemplateTemplateInputOutput {
	return o
}

func (o GetJobtemplateTemplateInputOutput) ToGetJobtemplateTemplateInputOutputWithContext(ctx context.Context) GetJobtemplateTemplateInputOutput {
	return o
}

// @SUMMARY Foreman representation of a template input.
func (o GetJobtemplateTemplateInputOutput) __meta_() pulumi.BoolOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) bool { return v.__meta_ }).(pulumi.BoolOutput)
}

func (o GetJobtemplateTemplateInputOutput) Advanced() pulumi.BoolOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) bool { return v.Advanced }).(pulumi.BoolOutput)
}

func (o GetJobtemplateTemplateInputOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.Default }).(pulumi.StringOutput)
}

func (o GetJobtemplateTemplateInputOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetJobtemplateTemplateInputOutput) FactName() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.FactName }).(pulumi.StringOutput)
}

func (o GetJobtemplateTemplateInputOutput) HiddenValue() pulumi.BoolOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) bool { return v.HiddenValue }).(pulumi.BoolOutput)
}

func (o GetJobtemplateTemplateInputOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetJobtemplateTemplateInputOutput) InputType() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.InputType }).(pulumi.StringOutput)
}

// The name of the template input
func (o GetJobtemplateTemplateInputOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetJobtemplateTemplateInputOutput) PuppetClassName() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.PuppetClassName }).(pulumi.StringOutput)
}

func (o GetJobtemplateTemplateInputOutput) PuppetParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.PuppetParameterName }).(pulumi.StringOutput)
}

func (o GetJobtemplateTemplateInputOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) bool { return v.Required }).(pulumi.BoolOutput)
}

func (o GetJobtemplateTemplateInputOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o GetJobtemplateTemplateInputOutput) TemplateId() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) int { return v.TemplateId }).(pulumi.IntOutput)
}

func (o GetJobtemplateTemplateInputOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.ValueType }).(pulumi.StringOutput)
}

func (o GetJobtemplateTemplateInputOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobtemplateTemplateInput) string { return v.VariableName }).(pulumi.StringOutput)
}

type GetJobtemplateTemplateInputArrayOutput struct{ *pulumi.OutputState }

func (GetJobtemplateTemplateInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobtemplateTemplateInput)(nil)).Elem()
}

func (o GetJobtemplateTemplateInputArrayOutput) ToGetJobtemplateTemplateInputArrayOutput() GetJobtemplateTemplateInputArrayOutput {
	return o
}

func (o GetJobtemplateTemplateInputArrayOutput) ToGetJobtemplateTemplateInputArrayOutputWithContext(ctx context.Context) GetJobtemplateTemplateInputArrayOutput {
	return o
}

func (o GetJobtemplateTemplateInputArrayOutput) Index(i pulumi.IntInput) GetJobtemplateTemplateInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobtemplateTemplateInput {
		return vs[0].([]GetJobtemplateTemplateInput)[vs[1].(int)]
	}).(GetJobtemplateTemplateInputOutput)
}

type GetKatelloContentViewFilter struct {
	Description string `pulumi:"description"`
	Id          int    `pulumi:"id"`
	// specifies if content should be included or excluded, default: inclusion=false
	Inclusion bool                              `pulumi:"inclusion"`
	Name      string                            `pulumi:"name"`
	Rules     []GetKatelloContentViewFilterRule `pulumi:"rules"`
	// Type of this filter, e.g. DEB or RPM
	Type string `pulumi:"type"`
}

// GetKatelloContentViewFilterInput is an input type that accepts GetKatelloContentViewFilterArgs and GetKatelloContentViewFilterOutput values.
// You can construct a concrete instance of `GetKatelloContentViewFilterInput` via:
//
//	GetKatelloContentViewFilterArgs{...}
type GetKatelloContentViewFilterInput interface {
	pulumi.Input

	ToGetKatelloContentViewFilterOutput() GetKatelloContentViewFilterOutput
	ToGetKatelloContentViewFilterOutputWithContext(context.Context) GetKatelloContentViewFilterOutput
}

type GetKatelloContentViewFilterArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.IntInput    `pulumi:"id"`
	// specifies if content should be included or excluded, default: inclusion=false
	Inclusion pulumi.BoolInput                          `pulumi:"inclusion"`
	Name      pulumi.StringInput                        `pulumi:"name"`
	Rules     GetKatelloContentViewFilterRuleArrayInput `pulumi:"rules"`
	// Type of this filter, e.g. DEB or RPM
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetKatelloContentViewFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKatelloContentViewFilter)(nil)).Elem()
}

func (i GetKatelloContentViewFilterArgs) ToGetKatelloContentViewFilterOutput() GetKatelloContentViewFilterOutput {
	return i.ToGetKatelloContentViewFilterOutputWithContext(context.Background())
}

func (i GetKatelloContentViewFilterArgs) ToGetKatelloContentViewFilterOutputWithContext(ctx context.Context) GetKatelloContentViewFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKatelloContentViewFilterOutput)
}

// GetKatelloContentViewFilterArrayInput is an input type that accepts GetKatelloContentViewFilterArray and GetKatelloContentViewFilterArrayOutput values.
// You can construct a concrete instance of `GetKatelloContentViewFilterArrayInput` via:
//
//	GetKatelloContentViewFilterArray{ GetKatelloContentViewFilterArgs{...} }
type GetKatelloContentViewFilterArrayInput interface {
	pulumi.Input

	ToGetKatelloContentViewFilterArrayOutput() GetKatelloContentViewFilterArrayOutput
	ToGetKatelloContentViewFilterArrayOutputWithContext(context.Context) GetKatelloContentViewFilterArrayOutput
}

type GetKatelloContentViewFilterArray []GetKatelloContentViewFilterInput

func (GetKatelloContentViewFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKatelloContentViewFilter)(nil)).Elem()
}

func (i GetKatelloContentViewFilterArray) ToGetKatelloContentViewFilterArrayOutput() GetKatelloContentViewFilterArrayOutput {
	return i.ToGetKatelloContentViewFilterArrayOutputWithContext(context.Background())
}

func (i GetKatelloContentViewFilterArray) ToGetKatelloContentViewFilterArrayOutputWithContext(ctx context.Context) GetKatelloContentViewFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKatelloContentViewFilterArrayOutput)
}

type GetKatelloContentViewFilterOutput struct{ *pulumi.OutputState }

func (GetKatelloContentViewFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKatelloContentViewFilter)(nil)).Elem()
}

func (o GetKatelloContentViewFilterOutput) ToGetKatelloContentViewFilterOutput() GetKatelloContentViewFilterOutput {
	return o
}

func (o GetKatelloContentViewFilterOutput) ToGetKatelloContentViewFilterOutputWithContext(ctx context.Context) GetKatelloContentViewFilterOutput {
	return o
}

func (o GetKatelloContentViewFilterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetKatelloContentViewFilter) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetKatelloContentViewFilterOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetKatelloContentViewFilter) int { return v.Id }).(pulumi.IntOutput)
}

// specifies if content should be included or excluded, default: inclusion=false
func (o GetKatelloContentViewFilterOutput) Inclusion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKatelloContentViewFilter) bool { return v.Inclusion }).(pulumi.BoolOutput)
}

func (o GetKatelloContentViewFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKatelloContentViewFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKatelloContentViewFilterOutput) Rules() GetKatelloContentViewFilterRuleArrayOutput {
	return o.ApplyT(func(v GetKatelloContentViewFilter) []GetKatelloContentViewFilterRule { return v.Rules }).(GetKatelloContentViewFilterRuleArrayOutput)
}

// Type of this filter, e.g. DEB or RPM
func (o GetKatelloContentViewFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetKatelloContentViewFilter) string { return v.Type }).(pulumi.StringOutput)
}

type GetKatelloContentViewFilterArrayOutput struct{ *pulumi.OutputState }

func (GetKatelloContentViewFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKatelloContentViewFilter)(nil)).Elem()
}

func (o GetKatelloContentViewFilterArrayOutput) ToGetKatelloContentViewFilterArrayOutput() GetKatelloContentViewFilterArrayOutput {
	return o
}

func (o GetKatelloContentViewFilterArrayOutput) ToGetKatelloContentViewFilterArrayOutputWithContext(ctx context.Context) GetKatelloContentViewFilterArrayOutput {
	return o
}

func (o GetKatelloContentViewFilterArrayOutput) Index(i pulumi.IntInput) GetKatelloContentViewFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKatelloContentViewFilter {
		return vs[0].([]GetKatelloContentViewFilter)[vs[1].(int)]
	}).(GetKatelloContentViewFilterOutput)
}

type GetKatelloContentViewFilterRule struct {
	Architecture string `pulumi:"architecture"`
	Id           int    `pulumi:"id"`
	// Filter pattern of this filter @EXAMPLE apt*
	Name string `pulumi:"name"`
}

// GetKatelloContentViewFilterRuleInput is an input type that accepts GetKatelloContentViewFilterRuleArgs and GetKatelloContentViewFilterRuleOutput values.
// You can construct a concrete instance of `GetKatelloContentViewFilterRuleInput` via:
//
//	GetKatelloContentViewFilterRuleArgs{...}
type GetKatelloContentViewFilterRuleInput interface {
	pulumi.Input

	ToGetKatelloContentViewFilterRuleOutput() GetKatelloContentViewFilterRuleOutput
	ToGetKatelloContentViewFilterRuleOutputWithContext(context.Context) GetKatelloContentViewFilterRuleOutput
}

type GetKatelloContentViewFilterRuleArgs struct {
	Architecture pulumi.StringInput `pulumi:"architecture"`
	Id           pulumi.IntInput    `pulumi:"id"`
	// Filter pattern of this filter @EXAMPLE apt*
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetKatelloContentViewFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKatelloContentViewFilterRule)(nil)).Elem()
}

func (i GetKatelloContentViewFilterRuleArgs) ToGetKatelloContentViewFilterRuleOutput() GetKatelloContentViewFilterRuleOutput {
	return i.ToGetKatelloContentViewFilterRuleOutputWithContext(context.Background())
}

func (i GetKatelloContentViewFilterRuleArgs) ToGetKatelloContentViewFilterRuleOutputWithContext(ctx context.Context) GetKatelloContentViewFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKatelloContentViewFilterRuleOutput)
}

// GetKatelloContentViewFilterRuleArrayInput is an input type that accepts GetKatelloContentViewFilterRuleArray and GetKatelloContentViewFilterRuleArrayOutput values.
// You can construct a concrete instance of `GetKatelloContentViewFilterRuleArrayInput` via:
//
//	GetKatelloContentViewFilterRuleArray{ GetKatelloContentViewFilterRuleArgs{...} }
type GetKatelloContentViewFilterRuleArrayInput interface {
	pulumi.Input

	ToGetKatelloContentViewFilterRuleArrayOutput() GetKatelloContentViewFilterRuleArrayOutput
	ToGetKatelloContentViewFilterRuleArrayOutputWithContext(context.Context) GetKatelloContentViewFilterRuleArrayOutput
}

type GetKatelloContentViewFilterRuleArray []GetKatelloContentViewFilterRuleInput

func (GetKatelloContentViewFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKatelloContentViewFilterRule)(nil)).Elem()
}

func (i GetKatelloContentViewFilterRuleArray) ToGetKatelloContentViewFilterRuleArrayOutput() GetKatelloContentViewFilterRuleArrayOutput {
	return i.ToGetKatelloContentViewFilterRuleArrayOutputWithContext(context.Background())
}

func (i GetKatelloContentViewFilterRuleArray) ToGetKatelloContentViewFilterRuleArrayOutputWithContext(ctx context.Context) GetKatelloContentViewFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKatelloContentViewFilterRuleArrayOutput)
}

type GetKatelloContentViewFilterRuleOutput struct{ *pulumi.OutputState }

func (GetKatelloContentViewFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKatelloContentViewFilterRule)(nil)).Elem()
}

func (o GetKatelloContentViewFilterRuleOutput) ToGetKatelloContentViewFilterRuleOutput() GetKatelloContentViewFilterRuleOutput {
	return o
}

func (o GetKatelloContentViewFilterRuleOutput) ToGetKatelloContentViewFilterRuleOutputWithContext(ctx context.Context) GetKatelloContentViewFilterRuleOutput {
	return o
}

func (o GetKatelloContentViewFilterRuleOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetKatelloContentViewFilterRule) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o GetKatelloContentViewFilterRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetKatelloContentViewFilterRule) int { return v.Id }).(pulumi.IntOutput)
}

// Filter pattern of this filter @EXAMPLE apt*
func (o GetKatelloContentViewFilterRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKatelloContentViewFilterRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetKatelloContentViewFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (GetKatelloContentViewFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKatelloContentViewFilterRule)(nil)).Elem()
}

func (o GetKatelloContentViewFilterRuleArrayOutput) ToGetKatelloContentViewFilterRuleArrayOutput() GetKatelloContentViewFilterRuleArrayOutput {
	return o
}

func (o GetKatelloContentViewFilterRuleArrayOutput) ToGetKatelloContentViewFilterRuleArrayOutputWithContext(ctx context.Context) GetKatelloContentViewFilterRuleArrayOutput {
	return o
}

func (o GetKatelloContentViewFilterRuleArrayOutput) Index(i pulumi.IntInput) GetKatelloContentViewFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKatelloContentViewFilterRule {
		return vs[0].([]GetKatelloContentViewFilterRule)[vs[1].(int)]
	}).(GetKatelloContentViewFilterRuleOutput)
}

type GetProvisioningtemplateTemplateCombinationsAttribute struct {
	// The environment ID for this template combination.
	EnvironmentId int `pulumi:"environmentId"`
	// The hostgroup ID for this template combination.
	HostgroupId int `pulumi:"hostgroupId"`
	// Template combination unique identifier.
	Id int `pulumi:"id"`
}

// GetProvisioningtemplateTemplateCombinationsAttributeInput is an input type that accepts GetProvisioningtemplateTemplateCombinationsAttributeArgs and GetProvisioningtemplateTemplateCombinationsAttributeOutput values.
// You can construct a concrete instance of `GetProvisioningtemplateTemplateCombinationsAttributeInput` via:
//
//	GetProvisioningtemplateTemplateCombinationsAttributeArgs{...}
type GetProvisioningtemplateTemplateCombinationsAttributeInput interface {
	pulumi.Input

	ToGetProvisioningtemplateTemplateCombinationsAttributeOutput() GetProvisioningtemplateTemplateCombinationsAttributeOutput
	ToGetProvisioningtemplateTemplateCombinationsAttributeOutputWithContext(context.Context) GetProvisioningtemplateTemplateCombinationsAttributeOutput
}

type GetProvisioningtemplateTemplateCombinationsAttributeArgs struct {
	// The environment ID for this template combination.
	EnvironmentId pulumi.IntInput `pulumi:"environmentId"`
	// The hostgroup ID for this template combination.
	HostgroupId pulumi.IntInput `pulumi:"hostgroupId"`
	// Template combination unique identifier.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetProvisioningtemplateTemplateCombinationsAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProvisioningtemplateTemplateCombinationsAttribute)(nil)).Elem()
}

func (i GetProvisioningtemplateTemplateCombinationsAttributeArgs) ToGetProvisioningtemplateTemplateCombinationsAttributeOutput() GetProvisioningtemplateTemplateCombinationsAttributeOutput {
	return i.ToGetProvisioningtemplateTemplateCombinationsAttributeOutputWithContext(context.Background())
}

func (i GetProvisioningtemplateTemplateCombinationsAttributeArgs) ToGetProvisioningtemplateTemplateCombinationsAttributeOutputWithContext(ctx context.Context) GetProvisioningtemplateTemplateCombinationsAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProvisioningtemplateTemplateCombinationsAttributeOutput)
}

// GetProvisioningtemplateTemplateCombinationsAttributeArrayInput is an input type that accepts GetProvisioningtemplateTemplateCombinationsAttributeArray and GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput values.
// You can construct a concrete instance of `GetProvisioningtemplateTemplateCombinationsAttributeArrayInput` via:
//
//	GetProvisioningtemplateTemplateCombinationsAttributeArray{ GetProvisioningtemplateTemplateCombinationsAttributeArgs{...} }
type GetProvisioningtemplateTemplateCombinationsAttributeArrayInput interface {
	pulumi.Input

	ToGetProvisioningtemplateTemplateCombinationsAttributeArrayOutput() GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput
	ToGetProvisioningtemplateTemplateCombinationsAttributeArrayOutputWithContext(context.Context) GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput
}

type GetProvisioningtemplateTemplateCombinationsAttributeArray []GetProvisioningtemplateTemplateCombinationsAttributeInput

func (GetProvisioningtemplateTemplateCombinationsAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProvisioningtemplateTemplateCombinationsAttribute)(nil)).Elem()
}

func (i GetProvisioningtemplateTemplateCombinationsAttributeArray) ToGetProvisioningtemplateTemplateCombinationsAttributeArrayOutput() GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput {
	return i.ToGetProvisioningtemplateTemplateCombinationsAttributeArrayOutputWithContext(context.Background())
}

func (i GetProvisioningtemplateTemplateCombinationsAttributeArray) ToGetProvisioningtemplateTemplateCombinationsAttributeArrayOutputWithContext(ctx context.Context) GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput)
}

type GetProvisioningtemplateTemplateCombinationsAttributeOutput struct{ *pulumi.OutputState }

func (GetProvisioningtemplateTemplateCombinationsAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProvisioningtemplateTemplateCombinationsAttribute)(nil)).Elem()
}

func (o GetProvisioningtemplateTemplateCombinationsAttributeOutput) ToGetProvisioningtemplateTemplateCombinationsAttributeOutput() GetProvisioningtemplateTemplateCombinationsAttributeOutput {
	return o
}

func (o GetProvisioningtemplateTemplateCombinationsAttributeOutput) ToGetProvisioningtemplateTemplateCombinationsAttributeOutputWithContext(ctx context.Context) GetProvisioningtemplateTemplateCombinationsAttributeOutput {
	return o
}

// The environment ID for this template combination.
func (o GetProvisioningtemplateTemplateCombinationsAttributeOutput) EnvironmentId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProvisioningtemplateTemplateCombinationsAttribute) int { return v.EnvironmentId }).(pulumi.IntOutput)
}

// The hostgroup ID for this template combination.
func (o GetProvisioningtemplateTemplateCombinationsAttributeOutput) HostgroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProvisioningtemplateTemplateCombinationsAttribute) int { return v.HostgroupId }).(pulumi.IntOutput)
}

// Template combination unique identifier.
func (o GetProvisioningtemplateTemplateCombinationsAttributeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetProvisioningtemplateTemplateCombinationsAttribute) int { return v.Id }).(pulumi.IntOutput)
}

type GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProvisioningtemplateTemplateCombinationsAttribute)(nil)).Elem()
}

func (o GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput) ToGetProvisioningtemplateTemplateCombinationsAttributeArrayOutput() GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput {
	return o
}

func (o GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput) ToGetProvisioningtemplateTemplateCombinationsAttributeArrayOutputWithContext(ctx context.Context) GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput {
	return o
}

func (o GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput) Index(i pulumi.IntInput) GetProvisioningtemplateTemplateCombinationsAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProvisioningtemplateTemplateCombinationsAttribute {
		return vs[0].([]GetProvisioningtemplateTemplateCombinationsAttribute)[vs[1].(int)]
	}).(GetProvisioningtemplateTemplateCombinationsAttributeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeprofileComputeAttributeInput)(nil)).Elem(), ComputeprofileComputeAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeprofileComputeAttributeArrayInput)(nil)).Elem(), ComputeprofileComputeAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostInterfacesAttributeInput)(nil)).Elem(), HostInterfacesAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostInterfacesAttributeArrayInput)(nil)).Elem(), HostInterfacesAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobtemplateTemplateInputInput)(nil)).Elem(), JobtemplateTemplateInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobtemplateTemplateInputArrayInput)(nil)).Elem(), JobtemplateTemplateInputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KatelloContentViewFilterInput)(nil)).Elem(), KatelloContentViewFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KatelloContentViewFilterArrayInput)(nil)).Elem(), KatelloContentViewFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KatelloContentViewFilterRuleInput)(nil)).Elem(), KatelloContentViewFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KatelloContentViewFilterRuleArrayInput)(nil)).Elem(), KatelloContentViewFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningtemplateTemplateCombinationsAttributeInput)(nil)).Elem(), ProvisioningtemplateTemplateCombinationsAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningtemplateTemplateCombinationsAttributeArrayInput)(nil)).Elem(), ProvisioningtemplateTemplateCombinationsAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeprofileComputeAttributeInput)(nil)).Elem(), GetComputeprofileComputeAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeprofileComputeAttributeArrayInput)(nil)).Elem(), GetComputeprofileComputeAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobtemplateTemplateInputInput)(nil)).Elem(), GetJobtemplateTemplateInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobtemplateTemplateInputArrayInput)(nil)).Elem(), GetJobtemplateTemplateInputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKatelloContentViewFilterInput)(nil)).Elem(), GetKatelloContentViewFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKatelloContentViewFilterArrayInput)(nil)).Elem(), GetKatelloContentViewFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKatelloContentViewFilterRuleInput)(nil)).Elem(), GetKatelloContentViewFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKatelloContentViewFilterRuleArrayInput)(nil)).Elem(), GetKatelloContentViewFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProvisioningtemplateTemplateCombinationsAttributeInput)(nil)).Elem(), GetProvisioningtemplateTemplateCombinationsAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProvisioningtemplateTemplateCombinationsAttributeArrayInput)(nil)).Elem(), GetProvisioningtemplateTemplateCombinationsAttributeArray{})
	pulumi.RegisterOutputType(ComputeprofileComputeAttributeOutput{})
	pulumi.RegisterOutputType(ComputeprofileComputeAttributeArrayOutput{})
	pulumi.RegisterOutputType(HostInterfacesAttributeOutput{})
	pulumi.RegisterOutputType(HostInterfacesAttributeArrayOutput{})
	pulumi.RegisterOutputType(JobtemplateTemplateInputOutput{})
	pulumi.RegisterOutputType(JobtemplateTemplateInputArrayOutput{})
	pulumi.RegisterOutputType(KatelloContentViewFilterOutput{})
	pulumi.RegisterOutputType(KatelloContentViewFilterArrayOutput{})
	pulumi.RegisterOutputType(KatelloContentViewFilterRuleOutput{})
	pulumi.RegisterOutputType(KatelloContentViewFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(ProvisioningtemplateTemplateCombinationsAttributeOutput{})
	pulumi.RegisterOutputType(ProvisioningtemplateTemplateCombinationsAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetComputeprofileComputeAttributeOutput{})
	pulumi.RegisterOutputType(GetComputeprofileComputeAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetJobtemplateTemplateInputOutput{})
	pulumi.RegisterOutputType(GetJobtemplateTemplateInputArrayOutput{})
	pulumi.RegisterOutputType(GetKatelloContentViewFilterOutput{})
	pulumi.RegisterOutputType(GetKatelloContentViewFilterArrayOutput{})
	pulumi.RegisterOutputType(GetKatelloContentViewFilterRuleOutput{})
	pulumi.RegisterOutputType(GetKatelloContentViewFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(GetProvisioningtemplateTemplateCombinationsAttributeOutput{})
	pulumi.RegisterOutputType(GetProvisioningtemplateTemplateCombinationsAttributeArrayOutput{})
}
