{
    "name": "foreman",
    "displayName": "Foreman",
    "description": "A Pulumi package for creating and managing foreman cloud resources.",
    "keywords": [
        "foreman",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`foreman` Terraform Provider](https://github.com/terraform-providers/terraform-provider-foreman).",
    "repository": "https://github.com/masikrus/pulumi-foreman",
    "publisher": "masikrus",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/masikrus/pulumi-foreman/sdk/go/foreman",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageName": "pulumi-foreman",
            "packageDescription": "A Pulumi package for creating and managing foreman cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-foreman)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-foreman` repo](https://github.com/masikrus/pulumi-foreman/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-foreman` repo](https://github.com/terraform-providers/terraform-provider-foreman/issues).",
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-foreman)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-foreman` repo](https://github.com/masikrus/pulumi-foreman/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-foreman` repo](https://github.com/terraform-providers/terraform-provider-foreman/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "clientAuthNegotiate": {
                "type": "boolean",
                "description": "Whether or not the client should try to authenticate through the HTTP negotiate mechanism. Defaults to `false`.\n"
            },
            "clientPassword": {
                "type": "string",
                "description": "The username to authenticate against Foreman. This can also be set through the environment variable\n`FOREMAN_CLIENT_PASSWORD`. Defaults to `\"\"`.\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_CLIENT_PASSWORD"
                    ]
                }
            },
            "clientTlsInsecure": {
                "type": "boolean",
                "description": "Whether or not to verify the server's certificate. Defaults to `false`.\n"
            },
            "clientUsername": {
                "type": "string",
                "description": "The username to authenticate against Foreman. This can also be set through the environment variable\n`FOREMAN_CLIENT_USERNAME`. Defaults to `\"\"`.\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_CLIENT_USERNAME"
                    ]
                }
            },
            "locationId": {
                "type": "integer",
                "description": "The location for all resources requested and created by the providerDefaults to \"0\". Set organization_id and location_id\nto a value \u003c 0 if you need to disable Locations and Organizations on Foreman older than 1.21\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_LOCATION_ID"
                    ]
                }
            },
            "organizationId": {
                "type": "integer",
                "description": "The organization for all resource requested and created by the Provider Defaults to \"0\". Set organization_id and\nlocation_id to a value \u003c 0 if you need to disable Locations and Organizations on Foreman older than 1.21\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_ORGANIZATION_ID"
                    ]
                }
            },
            "providerLogfile": {
                "type": "string"
            },
            "providerLoglevel": {
                "type": "string",
                "description": "The level of verbosity for the provider's log file. This setting determines which types of log messages are written and\nwhich are ignored. Possible values (from most verbose to least verbose) include 'DEBUG', 'TRACE', 'INFO', 'WARNING',\n'ERROR', and 'NONE'. The provider's logs will be written to the location specified by `provider_logfile`. This can also\nbe set through the environment variable `FOREMAN_PROVIDER_LOGLEVEL`. Defaults to `'INFO'`.\n"
            },
            "serverHostname": {
                "type": "string",
                "description": "The hostname / IP address of the Foreman REST API server\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_SERVER_HOSTNAME"
                    ]
                }
            },
            "serverProtocol": {
                "type": "string",
                "description": "The protocol the Foreman REST API server is using for communication. Defaults to `\"https\"`.\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_PROTOCOL"
                    ]
                }
            }
        },
        "defaults": [
            "serverHostname"
        ]
    },
    "types": {
        "foreman:index/ComputeprofileComputeAttribute:ComputeprofileComputeAttribute": {
            "properties": {
                "computeResourceId": {
                    "type": "integer",
                    "description": "ID of the compute resource\n"
                },
                "id": {
                    "type": "integer",
                    "description": "ID of the compute_attribute\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auto-generated name of the compute attribute\n"
                },
                "vmAttrs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "VM attributes as JSON\n"
                }
            },
            "type": "object",
            "required": [
                "computeResourceId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "computeResourceId",
                        "id",
                        "name",
                        "vmAttrs"
                    ]
                }
            }
        },
        "foreman:index/HostInterfacesAttribute:HostInterfacesAttribute": {
            "properties": {
                "attachedDevices": {
                    "type": "string",
                    "description": "Identifiers of attached interfaces, e.g. 'eth1', 'eth2' as comma-separated list\n"
                },
                "attachedTo": {
                    "type": "string",
                    "description": "Identifier of the interface to which this interface belongs.\n"
                },
                "bmcProvider": {
                    "type": "string",
                    "description": "Provider used for BMC/IMPI functionality. Values include: `\"IPMI\"`\n"
                },
                "computeAttributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Hypervisor specific interface options\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the interface.\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of this interface local to the host.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP address associated with the interface.\n"
                },
                "mac": {
                    "type": "string",
                    "description": "MAC address associated with the interface.\n"
                },
                "managed": {
                    "type": "boolean",
                    "description": "Whether or not this interface is managed by Foreman.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the interface\n"
                },
                "password": {
                    "type": "string",
                    "description": "Associated password used for BMC/IPMI functionality.\n",
                    "secret": true
                },
                "primary": {
                    "type": "boolean",
                    "description": "Whether or not this is the primary interface.\n"
                },
                "provision": {
                    "type": "boolean",
                    "description": "Whether or not this interface is used to provision the host.\n"
                },
                "subnetId": {
                    "type": "integer",
                    "description": "ID of the subnet to associate with this interface.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of interface. Values include: `\"interface\"`, `\"bmc\"`, `\"bond\"`, `\"bridge\"`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username used for BMC/IPMI functionality.\n"
                },
                "virtual": {
                    "type": "boolean",
                    "description": "Whether or not this is a virtual interface.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "ip",
                        "mac",
                        "name",
                        "subnetId"
                    ]
                }
            }
        },
        "foreman:index/JobtemplateTemplateInput:JobtemplateTemplateInput": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of a template input.\n"
                },
                "advanced": {
                    "type": "boolean"
                },
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "factName": {
                    "type": "string"
                },
                "hiddenValue": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "inputType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the template input\n"
                },
                "puppetClassName": {
                    "type": "string"
                },
                "puppetParameterName": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "resourceType": {
                    "type": "string"
                },
                "templateId": {
                    "type": "integer"
                },
                "valueType": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "default",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "__meta_",
                        "default",
                        "id",
                        "name",
                        "templateId"
                    ]
                }
            }
        },
        "foreman:index/KatelloContentViewFilter:KatelloContentViewFilter": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inclusion": {
                    "type": "boolean",
                    "description": "specifies if content should be included or excluded, default: inclusion=false\n"
                },
                "name": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/KatelloContentViewFilterRule:KatelloContentViewFilterRule"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of this filter, e.g. DEB or RPM\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "type"
                    ]
                }
            }
        },
        "foreman:index/KatelloContentViewFilterRule:KatelloContentViewFilterRule": {
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "Filter pattern of this filter @EXAMPLE apt*\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "foreman:index/ProvisioningtemplateTemplateCombinationsAttribute:ProvisioningtemplateTemplateCombinationsAttribute": {
            "properties": {
                "environmentId": {
                    "type": "integer",
                    "description": "The environment ID for this template combination.\n"
                },
                "hostgroupId": {
                    "type": "integer",
                    "description": "The hostgroup ID for this template combination.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Template combination unique identifier.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "environmentId",
                        "hostgroupId",
                        "id"
                    ]
                }
            }
        },
        "foreman:index/getComputeprofileComputeAttribute:getComputeprofileComputeAttribute": {
            "properties": {
                "computeResourceId": {
                    "type": "integer",
                    "description": "ID of the compute resource\n"
                },
                "id": {
                    "type": "integer",
                    "description": "ID of the compute_attribute\n"
                },
                "name": {
                    "type": "string",
                    "description": "Auto-generated name of the compute attribute\n"
                },
                "vmAttrs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "VM attributes as JSON\n"
                }
            },
            "type": "object",
            "required": [
                "computeResourceId",
                "id",
                "name",
                "vmAttrs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "foreman:index/getJobtemplateTemplateInput:getJobtemplateTemplateInput": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of a template input.\n"
                },
                "advanced": {
                    "type": "boolean"
                },
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "factName": {
                    "type": "string"
                },
                "hiddenValue": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "inputType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the template input\n"
                },
                "puppetClassName": {
                    "type": "string"
                },
                "puppetParameterName": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "resourceType": {
                    "type": "string"
                },
                "templateId": {
                    "type": "integer"
                },
                "valueType": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "__meta_",
                "advanced",
                "default",
                "description",
                "factName",
                "hiddenValue",
                "id",
                "inputType",
                "name",
                "puppetClassName",
                "puppetParameterName",
                "required",
                "resourceType",
                "templateId",
                "valueType",
                "variableName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "foreman:index/getKatelloContentViewFilter:getKatelloContentViewFilter": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inclusion": {
                    "type": "boolean",
                    "description": "specifies if content should be included or excluded, default: inclusion=false\n"
                },
                "name": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/getKatelloContentViewFilterRule:getKatelloContentViewFilterRule"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of this filter, e.g. DEB or RPM\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "inclusion",
                "name",
                "rules",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "foreman:index/getKatelloContentViewFilterRule:getKatelloContentViewFilterRule": {
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "Filter pattern of this filter @EXAMPLE apt*\n"
                }
            },
            "type": "object",
            "required": [
                "architecture",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "foreman:index/getProvisioningtemplateTemplateCombinationsAttribute:getProvisioningtemplateTemplateCombinationsAttribute": {
            "properties": {
                "environmentId": {
                    "type": "integer",
                    "description": "The environment ID for this template combination.\n"
                },
                "hostgroupId": {
                    "type": "integer",
                    "description": "The hostgroup ID for this template combination.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Template combination unique identifier.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentId",
                "hostgroupId",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the foreman package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "clientAuthNegotiate": {
                "type": "boolean",
                "description": "Whether or not the client should try to authenticate through the HTTP negotiate mechanism. Defaults to `false`.\n"
            },
            "clientPassword": {
                "type": "string",
                "description": "The username to authenticate against Foreman. This can also be set through the environment variable\n`FOREMAN_CLIENT_PASSWORD`. Defaults to `\"\"`.\n"
            },
            "clientTlsInsecure": {
                "type": "boolean",
                "description": "Whether or not to verify the server's certificate. Defaults to `false`.\n"
            },
            "clientUsername": {
                "type": "string",
                "description": "The username to authenticate against Foreman. This can also be set through the environment variable\n`FOREMAN_CLIENT_USERNAME`. Defaults to `\"\"`.\n"
            },
            "locationId": {
                "type": "integer",
                "description": "The location for all resources requested and created by the providerDefaults to \"0\". Set organization_id and location_id\nto a value \u003c 0 if you need to disable Locations and Organizations on Foreman older than 1.21\n"
            },
            "organizationId": {
                "type": "integer",
                "description": "The organization for all resource requested and created by the Provider Defaults to \"0\". Set organization_id and\nlocation_id to a value \u003c 0 if you need to disable Locations and Organizations on Foreman older than 1.21\n"
            },
            "providerLogfile": {
                "type": "string"
            },
            "providerLoglevel": {
                "type": "string",
                "description": "The level of verbosity for the provider's log file. This setting determines which types of log messages are written and\nwhich are ignored. Possible values (from most verbose to least verbose) include 'DEBUG', 'TRACE', 'INFO', 'WARNING',\n'ERROR', and 'NONE'. The provider's logs will be written to the location specified by `provider_logfile`. This can also\nbe set through the environment variable `FOREMAN_PROVIDER_LOGLEVEL`. Defaults to `'INFO'`.\n"
            },
            "serverHostname": {
                "type": "string",
                "description": "The hostname / IP address of the Foreman REST API server\n"
            },
            "serverProtocol": {
                "type": "string",
                "description": "The protocol the Foreman REST API server is using for communication. Defaults to `\"https\"`.\n"
            }
        },
        "inputProperties": {
            "clientAuthNegotiate": {
                "type": "boolean",
                "description": "Whether or not the client should try to authenticate through the HTTP negotiate mechanism. Defaults to `false`.\n"
            },
            "clientPassword": {
                "type": "string",
                "description": "The username to authenticate against Foreman. This can also be set through the environment variable\n`FOREMAN_CLIENT_PASSWORD`. Defaults to `\"\"`.\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_CLIENT_PASSWORD"
                    ]
                }
            },
            "clientTlsInsecure": {
                "type": "boolean",
                "description": "Whether or not to verify the server's certificate. Defaults to `false`.\n"
            },
            "clientUsername": {
                "type": "string",
                "description": "The username to authenticate against Foreman. This can also be set through the environment variable\n`FOREMAN_CLIENT_USERNAME`. Defaults to `\"\"`.\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_CLIENT_USERNAME"
                    ]
                }
            },
            "locationId": {
                "type": "integer",
                "description": "The location for all resources requested and created by the providerDefaults to \"0\". Set organization_id and location_id\nto a value \u003c 0 if you need to disable Locations and Organizations on Foreman older than 1.21\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_LOCATION_ID"
                    ]
                }
            },
            "organizationId": {
                "type": "integer",
                "description": "The organization for all resource requested and created by the Provider Defaults to \"0\". Set organization_id and\nlocation_id to a value \u003c 0 if you need to disable Locations and Organizations on Foreman older than 1.21\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_ORGANIZATION_ID"
                    ]
                }
            },
            "providerLogfile": {
                "type": "string"
            },
            "providerLoglevel": {
                "type": "string",
                "description": "The level of verbosity for the provider's log file. This setting determines which types of log messages are written and\nwhich are ignored. Possible values (from most verbose to least verbose) include 'DEBUG', 'TRACE', 'INFO', 'WARNING',\n'ERROR', and 'NONE'. The provider's logs will be written to the location specified by `provider_logfile`. This can also\nbe set through the environment variable `FOREMAN_PROVIDER_LOGLEVEL`. Defaults to `'INFO'`.\n"
            },
            "serverHostname": {
                "type": "string",
                "description": "The hostname / IP address of the Foreman REST API server\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_SERVER_HOSTNAME"
                    ]
                }
            },
            "serverProtocol": {
                "type": "string",
                "description": "The protocol the Foreman REST API server is using for communication. Defaults to `\"https\"`.\n",
                "defaultInfo": {
                    "environment": [
                        "FOREMAN_PROTOCOL"
                    ]
                }
            }
        }
    },
    "resources": {
        "foreman:index/architecture:Architecture": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of an instruction set architecture (ISA).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the architecture. Valid characters: ^[A-Za-z0-9-_.]+$. @EXAMPLE \"i386\"\n"
                },
                "operatingsystemIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the operating systems associated with this architecture\n"
                }
            },
            "required": [
                "__meta_",
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the architecture. Valid characters: ^[A-Za-z0-9-_.]+$. @EXAMPLE \"i386\"\n"
                },
                "operatingsystemIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the operating systems associated with this architecture\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Architecture resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of an instruction set architecture (ISA).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the architecture. Valid characters: ^[A-Za-z0-9-_.]+$. @EXAMPLE \"i386\"\n"
                    },
                    "operatingsystemIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the operating systems associated with this architecture\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/computeprofile:Computeprofile": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of a compute profile.\n"
                },
                "computeAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/ComputeprofileComputeAttribute:ComputeprofileComputeAttribute"
                    },
                    "description": "List of compute attributes\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the compute profile\n"
                }
            },
            "required": [
                "__meta_",
                "computeAttributes",
                "name"
            ],
            "inputProperties": {
                "computeAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/ComputeprofileComputeAttribute:ComputeprofileComputeAttribute"
                    },
                    "description": "List of compute attributes\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the compute profile\n"
                }
            },
            "requiredInputs": [
                "computeAttributes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Computeprofile resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of a compute profile.\n"
                    },
                    "computeAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/foreman:index/ComputeprofileComputeAttribute:ComputeprofileComputeAttribute"
                        },
                        "description": "List of compute attributes\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the compute profile\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/computeresource:Computeresource": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of computeresource. ComputeResources serve as an identification string that defines\nautonomy, authority, or control for a portion of a network.\n"
                },
                "cachingenabled": {
                    "type": "boolean",
                    "description": "For VMware only\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "For oVirt, VMware Datacenter\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the compute resource\n"
                },
                "displaytype": {
                    "type": "string",
                    "description": "For Libvirt: \"VNC\" or \"SPICE\". For VMWare: \"VNC\" or \"VMRC\"\n"
                },
                "hypervisor": {
                    "type": "string",
                    "description": "The HyperVisor/Cloud Provider for this Compute Resource:supported providers include \"Libvirt\", \"Ovirt\", \"EC2\",\"Vmware\",\n\"Openstack\", \"Rackspace\", \"GCE\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the compute resource\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for oVirt, EC2, VMware, OpenStack. Secret key for EC2\n",
                    "secret": true
                },
                "server": {
                    "type": "string",
                    "description": "For VMware\n"
                },
                "setconsolepassword": {
                    "type": "boolean",
                    "description": "For Libvirt and VMware only\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL for Libvirt, oVirt, OpenStack and Rackspace\n"
                },
                "user": {
                    "type": "string",
                    "description": "Username for oVirt, EC2, VMware, OpenStack. Access Key for EC2.\n"
                }
            },
            "required": [
                "__meta_",
                "hypervisor",
                "name",
                "url"
            ],
            "inputProperties": {
                "cachingenabled": {
                    "type": "boolean",
                    "description": "For VMware only\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "For oVirt, VMware Datacenter\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the compute resource\n"
                },
                "displaytype": {
                    "type": "string",
                    "description": "For Libvirt: \"VNC\" or \"SPICE\". For VMWare: \"VNC\" or \"VMRC\"\n"
                },
                "hypervisor": {
                    "type": "string",
                    "description": "The HyperVisor/Cloud Provider for this Compute Resource:supported providers include \"Libvirt\", \"Ovirt\", \"EC2\",\"Vmware\",\n\"Openstack\", \"Rackspace\", \"GCE\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the compute resource\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for oVirt, EC2, VMware, OpenStack. Secret key for EC2\n",
                    "secret": true
                },
                "server": {
                    "type": "string",
                    "description": "For VMware\n"
                },
                "setconsolepassword": {
                    "type": "boolean",
                    "description": "For Libvirt and VMware only\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL for Libvirt, oVirt, OpenStack and Rackspace\n"
                },
                "user": {
                    "type": "string",
                    "description": "Username for oVirt, EC2, VMware, OpenStack. Access Key for EC2.\n"
                }
            },
            "requiredInputs": [
                "hypervisor",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Computeresource resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of computeresource. ComputeResources serve as an identification string that defines\nautonomy, authority, or control for a portion of a network.\n"
                    },
                    "cachingenabled": {
                        "type": "boolean",
                        "description": "For VMware only\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "For oVirt, VMware Datacenter\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the compute resource\n"
                    },
                    "displaytype": {
                        "type": "string",
                        "description": "For Libvirt: \"VNC\" or \"SPICE\". For VMWare: \"VNC\" or \"VMRC\"\n"
                    },
                    "hypervisor": {
                        "type": "string",
                        "description": "The HyperVisor/Cloud Provider for this Compute Resource:supported providers include \"Libvirt\", \"Ovirt\", \"EC2\",\"Vmware\",\n\"Openstack\", \"Rackspace\", \"GCE\"\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the compute resource\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for oVirt, EC2, VMware, OpenStack. Secret key for EC2\n",
                        "secret": true
                    },
                    "server": {
                        "type": "string",
                        "description": "For VMware\n"
                    },
                    "setconsolepassword": {
                        "type": "boolean",
                        "description": "For Libvirt and VMware only\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL for Libvirt, oVirt, OpenStack and Rackspace\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "Username for oVirt, EC2, VMware, OpenStack. Access Key for EC2.\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/defaulttemplate:Defaulttemplate": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of default Template. Default Templates serve as an identification string that defines\nautonomy, authority, or control for a portion of a network.\n"
                },
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system to assign this Default Template to\n"
                },
                "provisioningtemplateId": {
                    "type": "integer",
                    "description": "Id of the Provisioning Template\n"
                },
                "templatekindId": {
                    "type": "integer",
                    "description": "Template Kind Id to define the Default Template\n"
                }
            },
            "required": [
                "__meta_"
            ],
            "inputProperties": {
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system to assign this Default Template to\n"
                },
                "provisioningtemplateId": {
                    "type": "integer",
                    "description": "Id of the Provisioning Template\n"
                },
                "templatekindId": {
                    "type": "integer",
                    "description": "Template Kind Id to define the Default Template\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Defaulttemplate resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of default Template. Default Templates serve as an identification string that defines\nautonomy, authority, or control for a portion of a network.\n"
                    },
                    "operatingsystemId": {
                        "type": "integer",
                        "description": "ID of the operating system to assign this Default Template to\n"
                    },
                    "provisioningtemplateId": {
                        "type": "integer",
                        "description": "Id of the Provisioning Template\n"
                    },
                    "templatekindId": {
                        "type": "integer",
                        "description": "Template Kind Id to define the Default Template\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/domain:Domain": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of domain. Domains serve as an identification string that defines autonomy, authority,\nor control for a portion of a network.\n"
                },
                "fullname": {
                    "type": "string",
                    "description": "Description of the domain\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain - the full DNS domain name. @EXAMPLE \"dev.dc1.company.com\"\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of parameters that will be saved as domain parameters in the domain config.\n"
                }
            },
            "required": [
                "__meta_",
                "name"
            ],
            "inputProperties": {
                "fullname": {
                    "type": "string",
                    "description": "Description of the domain\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain - the full DNS domain name. @EXAMPLE \"dev.dc1.company.com\"\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of parameters that will be saved as domain parameters in the domain config.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Domain resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of domain. Domains serve as an identification string that defines autonomy, authority,\nor control for a portion of a network.\n"
                    },
                    "fullname": {
                        "type": "string",
                        "description": "Description of the domain\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the domain - the full DNS domain name. @EXAMPLE \"dev.dc1.company.com\"\n"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of parameters that will be saved as domain parameters in the domain config.\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/environment:Environment": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY A puppet environment, branch.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the environment. Usually maps to the name of a puppet branch. @EXAMPLE \"production\"\n"
                }
            },
            "required": [
                "__meta_",
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the environment. Usually maps to the name of a puppet branch. @EXAMPLE \"production\"\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Environment resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY A puppet environment, branch.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the environment. Usually maps to the name of a puppet branch. @EXAMPLE \"production\"\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/globalParameter:GlobalParameter": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of common_parameter. Global parameters are available for all resources\n"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "__meta_",
                "name",
                "value"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GlobalParameter resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of common_parameter. Global parameters are available for all resources\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/host:Host": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY A host managed by Foreman.\n"
                },
                "architectureId": {
                    "type": "integer",
                    "description": "ID of the architecture of this host\n"
                },
                "bmcSuccess": {
                    "type": "boolean",
                    "deprecationMessage": "The feature no longer exists"
                },
                "comment": {
                    "type": "string",
                    "description": "Add additional information about this host.Note: Changes to this attribute will trigger a host rebuild.\n"
                },
                "computeAttributes": {
                    "type": "string",
                    "description": "Hypervisor specific VM options. Must be a JSON string, as every compute provider has different attributes schema\n"
                },
                "computeProfileId": {
                    "type": "integer"
                },
                "computeResourceId": {
                    "type": "integer"
                },
                "configGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the applied config groups.\n"
                },
                "domainId": {
                    "type": "integer",
                    "description": "ID of the domain to assign to the host.\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "The domain name of the host.\n"
                },
                "enableBmc": {
                    "type": "boolean",
                    "description": "Enables PMI/BMC functionality. On create and update calls, having this enabled will force a host to poweroff, set next\nboot to PXE and power on. Defaults to `false`.\n"
                },
                "environmentId": {
                    "type": "integer",
                    "description": "ID of the environment to assign to the host.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "Host fully qualified domain name. Read-only value to be used in variables. @EXAMPLE \"compute01.dc1.company.com\"\n"
                },
                "hostgroupId": {
                    "type": "integer",
                    "description": "ID of the hostgroup to assign to the host.\n"
                },
                "imageId": {
                    "type": "integer",
                    "description": "ID of an image to be used as base for this host when cloning\n"
                },
                "interfacesAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/HostInterfacesAttribute:HostInterfacesAttribute"
                    },
                    "description": "Host interface information.\n"
                },
                "locationName": {
                    "type": "string",
                    "description": "NAME of the location to assign to the host.\n"
                },
                "managePowerOperations": {
                    "type": "boolean",
                    "description": "Manage power operations, e.g. power on, if host's build flag will be enabled.\n"
                },
                "managed": {
                    "type": "boolean",
                    "description": "Whether or not this host is managed by Foreman. Create host only, don't set build status or manage power states.\n"
                },
                "mediumId": {
                    "type": "integer",
                    "description": "ID of the medium mounted on the host.\n"
                },
                "modelId": {
                    "type": "integer",
                    "description": "ID of the hardware model if applicable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of this host as stored in Foreman. Can be short name or FQDN, depending on your Foreman settings (especially the\nsetting 'append_domain_name_for_hosts').\n"
                },
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system to put on the host.\n"
                },
                "organizationName": {
                    "type": "string",
                    "description": "NAME of the organization to assign to the host.\n"
                },
                "ownerId": {
                    "type": "integer",
                    "description": "ID of the user or usergroup that owns the host.\n"
                },
                "ownerType": {
                    "type": "string",
                    "description": "Owner of the host, must be either User ot Usergroup\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of parameters that will be saved as host parameters in the machine config.\n"
                },
                "provisionMethod": {
                    "type": "string",
                    "description": "Sets the provision method in Foreman for this host: either network-based ('build') or image-based ('image')\n"
                },
                "ptableId": {
                    "type": "integer",
                    "description": "ID of the partition table the host should use\n"
                },
                "puppetClassIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the applied puppet classes.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "Number of times to retry on a failed attempt to register or delete a host in foreman.\n"
                },
                "rootPassword": {
                    "type": "string",
                    "description": "Default root password\n",
                    "secret": true
                },
                "setBuildFlag": {
                    "type": "boolean",
                    "description": "Sets the Foreman-internal 'build' flag on this host - even if it is already built completely.\n"
                },
                "shortname": {
                    "type": "string",
                    "description": "The short name of this host. Example: when the FQDN is 'host01.example.org', then 'host01' is the short name.\n"
                },
                "subnetId": {
                    "type": "integer",
                    "description": "ID of the subnet the host should be placed in\n"
                },
                "token": {
                    "type": "string",
                    "description": "Build token. Can be used to signal to Foreman that a host build is complete.\n"
                }
            },
            "required": [
                "__meta_",
                "architectureId",
                "comment",
                "computeAttributes",
                "computeProfileId",
                "computeResourceId",
                "configGroupIds",
                "domainId",
                "domainName",
                "environmentId",
                "fqdn",
                "hostgroupId",
                "imageId",
                "interfacesAttributes",
                "mediumId",
                "modelId",
                "name",
                "operatingsystemId",
                "ownerId",
                "ownerType",
                "parameters",
                "ptableId",
                "puppetClassIds",
                "shortname",
                "subnetId",
                "token"
            ],
            "inputProperties": {
                "architectureId": {
                    "type": "integer",
                    "description": "ID of the architecture of this host\n"
                },
                "bmcSuccess": {
                    "type": "boolean",
                    "deprecationMessage": "The feature no longer exists"
                },
                "comment": {
                    "type": "string",
                    "description": "Add additional information about this host.Note: Changes to this attribute will trigger a host rebuild.\n"
                },
                "computeAttributes": {
                    "type": "string",
                    "description": "Hypervisor specific VM options. Must be a JSON string, as every compute provider has different attributes schema\n"
                },
                "computeProfileId": {
                    "type": "integer"
                },
                "computeResourceId": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "configGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the applied config groups.\n"
                },
                "domainId": {
                    "type": "integer",
                    "description": "ID of the domain to assign to the host.\n",
                    "willReplaceOnChanges": true
                },
                "enableBmc": {
                    "type": "boolean",
                    "description": "Enables PMI/BMC functionality. On create and update calls, having this enabled will force a host to poweroff, set next\nboot to PXE and power on. Defaults to `false`.\n"
                },
                "environmentId": {
                    "type": "integer",
                    "description": "ID of the environment to assign to the host.\n"
                },
                "hostgroupId": {
                    "type": "integer",
                    "description": "ID of the hostgroup to assign to the host.\n",
                    "willReplaceOnChanges": true
                },
                "imageId": {
                    "type": "integer",
                    "description": "ID of an image to be used as base for this host when cloning\n",
                    "willReplaceOnChanges": true
                },
                "interfacesAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/HostInterfacesAttribute:HostInterfacesAttribute"
                    },
                    "description": "Host interface information.\n"
                },
                "locationName": {
                    "type": "string",
                    "description": "NAME of the location to assign to the host.\n"
                },
                "managePowerOperations": {
                    "type": "boolean",
                    "description": "Manage power operations, e.g. power on, if host's build flag will be enabled.\n"
                },
                "managed": {
                    "type": "boolean",
                    "description": "Whether or not this host is managed by Foreman. Create host only, don't set build status or manage power states.\n"
                },
                "mediumId": {
                    "type": "integer",
                    "description": "ID of the medium mounted on the host.\n",
                    "willReplaceOnChanges": true
                },
                "modelId": {
                    "type": "integer",
                    "description": "ID of the hardware model if applicable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of this host as stored in Foreman. Can be short name or FQDN, depending on your Foreman settings (especially the\nsetting 'append_domain_name_for_hosts').\n",
                    "willReplaceOnChanges": true
                },
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system to put on the host.\n",
                    "willReplaceOnChanges": true
                },
                "organizationName": {
                    "type": "string",
                    "description": "NAME of the organization to assign to the host.\n"
                },
                "ownerId": {
                    "type": "integer",
                    "description": "ID of the user or usergroup that owns the host.\n"
                },
                "ownerType": {
                    "type": "string",
                    "description": "Owner of the host, must be either User ot Usergroup\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of parameters that will be saved as host parameters in the machine config.\n"
                },
                "provisionMethod": {
                    "type": "string",
                    "description": "Sets the provision method in Foreman for this host: either network-based ('build') or image-based ('image')\n",
                    "willReplaceOnChanges": true
                },
                "ptableId": {
                    "type": "integer",
                    "description": "ID of the partition table the host should use\n"
                },
                "puppetClassIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the applied puppet classes.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "Number of times to retry on a failed attempt to register or delete a host in foreman.\n"
                },
                "rootPassword": {
                    "type": "string",
                    "description": "Default root password\n",
                    "secret": true
                },
                "setBuildFlag": {
                    "type": "boolean",
                    "description": "Sets the Foreman-internal 'build' flag on this host - even if it is already built completely.\n"
                },
                "shortname": {
                    "type": "string",
                    "description": "The short name of this host. Example: when the FQDN is 'host01.example.org', then 'host01' is the short name.\n",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "integer",
                    "description": "ID of the subnet the host should be placed in\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Host resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY A host managed by Foreman.\n"
                    },
                    "architectureId": {
                        "type": "integer",
                        "description": "ID of the architecture of this host\n"
                    },
                    "bmcSuccess": {
                        "type": "boolean",
                        "deprecationMessage": "The feature no longer exists"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Add additional information about this host.Note: Changes to this attribute will trigger a host rebuild.\n"
                    },
                    "computeAttributes": {
                        "type": "string",
                        "description": "Hypervisor specific VM options. Must be a JSON string, as every compute provider has different attributes schema\n"
                    },
                    "computeProfileId": {
                        "type": "integer"
                    },
                    "computeResourceId": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "configGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the applied config groups.\n"
                    },
                    "domainId": {
                        "type": "integer",
                        "description": "ID of the domain to assign to the host.\n",
                        "willReplaceOnChanges": true
                    },
                    "domainName": {
                        "type": "string",
                        "description": "The domain name of the host.\n"
                    },
                    "enableBmc": {
                        "type": "boolean",
                        "description": "Enables PMI/BMC functionality. On create and update calls, having this enabled will force a host to poweroff, set next\nboot to PXE and power on. Defaults to `false`.\n"
                    },
                    "environmentId": {
                        "type": "integer",
                        "description": "ID of the environment to assign to the host.\n"
                    },
                    "fqdn": {
                        "type": "string",
                        "description": "Host fully qualified domain name. Read-only value to be used in variables. @EXAMPLE \"compute01.dc1.company.com\"\n"
                    },
                    "hostgroupId": {
                        "type": "integer",
                        "description": "ID of the hostgroup to assign to the host.\n",
                        "willReplaceOnChanges": true
                    },
                    "imageId": {
                        "type": "integer",
                        "description": "ID of an image to be used as base for this host when cloning\n",
                        "willReplaceOnChanges": true
                    },
                    "interfacesAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/foreman:index/HostInterfacesAttribute:HostInterfacesAttribute"
                        },
                        "description": "Host interface information.\n"
                    },
                    "locationName": {
                        "type": "string",
                        "description": "NAME of the location to assign to the host.\n"
                    },
                    "managePowerOperations": {
                        "type": "boolean",
                        "description": "Manage power operations, e.g. power on, if host's build flag will be enabled.\n"
                    },
                    "managed": {
                        "type": "boolean",
                        "description": "Whether or not this host is managed by Foreman. Create host only, don't set build status or manage power states.\n"
                    },
                    "mediumId": {
                        "type": "integer",
                        "description": "ID of the medium mounted on the host.\n",
                        "willReplaceOnChanges": true
                    },
                    "modelId": {
                        "type": "integer",
                        "description": "ID of the hardware model if applicable\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of this host as stored in Foreman. Can be short name or FQDN, depending on your Foreman settings (especially the\nsetting 'append_domain_name_for_hosts').\n",
                        "willReplaceOnChanges": true
                    },
                    "operatingsystemId": {
                        "type": "integer",
                        "description": "ID of the operating system to put on the host.\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationName": {
                        "type": "string",
                        "description": "NAME of the organization to assign to the host.\n"
                    },
                    "ownerId": {
                        "type": "integer",
                        "description": "ID of the user or usergroup that owns the host.\n"
                    },
                    "ownerType": {
                        "type": "string",
                        "description": "Owner of the host, must be either User ot Usergroup\n"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of parameters that will be saved as host parameters in the machine config.\n"
                    },
                    "provisionMethod": {
                        "type": "string",
                        "description": "Sets the provision method in Foreman for this host: either network-based ('build') or image-based ('image')\n",
                        "willReplaceOnChanges": true
                    },
                    "ptableId": {
                        "type": "integer",
                        "description": "ID of the partition table the host should use\n"
                    },
                    "puppetClassIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the applied puppet classes.\n"
                    },
                    "retryCount": {
                        "type": "integer",
                        "description": "Number of times to retry on a failed attempt to register or delete a host in foreman.\n"
                    },
                    "rootPassword": {
                        "type": "string",
                        "description": "Default root password\n",
                        "secret": true
                    },
                    "setBuildFlag": {
                        "type": "boolean",
                        "description": "Sets the Foreman-internal 'build' flag on this host - even if it is already built completely.\n"
                    },
                    "shortname": {
                        "type": "string",
                        "description": "The short name of this host. Example: when the FQDN is 'host01.example.org', then 'host01' is the short name.\n",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "integer",
                        "description": "ID of the subnet the host should be placed in\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Build token. Can be used to signal to Foreman that a host build is complete.\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/hostgroup:Hostgroup": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Hostgroups are organized in a tree-like structure and inherit values from their parent hostgroup(s). When hosts\nget associated with a hostgroup, it will inherit attributes from the hostgroup. This allows for easy, shared\nconfiguration of various hosts based on common attributes.\n"
                },
                "architectureId": {
                    "type": "integer",
                    "description": "ID of the architecture associated with this hostgroup.\n"
                },
                "computeProfileId": {
                    "type": "integer",
                    "description": "ID of the compute profile associated with this hostgroup.\n"
                },
                "computeResourceId": {
                    "type": "integer",
                    "description": "ID of the compute resource associated with this hostgroup.\n"
                },
                "configGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the applied config groups.\n"
                },
                "contentSourceId": {
                    "type": "integer",
                    "description": "ID of the content source associated with this hostgroup.\n"
                },
                "contentViewId": {
                    "type": "integer",
                    "description": "ID of the content view associated with this hostgroup.\n"
                },
                "domainId": {
                    "type": "integer",
                    "description": "ID of the domain associated with this hostgroup.\n"
                },
                "environmentId": {
                    "type": "integer",
                    "description": "ID of the environment associated with this hostgroup.\n"
                },
                "lifecycleEnvironmentId": {
                    "type": "integer",
                    "description": "ID of the lifecycle environment associated with this hostgroup.\n"
                },
                "mediumId": {
                    "type": "integer",
                    "description": "ID of the media associated with this hostgroup.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Hostgroup name. @EXAMPLE \"compute\"\n"
                },
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system associated with this hostgroup.\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of parameters that will be saved as hostgroup parameters in the group config.\n"
                },
                "parentId": {
                    "type": "integer",
                    "description": "ID of the parent hostgroup.\n"
                },
                "ptableId": {
                    "type": "integer",
                    "description": "ID of the partition table associated with this hostgroup.\n"
                },
                "puppetCaProxyId": {
                    "type": "integer",
                    "description": "ID of the smart proxy acting as the puppet certificate authority server for this hostgroup.\n"
                },
                "puppetClassIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the applied puppet classes.\n"
                },
                "puppetProxyId": {
                    "type": "integer",
                    "description": "ID of the smart proxy acting as the puppet proxy server for this hostgroup.\n"
                },
                "pxeLoader": {
                    "type": "string",
                    "description": "Operating system family. Value examples: \"None\", \"PXELinux BIOS\", \"PXELinux UEFI\", \"Grub UEFI\", \"Grub2 UEFI\", \"Grub2\nUEFI SecureBoot\", \"Grub2 UEFI HTTP\", \"Grub2 UEFI HTTPS\", \"Grub2 UEFI HTTPS SecureBoot\", \"iPXE Embedded\", \"iPXE UEFI\nHTTP\", \"iPXE Chain BIOS\", \"iPXE Chain UEFI\"\n"
                },
                "realmId": {
                    "type": "integer",
                    "description": "ID of the realm associated with this hostgroup.\n"
                },
                "rootPassword": {
                    "type": "string",
                    "description": "Default root password\n",
                    "secret": true
                },
                "subnetId": {
                    "type": "integer",
                    "description": "ID of the subnet associated with the hostgroup.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title is the fullname of the hostgroup. A hostgroup's title is a path-like string from the head of the hostgroup\ntree down to this hostgroup. The title will be in the form of: \"\u003cparent 1\u003e/\u003cparent 2\u003e/.../\u003cname\u003e\".\n"
                }
            },
            "required": [
                "__meta_",
                "architectureId",
                "computeProfileId",
                "computeResourceId",
                "configGroupIds",
                "contentSourceId",
                "contentViewId",
                "domainId",
                "environmentId",
                "lifecycleEnvironmentId",
                "mediumId",
                "name",
                "operatingsystemId",
                "ptableId",
                "puppetClassIds",
                "pxeLoader",
                "realmId",
                "subnetId",
                "title"
            ],
            "inputProperties": {
                "architectureId": {
                    "type": "integer",
                    "description": "ID of the architecture associated with this hostgroup.\n"
                },
                "computeProfileId": {
                    "type": "integer",
                    "description": "ID of the compute profile associated with this hostgroup.\n"
                },
                "computeResourceId": {
                    "type": "integer",
                    "description": "ID of the compute resource associated with this hostgroup.\n"
                },
                "configGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the applied config groups.\n"
                },
                "contentSourceId": {
                    "type": "integer",
                    "description": "ID of the content source associated with this hostgroup.\n"
                },
                "contentViewId": {
                    "type": "integer",
                    "description": "ID of the content view associated with this hostgroup.\n"
                },
                "domainId": {
                    "type": "integer",
                    "description": "ID of the domain associated with this hostgroup.\n"
                },
                "environmentId": {
                    "type": "integer",
                    "description": "ID of the environment associated with this hostgroup.\n"
                },
                "lifecycleEnvironmentId": {
                    "type": "integer",
                    "description": "ID of the lifecycle environment associated with this hostgroup.\n"
                },
                "mediumId": {
                    "type": "integer",
                    "description": "ID of the media associated with this hostgroup.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Hostgroup name. @EXAMPLE \"compute\"\n"
                },
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system associated with this hostgroup.\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of parameters that will be saved as hostgroup parameters in the group config.\n"
                },
                "parentId": {
                    "type": "integer",
                    "description": "ID of the parent hostgroup.\n"
                },
                "ptableId": {
                    "type": "integer",
                    "description": "ID of the partition table associated with this hostgroup.\n"
                },
                "puppetCaProxyId": {
                    "type": "integer",
                    "description": "ID of the smart proxy acting as the puppet certificate authority server for this hostgroup.\n"
                },
                "puppetClassIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the applied puppet classes.\n"
                },
                "puppetProxyId": {
                    "type": "integer",
                    "description": "ID of the smart proxy acting as the puppet proxy server for this hostgroup.\n"
                },
                "pxeLoader": {
                    "type": "string",
                    "description": "Operating system family. Value examples: \"None\", \"PXELinux BIOS\", \"PXELinux UEFI\", \"Grub UEFI\", \"Grub2 UEFI\", \"Grub2\nUEFI SecureBoot\", \"Grub2 UEFI HTTP\", \"Grub2 UEFI HTTPS\", \"Grub2 UEFI HTTPS SecureBoot\", \"iPXE Embedded\", \"iPXE UEFI\nHTTP\", \"iPXE Chain BIOS\", \"iPXE Chain UEFI\"\n"
                },
                "realmId": {
                    "type": "integer",
                    "description": "ID of the realm associated with this hostgroup.\n"
                },
                "rootPassword": {
                    "type": "string",
                    "description": "Default root password\n",
                    "secret": true
                },
                "subnetId": {
                    "type": "integer",
                    "description": "ID of the subnet associated with the hostgroup.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Hostgroup resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Hostgroups are organized in a tree-like structure and inherit values from their parent hostgroup(s). When hosts\nget associated with a hostgroup, it will inherit attributes from the hostgroup. This allows for easy, shared\nconfiguration of various hosts based on common attributes.\n"
                    },
                    "architectureId": {
                        "type": "integer",
                        "description": "ID of the architecture associated with this hostgroup.\n"
                    },
                    "computeProfileId": {
                        "type": "integer",
                        "description": "ID of the compute profile associated with this hostgroup.\n"
                    },
                    "computeResourceId": {
                        "type": "integer",
                        "description": "ID of the compute resource associated with this hostgroup.\n"
                    },
                    "configGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the applied config groups.\n"
                    },
                    "contentSourceId": {
                        "type": "integer",
                        "description": "ID of the content source associated with this hostgroup.\n"
                    },
                    "contentViewId": {
                        "type": "integer",
                        "description": "ID of the content view associated with this hostgroup.\n"
                    },
                    "domainId": {
                        "type": "integer",
                        "description": "ID of the domain associated with this hostgroup.\n"
                    },
                    "environmentId": {
                        "type": "integer",
                        "description": "ID of the environment associated with this hostgroup.\n"
                    },
                    "lifecycleEnvironmentId": {
                        "type": "integer",
                        "description": "ID of the lifecycle environment associated with this hostgroup.\n"
                    },
                    "mediumId": {
                        "type": "integer",
                        "description": "ID of the media associated with this hostgroup.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Hostgroup name. @EXAMPLE \"compute\"\n"
                    },
                    "operatingsystemId": {
                        "type": "integer",
                        "description": "ID of the operating system associated with this hostgroup.\n"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of parameters that will be saved as hostgroup parameters in the group config.\n"
                    },
                    "parentId": {
                        "type": "integer",
                        "description": "ID of the parent hostgroup.\n"
                    },
                    "ptableId": {
                        "type": "integer",
                        "description": "ID of the partition table associated with this hostgroup.\n"
                    },
                    "puppetCaProxyId": {
                        "type": "integer",
                        "description": "ID of the smart proxy acting as the puppet certificate authority server for this hostgroup.\n"
                    },
                    "puppetClassIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the applied puppet classes.\n"
                    },
                    "puppetProxyId": {
                        "type": "integer",
                        "description": "ID of the smart proxy acting as the puppet proxy server for this hostgroup.\n"
                    },
                    "pxeLoader": {
                        "type": "string",
                        "description": "Operating system family. Value examples: \"None\", \"PXELinux BIOS\", \"PXELinux UEFI\", \"Grub UEFI\", \"Grub2 UEFI\", \"Grub2\nUEFI SecureBoot\", \"Grub2 UEFI HTTP\", \"Grub2 UEFI HTTPS\", \"Grub2 UEFI HTTPS SecureBoot\", \"iPXE Embedded\", \"iPXE UEFI\nHTTP\", \"iPXE Chain BIOS\", \"iPXE Chain UEFI\"\n"
                    },
                    "realmId": {
                        "type": "integer",
                        "description": "ID of the realm associated with this hostgroup.\n"
                    },
                    "rootPassword": {
                        "type": "string",
                        "description": "Default root password\n",
                        "secret": true
                    },
                    "subnetId": {
                        "type": "integer",
                        "description": "ID of the subnet associated with the hostgroup.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title is the fullname of the hostgroup. A hostgroup's title is a path-like string from the head of the hostgroup\ntree down to this hostgroup. The title will be in the form of: \"\u003cparent 1\u003e/\u003cparent 2\u003e/.../\u003cname\u003e\".\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/httpproxy:Httpproxy": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Defining HTTP Proxies that exist on your network allows you to perform various actions through those proxies.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the http proxy. @EXAMPLE \"proxy.company.com\"\n"
                },
                "url": {
                    "type": "string",
                    "description": "Uniform resource locator of the proxy. @EXAMPLE \"https://proxy.company.com:8443\"\n"
                }
            },
            "required": [
                "__meta_",
                "name",
                "url"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the http proxy. @EXAMPLE \"proxy.company.com\"\n"
                },
                "url": {
                    "type": "string",
                    "description": "Uniform resource locator of the proxy. @EXAMPLE \"https://proxy.company.com:8443\"\n"
                }
            },
            "requiredInputs": [
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Httpproxy resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Defining HTTP Proxies that exist on your network allows you to perform various actions through those proxies.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the http proxy. @EXAMPLE \"proxy.company.com\"\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Uniform resource locator of the proxy. @EXAMPLE \"https://proxy.company.com:8443\"\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/image:Image": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of image.\n"
                },
                "architectureId": {
                    "type": "integer",
                    "description": "ID of the architecture in Foreman\n"
                },
                "computeResourceId": {
                    "type": "integer",
                    "description": "ID of the compute resource in Foreman\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the image to be used in Foreman\n"
                },
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system in Foreman\n"
                },
                "userData": {
                    "type": "boolean",
                    "description": "Does the image support user data (cloud-init etc.)?\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username used to log into the newly created machine that is based on this image\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID of the image from the compute resource\n"
                }
            },
            "required": [
                "__meta_",
                "architectureId",
                "computeResourceId",
                "name",
                "operatingsystemId",
                "username",
                "uuid"
            ],
            "inputProperties": {
                "architectureId": {
                    "type": "integer",
                    "description": "ID of the architecture in Foreman\n"
                },
                "computeResourceId": {
                    "type": "integer",
                    "description": "ID of the compute resource in Foreman\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the image to be used in Foreman\n"
                },
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system in Foreman\n"
                },
                "userData": {
                    "type": "boolean",
                    "description": "Does the image support user data (cloud-init etc.)?\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username used to log into the newly created machine that is based on this image\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID of the image from the compute resource\n"
                }
            },
            "requiredInputs": [
                "architectureId",
                "computeResourceId",
                "operatingsystemId",
                "username",
                "uuid"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Image resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of image.\n"
                    },
                    "architectureId": {
                        "type": "integer",
                        "description": "ID of the architecture in Foreman\n"
                    },
                    "computeResourceId": {
                        "type": "integer",
                        "description": "ID of the compute resource in Foreman\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the image to be used in Foreman\n"
                    },
                    "operatingsystemId": {
                        "type": "integer",
                        "description": "ID of the operating system in Foreman\n"
                    },
                    "userData": {
                        "type": "boolean",
                        "description": "Does the image support user data (cloud-init etc.)?\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username used to log into the newly created machine that is based on this image\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the image from the compute resource\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/jobtemplate:Jobtemplate": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of a job template.\n"
                },
                "description": {
                    "type": "string"
                },
                "descriptionFormat": {
                    "type": "string"
                },
                "jobCategory": {
                    "type": "string"
                },
                "locked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the job template\n"
                },
                "providerType": {
                    "type": "string"
                },
                "snippet": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string",
                    "description": "The template content itself\n"
                },
                "templateInputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/JobtemplateTemplateInput:JobtemplateTemplateInput"
                    }
                }
            },
            "required": [
                "__meta_",
                "jobCategory",
                "name",
                "template"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "descriptionFormat": {
                    "type": "string"
                },
                "jobCategory": {
                    "type": "string"
                },
                "locked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the job template\n",
                    "willReplaceOnChanges": true
                },
                "providerType": {
                    "type": "string"
                },
                "snippet": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string",
                    "description": "The template content itself\n"
                },
                "templateInputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/JobtemplateTemplateInput:JobtemplateTemplateInput"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "jobCategory",
                "template"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Jobtemplate resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of a job template.\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "descriptionFormat": {
                        "type": "string"
                    },
                    "jobCategory": {
                        "type": "string"
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the job template\n",
                        "willReplaceOnChanges": true
                    },
                    "providerType": {
                        "type": "string"
                    },
                    "snippet": {
                        "type": "boolean"
                    },
                    "template": {
                        "type": "string",
                        "description": "The template content itself\n"
                    },
                    "templateInputs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/foreman:index/JobtemplateTemplateInput:JobtemplateTemplateInput"
                        },
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/katelloContentCredential:KatelloContentCredential": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Content Credentials are used to store credentials like GPG Keys and Certificates for the authentication to\nProducts / Repositories.\n"
                },
                "content": {
                    "type": "string",
                    "description": "Public key block in DER encoding or certificate content. @EXAMPLE \"-----BEGIN PGP PUBLIC KEY BLOCK----- ... -----END PGP\nPUBLIC KEY BLOCK-----\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier of the content credential.@EXAMPLE \"RPM-GPG-KEY-centos7\"\n"
                }
            },
            "required": [
                "__meta_",
                "content",
                "name"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "Public key block in DER encoding or certificate content. @EXAMPLE \"-----BEGIN PGP PUBLIC KEY BLOCK----- ... -----END PGP\nPUBLIC KEY BLOCK-----\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Identifier of the content credential.@EXAMPLE \"RPM-GPG-KEY-centos7\"\n"
                }
            },
            "requiredInputs": [
                "content"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KatelloContentCredential resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Content Credentials are used to store credentials like GPG Keys and Certificates for the authentication to\nProducts / Repositories.\n"
                    },
                    "content": {
                        "type": "string",
                        "description": "Public key block in DER encoding or certificate content. @EXAMPLE \"-----BEGIN PGP PUBLIC KEY BLOCK----- ... -----END PGP\nPUBLIC KEY BLOCK-----\"\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Identifier of the content credential.@EXAMPLE \"RPM-GPG-KEY-centos7\"\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/katelloContentView:KatelloContentView": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY (Composite) Content Views create an abstract view on a collection of repositories and allow versioning of these\nviews. Additional fine tuning can be done with package filters.\n"
                },
                "autoPublish": {
                    "type": "boolean",
                    "description": "Relevant for Composite Content Views: 'Automatically publish a new version of the composite content view whenever one of\nits content views is published. Autopublish will only happen for component views that use the 'Always use latest\nversion' option.'\n"
                },
                "componentIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Relevant for CCVs: list of CV version IDs. @EXAMPLE [1, 4]\n"
                },
                "composite": {
                    "type": "boolean",
                    "description": "Is this Content View a Composite CV? @EXAMPLE false\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for the (composite) content view\n"
                },
                "filtered": {
                    "type": "boolean"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/KatelloContentViewFilter:KatelloContentViewFilter"
                    },
                    "description": "Content view filters and their rules.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Label for the (composite) content view. Cannot be changed after creation. By default set to the name, with underscores\nas spaces replacement. @EXAMPLE\n"
                },
                "latestVersionId": {
                    "type": "integer",
                    "description": "Holds the ID of the latest published version of a Content View to be used as reference in CCVs\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the (composite) content view. @EXAMPLE \"My new CV\"\n"
                },
                "organizationId": {
                    "type": "integer"
                },
                "repositoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of repository IDs. @EXAMPLE [1, 4, 5]\n"
                },
                "solveDependencies": {
                    "type": "boolean",
                    "description": "Relevant for Content Views: 'This will solve RPM and module stream dependencies on every publish of this content view.\nDependency solving significantly increases publish time (publishes can take over three times as long) and filters will\nbe ignored when adding packages to solve dependencies. Also, certain scenarios involving errata may still cause\ndependency errors.'\n"
                }
            },
            "required": [
                "__meta_",
                "filtered",
                "label",
                "latestVersionId",
                "name",
                "organizationId",
                "repositoryIds"
            ],
            "inputProperties": {
                "autoPublish": {
                    "type": "boolean",
                    "description": "Relevant for Composite Content Views: 'Automatically publish a new version of the composite content view whenever one of\nits content views is published. Autopublish will only happen for component views that use the 'Always use latest\nversion' option.'\n"
                },
                "componentIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Relevant for CCVs: list of CV version IDs. @EXAMPLE [1, 4]\n"
                },
                "composite": {
                    "type": "boolean",
                    "description": "Is this Content View a Composite CV? @EXAMPLE false\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for the (composite) content view\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/KatelloContentViewFilter:KatelloContentViewFilter"
                    },
                    "description": "Content view filters and their rules.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Label for the (composite) content view. Cannot be changed after creation. By default set to the name, with underscores\nas spaces replacement. @EXAMPLE\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the (composite) content view. @EXAMPLE \"My new CV\"\n"
                },
                "organizationId": {
                    "type": "integer"
                },
                "repositoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of repository IDs. @EXAMPLE [1, 4, 5]\n"
                },
                "solveDependencies": {
                    "type": "boolean",
                    "description": "Relevant for Content Views: 'This will solve RPM and module stream dependencies on every publish of this content view.\nDependency solving significantly increases publish time (publishes can take over three times as long) and filters will\nbe ignored when adding packages to solve dependencies. Also, certain scenarios involving errata may still cause\ndependency errors.'\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KatelloContentView resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY (Composite) Content Views create an abstract view on a collection of repositories and allow versioning of these\nviews. Additional fine tuning can be done with package filters.\n"
                    },
                    "autoPublish": {
                        "type": "boolean",
                        "description": "Relevant for Composite Content Views: 'Automatically publish a new version of the composite content view whenever one of\nits content views is published. Autopublish will only happen for component views that use the 'Always use latest\nversion' option.'\n"
                    },
                    "componentIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Relevant for CCVs: list of CV version IDs. @EXAMPLE [1, 4]\n"
                    },
                    "composite": {
                        "type": "boolean",
                        "description": "Is this Content View a Composite CV? @EXAMPLE false\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for the (composite) content view\n"
                    },
                    "filtered": {
                        "type": "boolean"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/foreman:index/KatelloContentViewFilter:KatelloContentViewFilter"
                        },
                        "description": "Content view filters and their rules.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label for the (composite) content view. Cannot be changed after creation. By default set to the name, with underscores\nas spaces replacement. @EXAMPLE\n",
                        "willReplaceOnChanges": true
                    },
                    "latestVersionId": {
                        "type": "integer",
                        "description": "Holds the ID of the latest published version of a Content View to be used as reference in CCVs\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the (composite) content view. @EXAMPLE \"My new CV\"\n"
                    },
                    "organizationId": {
                        "type": "integer"
                    },
                    "repositoryIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of repository IDs. @EXAMPLE [1, 4, 5]\n"
                    },
                    "solveDependencies": {
                        "type": "boolean",
                        "description": "Relevant for Content Views: 'This will solve RPM and module stream dependencies on every publish of this content view.\nDependency solving significantly increases publish time (publishes can take over three times as long) and filters will\nbe ignored when adding packages to solve dependencies. Also, certain scenarios involving errata may still cause\ndependency errors.'\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/katelloLifecycleEnvironment:KatelloLifecycleEnvironment": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for the lifecycle environment\n"
                },
                "label": {
                    "type": "string",
                    "description": "Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as\nspaces replacement. @EXAMPLE\n"
                },
                "library": {
                    "type": "boolean",
                    "description": "Specifies if this environment is the special 'Library' root environment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the lifecycle environment. @EXAMPLE \"My new env\"\n"
                },
                "organizationId": {
                    "type": "integer",
                    "description": "@EXAMPLE 1\n"
                },
                "priorId": {
                    "type": "integer",
                    "description": "ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE\ndata.foreman_katello_lifecycle_environment.library.id\n"
                },
                "successorId": {
                    "type": "integer"
                }
            },
            "required": [
                "__meta_",
                "label",
                "library",
                "name",
                "organizationId",
                "priorId",
                "successorId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for the lifecycle environment\n"
                },
                "label": {
                    "type": "string",
                    "description": "Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as\nspaces replacement. @EXAMPLE\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the lifecycle environment. @EXAMPLE \"My new env\"\n"
                },
                "organizationId": {
                    "type": "integer",
                    "description": "@EXAMPLE 1\n"
                },
                "priorId": {
                    "type": "integer",
                    "description": "ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE\ndata.foreman_katello_lifecycle_environment.library.id\n"
                }
            },
            "requiredInputs": [
                "organizationId",
                "priorId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KatelloLifecycleEnvironment resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Lifecycle environments group hosts into logical stages, example dev/test/prod.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for the lifecycle environment\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label for the lifecycle environment. Cannot be changed after creation. By default set to the name, with underscores as\nspaces replacement. @EXAMPLE\n",
                        "willReplaceOnChanges": true
                    },
                    "library": {
                        "type": "boolean",
                        "description": "Specifies if this environment is the special 'Library' root environment.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the lifecycle environment. @EXAMPLE \"My new env\"\n"
                    },
                    "organizationId": {
                        "type": "integer",
                        "description": "@EXAMPLE 1\n"
                    },
                    "priorId": {
                        "type": "integer",
                        "description": "ID of the prior lifecycle environment. Use '1' to refer to the built-in 'Library' root environment. @EXAMPLE\ndata.foreman_katello_lifecycle_environment.library.id\n"
                    },
                    "successorId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/katelloProduct:KatelloProduct": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Poducts are mostly operating systems to which repositories are assigned.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Product description.@EXAMPLE \"A product description\"\n"
                },
                "gpgKeyId": {
                    "type": "integer",
                    "description": "Identifier of the GPG key.@EXAMPLE\n"
                },
                "label": {
                    "type": "string",
                    "description": "Label for the product. Cannot be changed after creation. By default set to the name, with underscores as spaces\nreplacement. @EXAMPLE\n"
                },
                "name": {
                    "type": "string",
                    "description": "Product name.@EXAMPLE \"Debian 10\"\n"
                },
                "sslCaCertId": {
                    "type": "integer",
                    "description": "Idenifier of the SSL CA Cert.@EXAMPLE\n"
                },
                "sslClientCertId": {
                    "type": "integer",
                    "description": "Identifier of the SSL Client Cert.@EXAMPLE\n"
                },
                "sslClientKeyId": {
                    "type": "integer",
                    "description": "Identifier of the SSL Client Key.@EXAMPLE\n"
                },
                "syncPlanId": {
                    "type": "integer",
                    "description": "Plan numeric identifier.@EXAMPLE\n"
                }
            },
            "required": [
                "__meta_",
                "label",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Product description.@EXAMPLE \"A product description\"\n"
                },
                "gpgKeyId": {
                    "type": "integer",
                    "description": "Identifier of the GPG key.@EXAMPLE\n"
                },
                "label": {
                    "type": "string",
                    "description": "Label for the product. Cannot be changed after creation. By default set to the name, with underscores as spaces\nreplacement. @EXAMPLE\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Product name.@EXAMPLE \"Debian 10\"\n"
                },
                "sslCaCertId": {
                    "type": "integer",
                    "description": "Idenifier of the SSL CA Cert.@EXAMPLE\n"
                },
                "sslClientCertId": {
                    "type": "integer",
                    "description": "Identifier of the SSL Client Cert.@EXAMPLE\n"
                },
                "sslClientKeyId": {
                    "type": "integer",
                    "description": "Identifier of the SSL Client Key.@EXAMPLE\n"
                },
                "syncPlanId": {
                    "type": "integer",
                    "description": "Plan numeric identifier.@EXAMPLE\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KatelloProduct resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Poducts are mostly operating systems to which repositories are assigned.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Product description.@EXAMPLE \"A product description\"\n"
                    },
                    "gpgKeyId": {
                        "type": "integer",
                        "description": "Identifier of the GPG key.@EXAMPLE\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label for the product. Cannot be changed after creation. By default set to the name, with underscores as spaces\nreplacement. @EXAMPLE\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Product name.@EXAMPLE \"Debian 10\"\n"
                    },
                    "sslCaCertId": {
                        "type": "integer",
                        "description": "Idenifier of the SSL CA Cert.@EXAMPLE\n"
                    },
                    "sslClientCertId": {
                        "type": "integer",
                        "description": "Identifier of the SSL Client Cert.@EXAMPLE\n"
                    },
                    "sslClientKeyId": {
                        "type": "integer",
                        "description": "Identifier of the SSL Client Key.@EXAMPLE\n"
                    },
                    "syncPlanId": {
                        "type": "integer",
                        "description": "Plan numeric identifier.@EXAMPLE\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/katelloRepository:KatelloRepository": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Repository\n"
                },
                "ansibleCollectionRequirements": {
                    "type": "string",
                    "description": "Contents of requirement yaml file to sync from URL.@EXAMPLE\n"
                },
                "checksumType": {
                    "type": "string",
                    "description": "Checksum of the repository, currently 'sha1' \u0026 'sha256' are supported@EXAMPLE \"sha256\"\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "Content type of the repository. Valid values include:`\"deb\"`, \"docker\"`, \"file\"`, \"puppet\"`, \"yum\"`,\n`\"ansible_collection\"`.@EXAMPLE \"yum\"\n"
                },
                "debArchitectures": {
                    "type": "string",
                    "description": "Comma separated list of architectures to be synched from deb-archive.@EXAMPLE\n"
                },
                "debComponents": {
                    "type": "string",
                    "description": "Comma separated list of repo components to be synched from deb-archive.@EXAMPLE\n"
                },
                "debReleases": {
                    "type": "string",
                    "description": "Comma separated list of releases to be synched from deb-archive.@EXAMPLE\n"
                },
                "description": {
                    "type": "string",
                    "description": "Repository description.@EXAMPLE \"A repository description\"\n"
                },
                "dockerTagsWhitelist": {
                    "type": "string",
                    "description": "Comma separated list of tags to sync for Container Image repository.@EXAMPLE\n"
                },
                "dockerUpstreamName": {
                    "type": "string",
                    "description": "Name of the upstream docker repository@EXAMPLE\n"
                },
                "downloadConcurrency": {
                    "type": "integer",
                    "description": "Used to determine download concurrency of the repository in pulp3. Use value less than 20. Defaults to 10. Warning: the\nvalue is not returned from the API and is therefore handled by a DiffSuppressFunc.\n"
                },
                "downloadPolicy": {
                    "type": "string",
                    "description": "Product the repository belongs to. Valid values include:`\"immediate\"`, \"on_demand\"`, \"background\"`.@EXAMPLE \"immediate\"\n"
                },
                "gpgKeyId": {
                    "type": "integer",
                    "description": "Identifier of the GPG key.@EXAMPLE\n"
                },
                "httpProxyId": {
                    "type": "integer",
                    "description": "ID of a HTTP Proxy.@EXAMPLE\n"
                },
                "httpProxyPolicy": {
                    "type": "string",
                    "description": "Policies for HTTP proxy for content sync. Valid values include:`\"global_default_http_proxy\"`, \"none\"`,\n\"use_selected_http_proxy\"`.@EXAMPLE \"global_default_http_proxy\"\n"
                },
                "ignorableContent": {
                    "type": "string",
                    "description": "List of content units to ignore while syncing a yum repository. Must be subset of\nrpm,drpm,srpm,distribution,erratum@EXAMPLE\n"
                },
                "ignoreGlobalProxy": {
                    "type": "boolean",
                    "description": "If true, will ignore the globally configured proxy when syncing.@EXAMPLE true\n"
                },
                "label": {
                    "type": "string",
                    "description": "Label of the repository. Cannot be changed after creation. Is auto generated from name if not specified.\n"
                },
                "mirrorOnSync": {
                    "type": "boolean",
                    "description": "'True' if this repository when synced has to be mirrored from the source and stale rpms removed.\n",
                    "deprecationMessage": "Deprecated and removed in Katello 4.9 in favor of mirroring_policy"
                },
                "mirroringPolicy": {
                    "type": "string",
                    "description": "Mirroring policy for this repo. Values: \"mirror_content_only\" or \"additive\". @EXAMPLE \"mirror_content_only\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Repository name.@EXAMPLE \"My Repository\"\n"
                },
                "productId": {
                    "type": "integer",
                    "description": "Product the repository belongs to.@EXAMPLE\n"
                },
                "unprotected": {
                    "type": "boolean",
                    "description": "true if this repository can be published via HTTP.@EXAMPLE true\n"
                },
                "upstreamPassword": {
                    "type": "string",
                    "description": "Password of the upstream repository user used for authentication.@EXAMPLE \"S3cr3t123!\"\n"
                },
                "upstreamUsername": {
                    "type": "string",
                    "description": "Username of the upstream repository user used for authentication.@EXAMPLE \"admin\"\n"
                },
                "url": {
                    "type": "string",
                    "description": "Repository source URL or Docker registry URL@EXAMPLE \"http://mirror.centos.org/centos/7/os/x86_64/\"\n"
                },
                "verifySslOnSync": {
                    "type": "boolean",
                    "description": "If true, Katello will verify the upstream url's SSL certifcates are signed by a trusted CA.@EXAMPLE true\n"
                }
            },
            "required": [
                "__meta_",
                "contentType",
                "label",
                "name",
                "productId"
            ],
            "inputProperties": {
                "ansibleCollectionRequirements": {
                    "type": "string",
                    "description": "Contents of requirement yaml file to sync from URL.@EXAMPLE\n"
                },
                "checksumType": {
                    "type": "string",
                    "description": "Checksum of the repository, currently 'sha1' \u0026 'sha256' are supported@EXAMPLE \"sha256\"\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "Content type of the repository. Valid values include:`\"deb\"`, \"docker\"`, \"file\"`, \"puppet\"`, \"yum\"`,\n`\"ansible_collection\"`.@EXAMPLE \"yum\"\n"
                },
                "debArchitectures": {
                    "type": "string",
                    "description": "Comma separated list of architectures to be synched from deb-archive.@EXAMPLE\n"
                },
                "debComponents": {
                    "type": "string",
                    "description": "Comma separated list of repo components to be synched from deb-archive.@EXAMPLE\n"
                },
                "debReleases": {
                    "type": "string",
                    "description": "Comma separated list of releases to be synched from deb-archive.@EXAMPLE\n"
                },
                "description": {
                    "type": "string",
                    "description": "Repository description.@EXAMPLE \"A repository description\"\n"
                },
                "dockerTagsWhitelist": {
                    "type": "string",
                    "description": "Comma separated list of tags to sync for Container Image repository.@EXAMPLE\n"
                },
                "dockerUpstreamName": {
                    "type": "string",
                    "description": "Name of the upstream docker repository@EXAMPLE\n"
                },
                "downloadConcurrency": {
                    "type": "integer",
                    "description": "Used to determine download concurrency of the repository in pulp3. Use value less than 20. Defaults to 10. Warning: the\nvalue is not returned from the API and is therefore handled by a DiffSuppressFunc.\n"
                },
                "downloadPolicy": {
                    "type": "string",
                    "description": "Product the repository belongs to. Valid values include:`\"immediate\"`, \"on_demand\"`, \"background\"`.@EXAMPLE \"immediate\"\n"
                },
                "gpgKeyId": {
                    "type": "integer",
                    "description": "Identifier of the GPG key.@EXAMPLE\n"
                },
                "httpProxyId": {
                    "type": "integer",
                    "description": "ID of a HTTP Proxy.@EXAMPLE\n"
                },
                "httpProxyPolicy": {
                    "type": "string",
                    "description": "Policies for HTTP proxy for content sync. Valid values include:`\"global_default_http_proxy\"`, \"none\"`,\n\"use_selected_http_proxy\"`.@EXAMPLE \"global_default_http_proxy\"\n"
                },
                "ignorableContent": {
                    "type": "string",
                    "description": "List of content units to ignore while syncing a yum repository. Must be subset of\nrpm,drpm,srpm,distribution,erratum@EXAMPLE\n"
                },
                "ignoreGlobalProxy": {
                    "type": "boolean",
                    "description": "If true, will ignore the globally configured proxy when syncing.@EXAMPLE true\n"
                },
                "label": {
                    "type": "string",
                    "description": "Label of the repository. Cannot be changed after creation. Is auto generated from name if not specified.\n"
                },
                "mirrorOnSync": {
                    "type": "boolean",
                    "description": "'True' if this repository when synced has to be mirrored from the source and stale rpms removed.\n",
                    "deprecationMessage": "Deprecated and removed in Katello 4.9 in favor of mirroring_policy"
                },
                "mirroringPolicy": {
                    "type": "string",
                    "description": "Mirroring policy for this repo. Values: \"mirror_content_only\" or \"additive\". @EXAMPLE \"mirror_content_only\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Repository name.@EXAMPLE \"My Repository\"\n"
                },
                "productId": {
                    "type": "integer",
                    "description": "Product the repository belongs to.@EXAMPLE\n"
                },
                "unprotected": {
                    "type": "boolean",
                    "description": "true if this repository can be published via HTTP.@EXAMPLE true\n"
                },
                "upstreamPassword": {
                    "type": "string",
                    "description": "Password of the upstream repository user used for authentication.@EXAMPLE \"S3cr3t123!\"\n"
                },
                "upstreamUsername": {
                    "type": "string",
                    "description": "Username of the upstream repository user used for authentication.@EXAMPLE \"admin\"\n"
                },
                "url": {
                    "type": "string",
                    "description": "Repository source URL or Docker registry URL@EXAMPLE \"http://mirror.centos.org/centos/7/os/x86_64/\"\n"
                },
                "verifySslOnSync": {
                    "type": "boolean",
                    "description": "If true, Katello will verify the upstream url's SSL certifcates are signed by a trusted CA.@EXAMPLE true\n"
                }
            },
            "requiredInputs": [
                "contentType",
                "productId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KatelloRepository resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Repository\n"
                    },
                    "ansibleCollectionRequirements": {
                        "type": "string",
                        "description": "Contents of requirement yaml file to sync from URL.@EXAMPLE\n"
                    },
                    "checksumType": {
                        "type": "string",
                        "description": "Checksum of the repository, currently 'sha1' \u0026 'sha256' are supported@EXAMPLE \"sha256\"\n"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "Content type of the repository. Valid values include:`\"deb\"`, \"docker\"`, \"file\"`, \"puppet\"`, \"yum\"`,\n`\"ansible_collection\"`.@EXAMPLE \"yum\"\n"
                    },
                    "debArchitectures": {
                        "type": "string",
                        "description": "Comma separated list of architectures to be synched from deb-archive.@EXAMPLE\n"
                    },
                    "debComponents": {
                        "type": "string",
                        "description": "Comma separated list of repo components to be synched from deb-archive.@EXAMPLE\n"
                    },
                    "debReleases": {
                        "type": "string",
                        "description": "Comma separated list of releases to be synched from deb-archive.@EXAMPLE\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Repository description.@EXAMPLE \"A repository description\"\n"
                    },
                    "dockerTagsWhitelist": {
                        "type": "string",
                        "description": "Comma separated list of tags to sync for Container Image repository.@EXAMPLE\n"
                    },
                    "dockerUpstreamName": {
                        "type": "string",
                        "description": "Name of the upstream docker repository@EXAMPLE\n"
                    },
                    "downloadConcurrency": {
                        "type": "integer",
                        "description": "Used to determine download concurrency of the repository in pulp3. Use value less than 20. Defaults to 10. Warning: the\nvalue is not returned from the API and is therefore handled by a DiffSuppressFunc.\n"
                    },
                    "downloadPolicy": {
                        "type": "string",
                        "description": "Product the repository belongs to. Valid values include:`\"immediate\"`, \"on_demand\"`, \"background\"`.@EXAMPLE \"immediate\"\n"
                    },
                    "gpgKeyId": {
                        "type": "integer",
                        "description": "Identifier of the GPG key.@EXAMPLE\n"
                    },
                    "httpProxyId": {
                        "type": "integer",
                        "description": "ID of a HTTP Proxy.@EXAMPLE\n"
                    },
                    "httpProxyPolicy": {
                        "type": "string",
                        "description": "Policies for HTTP proxy for content sync. Valid values include:`\"global_default_http_proxy\"`, \"none\"`,\n\"use_selected_http_proxy\"`.@EXAMPLE \"global_default_http_proxy\"\n"
                    },
                    "ignorableContent": {
                        "type": "string",
                        "description": "List of content units to ignore while syncing a yum repository. Must be subset of\nrpm,drpm,srpm,distribution,erratum@EXAMPLE\n"
                    },
                    "ignoreGlobalProxy": {
                        "type": "boolean",
                        "description": "If true, will ignore the globally configured proxy when syncing.@EXAMPLE true\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label of the repository. Cannot be changed after creation. Is auto generated from name if not specified.\n"
                    },
                    "mirrorOnSync": {
                        "type": "boolean",
                        "description": "'True' if this repository when synced has to be mirrored from the source and stale rpms removed.\n",
                        "deprecationMessage": "Deprecated and removed in Katello 4.9 in favor of mirroring_policy"
                    },
                    "mirroringPolicy": {
                        "type": "string",
                        "description": "Mirroring policy for this repo. Values: \"mirror_content_only\" or \"additive\". @EXAMPLE \"mirror_content_only\"\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Repository name.@EXAMPLE \"My Repository\"\n"
                    },
                    "productId": {
                        "type": "integer",
                        "description": "Product the repository belongs to.@EXAMPLE\n"
                    },
                    "unprotected": {
                        "type": "boolean",
                        "description": "true if this repository can be published via HTTP.@EXAMPLE true\n"
                    },
                    "upstreamPassword": {
                        "type": "string",
                        "description": "Password of the upstream repository user used for authentication.@EXAMPLE \"S3cr3t123!\"\n"
                    },
                    "upstreamUsername": {
                        "type": "string",
                        "description": "Username of the upstream repository user used for authentication.@EXAMPLE \"admin\"\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Repository source URL or Docker registry URL@EXAMPLE \"http://mirror.centos.org/centos/7/os/x86_64/\"\n"
                    },
                    "verifySslOnSync": {
                        "type": "boolean",
                        "description": "If true, Katello will verify the upstream url's SSL certifcates are signed by a trusted CA.@EXAMPLE true\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/katelloSyncPlan:KatelloSyncPlan": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY A sync plan is used to schedule a synchronization of a product in katello\n"
                },
                "cronExpression": {
                    "type": "string",
                    "description": "Custom cron logic for sync plan.@EXAMPLE \"*/5 * * * *\"\n"
                },
                "description": {
                    "type": "string",
                    "description": "Sync plan description.@EXAMPLE \"A sync plan description\"\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables synchronization.@EXAMPLE true\n"
                },
                "interval": {
                    "type": "string",
                    "description": "How often synchronization should run. Valid values include: `\"hourly\"`, `\"daily\"`, `\"weekly\"`,`\"custom cron\"`.@EXAMPLE\n\"daily\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Sync plan name.@EXAMPLE \"daily\"\n"
                },
                "syncDate": {
                    "type": "string",
                    "description": "Start datetime of synchronization. Use the specified format: YYYY-MM-DD HH:MM:SS +0000, where '+0000' is the timezone\ndifference. A value of '+0000' means UTC. @EXAMPLE \"1970-01-01 00:00:00 +0000\"\n"
                }
            },
            "required": [
                "__meta_",
                "enabled",
                "interval",
                "name",
                "syncDate"
            ],
            "inputProperties": {
                "cronExpression": {
                    "type": "string",
                    "description": "Custom cron logic for sync plan.@EXAMPLE \"*/5 * * * *\"\n"
                },
                "description": {
                    "type": "string",
                    "description": "Sync plan description.@EXAMPLE \"A sync plan description\"\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables synchronization.@EXAMPLE true\n"
                },
                "interval": {
                    "type": "string",
                    "description": "How often synchronization should run. Valid values include: `\"hourly\"`, `\"daily\"`, `\"weekly\"`,`\"custom cron\"`.@EXAMPLE\n\"daily\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Sync plan name.@EXAMPLE \"daily\"\n"
                },
                "syncDate": {
                    "type": "string",
                    "description": "Start datetime of synchronization. Use the specified format: YYYY-MM-DD HH:MM:SS +0000, where '+0000' is the timezone\ndifference. A value of '+0000' means UTC. @EXAMPLE \"1970-01-01 00:00:00 +0000\"\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "interval",
                "syncDate"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KatelloSyncPlan resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY A sync plan is used to schedule a synchronization of a product in katello\n"
                    },
                    "cronExpression": {
                        "type": "string",
                        "description": "Custom cron logic for sync plan.@EXAMPLE \"*/5 * * * *\"\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Sync plan description.@EXAMPLE \"A sync plan description\"\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enables or disables synchronization.@EXAMPLE true\n"
                    },
                    "interval": {
                        "type": "string",
                        "description": "How often synchronization should run. Valid values include: `\"hourly\"`, `\"daily\"`, `\"weekly\"`,`\"custom cron\"`.@EXAMPLE\n\"daily\"\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Sync plan name.@EXAMPLE \"daily\"\n"
                    },
                    "syncDate": {
                        "type": "string",
                        "description": "Start datetime of synchronization. Use the specified format: YYYY-MM-DD HH:MM:SS +0000, where '+0000' is the timezone\ndifference. A value of '+0000' means UTC. @EXAMPLE \"1970-01-01 00:00:00 +0000\"\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/media:Media": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Remote installation media.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the media. @EXAMPLE \"CentOS mirror\"\n"
                },
                "operatingsystemIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the operating systems associated with this media.\n"
                },
                "osFamily": {
                    "type": "string",
                    "description": "Operating system family. Values include: `\"AIX\"`, `\"Altlinux\"`, `\"Archlinux\"`, `\"Coreos\"`, `\"Debian\"`, `\"Freebsd\"`,\n`\"Gentoo\"`, `\"Junos\"`, `\"NXOS\"`, `\"Redhat\"`, `\"Solaris\"`, `\"Suse\"`, `\"Windows\"`.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture). For example:\nhttp://mirror.centos.org/centos/$version/os/$arch Where $arch will be substituted for the host's actual OS architecture\nand $version, $major, $minor will be substituted for the version of the operating system. Solaris and Debian media may\nalso use $release. @EXAMPLE \"http://mirror.averse.net/centos/$major.$minor/os/$arch\"\n"
                }
            },
            "required": [
                "__meta_",
                "name",
                "operatingsystemIds",
                "path"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the media. @EXAMPLE \"CentOS mirror\"\n"
                },
                "operatingsystemIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the operating systems associated with this media.\n"
                },
                "osFamily": {
                    "type": "string",
                    "description": "Operating system family. Values include: `\"AIX\"`, `\"Altlinux\"`, `\"Archlinux\"`, `\"Coreos\"`, `\"Debian\"`, `\"Freebsd\"`,\n`\"Gentoo\"`, `\"Junos\"`, `\"NXOS\"`, `\"Redhat\"`, `\"Solaris\"`, `\"Suse\"`, `\"Windows\"`.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture). For example:\nhttp://mirror.centos.org/centos/$version/os/$arch Where $arch will be substituted for the host's actual OS architecture\nand $version, $major, $minor will be substituted for the version of the operating system. Solaris and Debian media may\nalso use $release. @EXAMPLE \"http://mirror.averse.net/centos/$major.$minor/os/$arch\"\n"
                }
            },
            "requiredInputs": [
                "path"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Media resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Remote installation media.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the media. @EXAMPLE \"CentOS mirror\"\n"
                    },
                    "operatingsystemIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the operating systems associated with this media.\n"
                    },
                    "osFamily": {
                        "type": "string",
                        "description": "Operating system family. Values include: `\"AIX\"`, `\"Altlinux\"`, `\"Archlinux\"`, `\"Coreos\"`, `\"Debian\"`, `\"Freebsd\"`,\n`\"Gentoo\"`, `\"Junos\"`, `\"NXOS\"`, `\"Redhat\"`, `\"Solaris\"`, `\"Suse\"`, `\"Windows\"`.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture). For example:\nhttp://mirror.centos.org/centos/$version/os/$arch Where $arch will be substituted for the host's actual OS architecture\nand $version, $major, $minor will be substituted for the version of the operating system. Solaris and Debian media may\nalso use $release. @EXAMPLE \"http://mirror.averse.net/centos/$major.$minor/os/$arch\"\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/model:Model": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Vendor-specific hardware model.\n"
                },
                "hardwareModel": {
                    "type": "string",
                    "description": "Name of the specific hardware model.\n"
                },
                "info": {
                    "type": "string",
                    "description": "Additional information about this hardware model.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the hardware model. @EXAMPLE \"PowerEdge FC630\"\n"
                },
                "vendorClass": {
                    "type": "string",
                    "description": "Name or class of the hardware vendor.\n"
                }
            },
            "required": [
                "__meta_",
                "name"
            ],
            "inputProperties": {
                "hardwareModel": {
                    "type": "string",
                    "description": "Name of the specific hardware model.\n"
                },
                "info": {
                    "type": "string",
                    "description": "Additional information about this hardware model.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the hardware model. @EXAMPLE \"PowerEdge FC630\"\n"
                },
                "vendorClass": {
                    "type": "string",
                    "description": "Name or class of the hardware vendor.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Model resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Vendor-specific hardware model.\n"
                    },
                    "hardwareModel": {
                        "type": "string",
                        "description": "Name of the specific hardware model.\n"
                    },
                    "info": {
                        "type": "string",
                        "description": "Additional information about this hardware model.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the hardware model. @EXAMPLE \"PowerEdge FC630\"\n"
                    },
                    "vendorClass": {
                        "type": "string",
                        "description": "Name or class of the hardware vendor.\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/operatingsystem:Operatingsystem": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of an operating system.\n"
                },
                "architectures": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifiers of attached architectures\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional operating system information.\n"
                },
                "family": {
                    "type": "string",
                    "description": "Operating system family. Values include: `\"AIX\"`, `\"Altlinux\"`, `\"Archlinux\"`, `\"Coreos\"`, `\"Debian\"`, `\"Freebsd\"`,\n`\"Gentoo\"`, `\"Junos\"`, `\"NXOS\"`, `\"Redhat\"`, `\"Solaris\"`, `\"Suse\"`, `\"Windows\"`.\n"
                },
                "major": {
                    "type": "string",
                    "description": "Major release version. @EXAMPLE \"7\"\n"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifiers of attached media\n"
                },
                "minor": {
                    "type": "string",
                    "description": "Minor release version. @EXAMPLE \"4\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Operating system name. @EXAMPLE \"CentOS\"\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of parameters that will be saved as operating system parameters in the os config.\n"
                },
                "partitiontables": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifiers of attached partition tables\n"
                },
                "passwordHash": {
                    "type": "string",
                    "description": "Root password hash function to use. Valid values include: `\"MD5\"`, `\"SHA256\"`, `\"SHA512\"`, `\"Base64\"`.\n"
                },
                "provisioningTemplates": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifiers of attached provisioning templates\n"
                },
                "releaseName": {
                    "type": "string",
                    "description": "Code name or release name for the specific operating system version.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The operating system's title is a concatentation of the OS name, major, and minor versions to get a full operating\nsystem release.\n"
                }
            },
            "required": [
                "__meta_",
                "major",
                "name",
                "partitiontables",
                "provisioningTemplates",
                "title"
            ],
            "inputProperties": {
                "architectures": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifiers of attached architectures\n"
                },
                "description": {
                    "type": "string",
                    "description": "Additional operating system information.\n"
                },
                "family": {
                    "type": "string",
                    "description": "Operating system family. Values include: `\"AIX\"`, `\"Altlinux\"`, `\"Archlinux\"`, `\"Coreos\"`, `\"Debian\"`, `\"Freebsd\"`,\n`\"Gentoo\"`, `\"Junos\"`, `\"NXOS\"`, `\"Redhat\"`, `\"Solaris\"`, `\"Suse\"`, `\"Windows\"`.\n"
                },
                "major": {
                    "type": "string",
                    "description": "Major release version. @EXAMPLE \"7\"\n"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifiers of attached media\n"
                },
                "minor": {
                    "type": "string",
                    "description": "Minor release version. @EXAMPLE \"4\"\n"
                },
                "name": {
                    "type": "string",
                    "description": "Operating system name. @EXAMPLE \"CentOS\"\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of parameters that will be saved as operating system parameters in the os config.\n"
                },
                "partitiontables": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifiers of attached partition tables\n"
                },
                "passwordHash": {
                    "type": "string",
                    "description": "Root password hash function to use. Valid values include: `\"MD5\"`, `\"SHA256\"`, `\"SHA512\"`, `\"Base64\"`.\n"
                },
                "provisioningTemplates": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifiers of attached provisioning templates\n"
                },
                "releaseName": {
                    "type": "string",
                    "description": "Code name or release name for the specific operating system version.\n"
                }
            },
            "requiredInputs": [
                "major"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Operatingsystem resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of an operating system.\n"
                    },
                    "architectures": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Identifiers of attached architectures\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Additional operating system information.\n"
                    },
                    "family": {
                        "type": "string",
                        "description": "Operating system family. Values include: `\"AIX\"`, `\"Altlinux\"`, `\"Archlinux\"`, `\"Coreos\"`, `\"Debian\"`, `\"Freebsd\"`,\n`\"Gentoo\"`, `\"Junos\"`, `\"NXOS\"`, `\"Redhat\"`, `\"Solaris\"`, `\"Suse\"`, `\"Windows\"`.\n"
                    },
                    "major": {
                        "type": "string",
                        "description": "Major release version. @EXAMPLE \"7\"\n"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Identifiers of attached media\n"
                    },
                    "minor": {
                        "type": "string",
                        "description": "Minor release version. @EXAMPLE \"4\"\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Operating system name. @EXAMPLE \"CentOS\"\n"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of parameters that will be saved as operating system parameters in the os config.\n"
                    },
                    "partitiontables": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Identifiers of attached partition tables\n"
                    },
                    "passwordHash": {
                        "type": "string",
                        "description": "Root password hash function to use. Valid values include: `\"MD5\"`, `\"SHA256\"`, `\"SHA512\"`, `\"Base64\"`.\n"
                    },
                    "provisioningTemplates": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Identifiers of attached provisioning templates\n"
                    },
                    "releaseName": {
                        "type": "string",
                        "description": "Code name or release name for the specific operating system version.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The operating system's title is a concatentation of the OS name, major, and minor versions to get a full operating\nsystem release.\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/overrideValue:OverrideValue": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Smart class parameter override value.\n"
                },
                "match": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map containing the match criteria. Must contain two keys: `type` and `value`.Type can be one of `fqdn`, `hostgroup`,\n`domain` or `os`@EXAMPLE { type = \"hostgroup\" value = \"example_group\" }\n"
                },
                "omit": {
                    "type": "boolean",
                    "description": "When set to `true` Foreman will not send this parameter in classification output. Default value is `false`.@EXAMPLE\nfalse\n"
                },
                "smartClassParameterId": {
                    "type": "integer",
                    "description": "ID of the smart class parameter to override.@EXAMPLE 1\n"
                },
                "value": {
                    "type": "string",
                    "description": "Smart parameter override value. Hashes and arrays must be JSON encoded.@EXAMPLE jsonencode({ key = \"value\" })\n"
                }
            },
            "required": [
                "__meta_",
                "match",
                "smartClassParameterId",
                "value"
            ],
            "inputProperties": {
                "match": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map containing the match criteria. Must contain two keys: `type` and `value`.Type can be one of `fqdn`, `hostgroup`,\n`domain` or `os`@EXAMPLE { type = \"hostgroup\" value = \"example_group\" }\n"
                },
                "omit": {
                    "type": "boolean",
                    "description": "When set to `true` Foreman will not send this parameter in classification output. Default value is `false`.@EXAMPLE\nfalse\n"
                },
                "smartClassParameterId": {
                    "type": "integer",
                    "description": "ID of the smart class parameter to override.@EXAMPLE 1\n"
                },
                "value": {
                    "type": "string",
                    "description": "Smart parameter override value. Hashes and arrays must be JSON encoded.@EXAMPLE jsonencode({ key = \"value\" })\n"
                }
            },
            "requiredInputs": [
                "match",
                "smartClassParameterId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OverrideValue resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Smart class parameter override value.\n"
                    },
                    "match": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map containing the match criteria. Must contain two keys: `type` and `value`.Type can be one of `fqdn`, `hostgroup`,\n`domain` or `os`@EXAMPLE { type = \"hostgroup\" value = \"example_group\" }\n"
                    },
                    "omit": {
                        "type": "boolean",
                        "description": "When set to `true` Foreman will not send this parameter in classification output. Default value is `false`.@EXAMPLE\nfalse\n"
                    },
                    "smartClassParameterId": {
                        "type": "integer",
                        "description": "ID of the smart class parameter to override.@EXAMPLE 1\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Smart parameter override value. Hashes and arrays must be JSON encoded.@EXAMPLE jsonencode({ key = \"value\" })\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/parameter:Parameter": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of parameter. Parameters serve as an identification string that defines autonomy,\nauthority, or control for a portion of a network.\n"
                },
                "domainId": {
                    "type": "integer",
                    "description": "ID of the domain to assign this parameter to\n"
                },
                "hostId": {
                    "type": "integer",
                    "description": "ID of the host to assign this parameter to\n"
                },
                "hostgroupId": {
                    "type": "integer",
                    "description": "ID of the host group to assign this parameter to\n"
                },
                "name": {
                    "type": "string"
                },
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system to assign this parameter to\n"
                },
                "subnetId": {
                    "type": "integer",
                    "description": "ID of the subnet to assign this parameter to\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "__meta_",
                "name",
                "value"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "integer",
                    "description": "ID of the domain to assign this parameter to\n",
                    "willReplaceOnChanges": true
                },
                "hostId": {
                    "type": "integer",
                    "description": "ID of the host to assign this parameter to\n",
                    "willReplaceOnChanges": true
                },
                "hostgroupId": {
                    "type": "integer",
                    "description": "ID of the host group to assign this parameter to\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "operatingsystemId": {
                    "type": "integer",
                    "description": "ID of the operating system to assign this parameter to\n",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "integer",
                    "description": "ID of the subnet to assign this parameter to\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Parameter resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of parameter. Parameters serve as an identification string that defines autonomy,\nauthority, or control for a portion of a network.\n"
                    },
                    "domainId": {
                        "type": "integer",
                        "description": "ID of the domain to assign this parameter to\n",
                        "willReplaceOnChanges": true
                    },
                    "hostId": {
                        "type": "integer",
                        "description": "ID of the host to assign this parameter to\n",
                        "willReplaceOnChanges": true
                    },
                    "hostgroupId": {
                        "type": "integer",
                        "description": "ID of the host group to assign this parameter to\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingsystemId": {
                        "type": "integer",
                        "description": "ID of the operating system to assign this parameter to\n",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "integer",
                        "description": "ID of the subnet to assign this parameter to\n",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/partitiontable:Partitiontable": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY The disk partition layout of the host.\n"
                },
                "auditComment": {
                    "type": "string",
                    "description": "Any audit comments to associate with the partition table. The audit comment field is saved with the template auditing to\ndocument the template changes.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the partition table\n"
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the hosts associated with this partition table.\n"
                },
                "hostgroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the hostgroups associated with this partition table.\n"
                },
                "layout": {
                    "type": "string",
                    "description": "The script that defines the partition table layout. @EXAMPLE \"void\"\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Whether or not this partition table is locked for editing.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the partition table. @EXAMPLE \"AutoYaST LVM\"\n"
                },
                "operatingsystemIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the operating system associated with this partition table.\n"
                },
                "osFamily": {
                    "type": "string",
                    "description": "Operating system family. Values include: `\"AIX\"`, `\"Altlinux\"`, `\"Archlinux\"`, `\"Coreos\"`, `\"Debian\"`, `\"Freebsd\"`,\n`\"Gentoo\"`, `\"Junos\"`, `\"NXOS\"`, `\"Redhat\"`, `\"Solaris\"`, `\"Suse\"`, `\"Windows\"`.\n"
                },
                "snippet": {
                    "type": "boolean",
                    "description": "Whether or not this partition table is a snippet to be embedded in other partition tables.\n"
                }
            },
            "required": [
                "__meta_",
                "hostIds",
                "hostgroupIds",
                "layout",
                "name",
                "operatingsystemIds"
            ],
            "inputProperties": {
                "auditComment": {
                    "type": "string",
                    "description": "Any audit comments to associate with the partition table. The audit comment field is saved with the template auditing to\ndocument the template changes.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the partition table\n"
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the hosts associated with this partition table.\n"
                },
                "hostgroupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the hostgroups associated with this partition table.\n"
                },
                "layout": {
                    "type": "string",
                    "description": "The script that defines the partition table layout. @EXAMPLE \"void\"\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Whether or not this partition table is locked for editing.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the partition table. @EXAMPLE \"AutoYaST LVM\"\n"
                },
                "operatingsystemIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the operating system associated with this partition table.\n"
                },
                "osFamily": {
                    "type": "string",
                    "description": "Operating system family. Values include: `\"AIX\"`, `\"Altlinux\"`, `\"Archlinux\"`, `\"Coreos\"`, `\"Debian\"`, `\"Freebsd\"`,\n`\"Gentoo\"`, `\"Junos\"`, `\"NXOS\"`, `\"Redhat\"`, `\"Solaris\"`, `\"Suse\"`, `\"Windows\"`.\n"
                },
                "snippet": {
                    "type": "boolean",
                    "description": "Whether or not this partition table is a snippet to be embedded in other partition tables.\n"
                }
            },
            "requiredInputs": [
                "layout"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Partitiontable resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY The disk partition layout of the host.\n"
                    },
                    "auditComment": {
                        "type": "string",
                        "description": "Any audit comments to associate with the partition table. The audit comment field is saved with the template auditing to\ndocument the template changes.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the partition table\n"
                    },
                    "hostIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the hosts associated with this partition table.\n"
                    },
                    "hostgroupIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the hostgroups associated with this partition table.\n"
                    },
                    "layout": {
                        "type": "string",
                        "description": "The script that defines the partition table layout. @EXAMPLE \"void\"\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "Whether or not this partition table is locked for editing.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the partition table. @EXAMPLE \"AutoYaST LVM\"\n"
                    },
                    "operatingsystemIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the operating system associated with this partition table.\n"
                    },
                    "osFamily": {
                        "type": "string",
                        "description": "Operating system family. Values include: `\"AIX\"`, `\"Altlinux\"`, `\"Archlinux\"`, `\"Coreos\"`, `\"Debian\"`, `\"Freebsd\"`,\n`\"Gentoo\"`, `\"Junos\"`, `\"NXOS\"`, `\"Redhat\"`, `\"Solaris\"`, `\"Suse\"`, `\"Windows\"`.\n"
                    },
                    "snippet": {
                        "type": "boolean",
                        "description": "Whether or not this partition table is a snippet to be embedded in other partition tables.\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/provisioningtemplate:Provisioningtemplate": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Provisioning templates are scripts used to describe how to bootstrap and install the operating system on the\nhost.\n"
                },
                "auditComment": {
                    "type": "string",
                    "description": "Notes and comments for auditing purposes.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the provisioning template.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Whether or not the template is locked for editing.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the provisioning template. @EXAMPLE \"AutoYaST default\"\n"
                },
                "operatingsystemIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the operating systems associated with this provisioning template.\n"
                },
                "snippet": {
                    "type": "boolean",
                    "description": "Whether or not the provisioning template is a snippet be used by other templates.\n"
                },
                "template": {
                    "type": "string",
                    "description": "The markup and code of the provisioning template. @EXAMPLE \"void\"\n"
                },
                "templateCombinationsAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/ProvisioningtemplateTemplateCombinationsAttribute:ProvisioningtemplateTemplateCombinationsAttribute"
                    },
                    "description": "How templates are determined: When editing a template, you must assign a list of operating systems which this template\ncan be used with. Optionally, you can restrict a template to a list of host groups and/or environments. When a host\nrequests a template, Foreman will select the best match from the available templates of that type in the following\norder: 1. host group and environment 2. host group only 3. environment only 4. operating system default Template\ncombinations attributes contains an array of hostgroup IDs and environment ID combinations so they can be used in the\nprovisioning template selection described above.\n"
                },
                "templateKindId": {
                    "type": "integer",
                    "description": "ID of the template kind which categorizes the provisioning template. Optional for snippets, otherwise required.\n"
                }
            },
            "required": [
                "__meta_",
                "name",
                "operatingsystemIds",
                "template"
            ],
            "inputProperties": {
                "auditComment": {
                    "type": "string",
                    "description": "Notes and comments for auditing purposes.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the provisioning template.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Whether or not the template is locked for editing.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the provisioning template. @EXAMPLE \"AutoYaST default\"\n"
                },
                "operatingsystemIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "IDs of the operating systems associated with this provisioning template.\n"
                },
                "snippet": {
                    "type": "boolean",
                    "description": "Whether or not the provisioning template is a snippet be used by other templates.\n"
                },
                "template": {
                    "type": "string",
                    "description": "The markup and code of the provisioning template. @EXAMPLE \"void\"\n"
                },
                "templateCombinationsAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/foreman:index/ProvisioningtemplateTemplateCombinationsAttribute:ProvisioningtemplateTemplateCombinationsAttribute"
                    },
                    "description": "How templates are determined: When editing a template, you must assign a list of operating systems which this template\ncan be used with. Optionally, you can restrict a template to a list of host groups and/or environments. When a host\nrequests a template, Foreman will select the best match from the available templates of that type in the following\norder: 1. host group and environment 2. host group only 3. environment only 4. operating system default Template\ncombinations attributes contains an array of hostgroup IDs and environment ID combinations so they can be used in the\nprovisioning template selection described above.\n"
                },
                "templateKindId": {
                    "type": "integer",
                    "description": "ID of the template kind which categorizes the provisioning template. Optional for snippets, otherwise required.\n"
                }
            },
            "requiredInputs": [
                "template"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Provisioningtemplate resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Provisioning templates are scripts used to describe how to bootstrap and install the operating system on the\nhost.\n"
                    },
                    "auditComment": {
                        "type": "string",
                        "description": "Notes and comments for auditing purposes.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the provisioning template.\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "Whether or not the template is locked for editing.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the provisioning template. @EXAMPLE \"AutoYaST default\"\n"
                    },
                    "operatingsystemIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "IDs of the operating systems associated with this provisioning template.\n"
                    },
                    "snippet": {
                        "type": "boolean",
                        "description": "Whether or not the provisioning template is a snippet be used by other templates.\n"
                    },
                    "template": {
                        "type": "string",
                        "description": "The markup and code of the provisioning template. @EXAMPLE \"void\"\n"
                    },
                    "templateCombinationsAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/foreman:index/ProvisioningtemplateTemplateCombinationsAttribute:ProvisioningtemplateTemplateCombinationsAttribute"
                        },
                        "description": "How templates are determined: When editing a template, you must assign a list of operating systems which this template\ncan be used with. Optionally, you can restrict a template to a list of host groups and/or environments. When a host\nrequests a template, Foreman will select the best match from the available templates of that type in the following\norder: 1. host group and environment 2. host group only 3. environment only 4. operating system default Template\ncombinations attributes contains an array of hostgroup IDs and environment ID combinations so they can be used in the\nprovisioning template selection described above.\n"
                    },
                    "templateKindId": {
                        "type": "integer",
                        "description": "ID of the template kind which categorizes the provisioning template. Optional for snippets, otherwise required.\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/smartproxy:Smartproxy": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Smart proxies provide an API for a higher-level orchestration tool. Foreman supports the following smart\nproxies: DHCP (ISC DHCP \u0026 MS DHCP servers), DNS (bind \u0026 MS DNS servers), Puppet \u003e= 0.24.x, Puppet CA, Realm (FreeIPA),\nTemplates, TFTP.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the smart proxy. @EXAMPLE \"dns.dc1.company.com\"\n"
                },
                "url": {
                    "type": "string",
                    "description": "Uniform resource locator of the proxy. @EXAMPLE \"https://dns.dc1.company.com:8443\"\n"
                }
            },
            "required": [
                "__meta_",
                "name",
                "url"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the smart proxy. @EXAMPLE \"dns.dc1.company.com\"\n"
                },
                "url": {
                    "type": "string",
                    "description": "Uniform resource locator of the proxy. @EXAMPLE \"https://dns.dc1.company.com:8443\"\n"
                }
            },
            "requiredInputs": [
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Smartproxy resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Smart proxies provide an API for a higher-level orchestration tool. Foreman supports the following smart\nproxies: DHCP (ISC DHCP \u0026 MS DHCP servers), DNS (bind \u0026 MS DNS servers), Puppet \u003e= 0.24.x, Puppet CA, Realm (FreeIPA),\nTemplates, TFTP.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the smart proxy. @EXAMPLE \"dns.dc1.company.com\"\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Uniform resource locator of the proxy. @EXAMPLE \"https://dns.dc1.company.com:8443\"\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/subnet:Subnet": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of a subnetwork.\n"
                },
                "bmcId": {
                    "type": "integer",
                    "description": "BMC Proxy ID to use within this subnet\n"
                },
                "bootMode": {
                    "type": "string",
                    "description": "Default boot mode for instances assigned to this subnet. Values include: `\"Static\"`, `\"DHCP\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the subnet\n"
                },
                "dhcpId": {
                    "type": "integer",
                    "description": "DHCP Proxy ID to use within this subnet\n"
                },
                "dnsPrimary": {
                    "type": "string",
                    "description": "Primary DNS server for this subnet.\n"
                },
                "dnsSecondary": {
                    "type": "string",
                    "description": "Secondary DNS sever for this subnet.\n"
                },
                "domainIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Domains in which this subnet is part\n"
                },
                "from": {
                    "type": "string",
                    "description": "Start IP address for IP auto suggestion.\n"
                },
                "gateway": {
                    "type": "string",
                    "description": "Gateway server to use when connecting/communicating to anything not on the same network.\n"
                },
                "httpbootId": {
                    "type": "integer",
                    "description": "HTTPBoot Proxy ID to use within this subnet\n"
                },
                "ipam": {
                    "type": "string",
                    "description": "IP address auto-suggestion for this subnet. Valid values include: `\"DHCP\"`, `\"Internal DB\"`, `\"Random DB\"`,`\"None\"`.\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Netmask for this subnet. @EXAMPLE \"255.255.255.0\"\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "MTU value for the subnet\n"
                },
                "name": {
                    "type": "string",
                    "description": "Subnet name. @EXAMPLE \"10.228.247.0 BO1\"\n"
                },
                "network": {
                    "type": "string",
                    "description": "Subnet network. @EXAMPLE \"10.228.247.0\"\n"
                },
                "networkAddress": {
                    "type": "string",
                    "description": "The Subnets CIDR in the format 169.254.0.0/16\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Type or protocol, IPv4 or IPv6, defaults to IPv4.\n"
                },
                "templateId": {
                    "type": "integer",
                    "description": "Template HTTP(S) Proxy ID to use within this subnet\n"
                },
                "tftpId": {
                    "type": "integer",
                    "description": "TFTP Proxy ID to use within this subnet\n"
                },
                "to": {
                    "type": "string",
                    "description": "Ending IP address for IP auto suggestion.\n"
                },
                "vlanid": {
                    "type": "integer",
                    "description": "VLAN id that is in use in the subnet\n"
                }
            },
            "required": [
                "__meta_",
                "mask",
                "name",
                "network"
            ],
            "inputProperties": {
                "bmcId": {
                    "type": "integer",
                    "description": "BMC Proxy ID to use within this subnet\n"
                },
                "bootMode": {
                    "type": "string",
                    "description": "Default boot mode for instances assigned to this subnet. Values include: `\"Static\"`, `\"DHCP\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the subnet\n"
                },
                "dhcpId": {
                    "type": "integer",
                    "description": "DHCP Proxy ID to use within this subnet\n"
                },
                "dnsPrimary": {
                    "type": "string",
                    "description": "Primary DNS server for this subnet.\n"
                },
                "dnsSecondary": {
                    "type": "string",
                    "description": "Secondary DNS sever for this subnet.\n"
                },
                "domainIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Domains in which this subnet is part\n"
                },
                "from": {
                    "type": "string",
                    "description": "Start IP address for IP auto suggestion.\n"
                },
                "gateway": {
                    "type": "string",
                    "description": "Gateway server to use when connecting/communicating to anything not on the same network.\n"
                },
                "httpbootId": {
                    "type": "integer",
                    "description": "HTTPBoot Proxy ID to use within this subnet\n"
                },
                "ipam": {
                    "type": "string",
                    "description": "IP address auto-suggestion for this subnet. Valid values include: `\"DHCP\"`, `\"Internal DB\"`, `\"Random DB\"`,`\"None\"`.\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Netmask for this subnet. @EXAMPLE \"255.255.255.0\"\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "MTU value for the subnet\n"
                },
                "name": {
                    "type": "string",
                    "description": "Subnet name. @EXAMPLE \"10.228.247.0 BO1\"\n"
                },
                "network": {
                    "type": "string",
                    "description": "Subnet network. @EXAMPLE \"10.228.247.0\"\n"
                },
                "networkAddress": {
                    "type": "string",
                    "description": "The Subnets CIDR in the format 169.254.0.0/16\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Type or protocol, IPv4 or IPv6, defaults to IPv4.\n"
                },
                "templateId": {
                    "type": "integer",
                    "description": "Template HTTP(S) Proxy ID to use within this subnet\n"
                },
                "tftpId": {
                    "type": "integer",
                    "description": "TFTP Proxy ID to use within this subnet\n"
                },
                "to": {
                    "type": "string",
                    "description": "Ending IP address for IP auto suggestion.\n"
                },
                "vlanid": {
                    "type": "integer",
                    "description": "VLAN id that is in use in the subnet\n"
                }
            },
            "requiredInputs": [
                "mask",
                "network"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Subnet resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of a subnetwork.\n"
                    },
                    "bmcId": {
                        "type": "integer",
                        "description": "BMC Proxy ID to use within this subnet\n"
                    },
                    "bootMode": {
                        "type": "string",
                        "description": "Default boot mode for instances assigned to this subnet. Values include: `\"Static\"`, `\"DHCP\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the subnet\n"
                    },
                    "dhcpId": {
                        "type": "integer",
                        "description": "DHCP Proxy ID to use within this subnet\n"
                    },
                    "dnsPrimary": {
                        "type": "string",
                        "description": "Primary DNS server for this subnet.\n"
                    },
                    "dnsSecondary": {
                        "type": "string",
                        "description": "Secondary DNS sever for this subnet.\n"
                    },
                    "domainIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Domains in which this subnet is part\n"
                    },
                    "from": {
                        "type": "string",
                        "description": "Start IP address for IP auto suggestion.\n"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Gateway server to use when connecting/communicating to anything not on the same network.\n"
                    },
                    "httpbootId": {
                        "type": "integer",
                        "description": "HTTPBoot Proxy ID to use within this subnet\n"
                    },
                    "ipam": {
                        "type": "string",
                        "description": "IP address auto-suggestion for this subnet. Valid values include: `\"DHCP\"`, `\"Internal DB\"`, `\"Random DB\"`,`\"None\"`.\n"
                    },
                    "mask": {
                        "type": "string",
                        "description": "Netmask for this subnet. @EXAMPLE \"255.255.255.0\"\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "MTU value for the subnet\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Subnet name. @EXAMPLE \"10.228.247.0 BO1\"\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "Subnet network. @EXAMPLE \"10.228.247.0\"\n"
                    },
                    "networkAddress": {
                        "type": "string",
                        "description": "The Subnets CIDR in the format 169.254.0.0/16\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Type or protocol, IPv4 or IPv6, defaults to IPv4.\n"
                    },
                    "templateId": {
                        "type": "integer",
                        "description": "Template HTTP(S) Proxy ID to use within this subnet\n"
                    },
                    "tftpId": {
                        "type": "integer",
                        "description": "TFTP Proxy ID to use within this subnet\n"
                    },
                    "to": {
                        "type": "string",
                        "description": "Ending IP address for IP auto suggestion.\n"
                    },
                    "vlanid": {
                        "type": "integer",
                        "description": "VLAN id that is in use in the subnet\n"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/templateinput:Templateinput": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Foreman representation of a template input.\n"
                },
                "advanced": {
                    "type": "boolean"
                },
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "factName": {
                    "type": "string"
                },
                "hiddenValue": {
                    "type": "boolean"
                },
                "inputType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the template input\n"
                },
                "puppetClassName": {
                    "type": "string"
                },
                "puppetParameterName": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "resourceType": {
                    "type": "string"
                },
                "templateId": {
                    "type": "integer"
                },
                "valueType": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                }
            },
            "required": [
                "__meta_",
                "default",
                "name",
                "templateId"
            ],
            "inputProperties": {
                "advanced": {
                    "type": "boolean"
                },
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "factName": {
                    "type": "string"
                },
                "hiddenValue": {
                    "type": "boolean"
                },
                "inputType": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the template input\n"
                },
                "puppetClassName": {
                    "type": "string"
                },
                "puppetParameterName": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "resourceType": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "default"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Templateinput resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Foreman representation of a template input.\n"
                    },
                    "advanced": {
                        "type": "boolean"
                    },
                    "default": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "factName": {
                        "type": "string"
                    },
                    "hiddenValue": {
                        "type": "boolean"
                    },
                    "inputType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the template input\n"
                    },
                    "puppetClassName": {
                        "type": "string"
                    },
                    "puppetParameterName": {
                        "type": "string"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "templateId": {
                        "type": "integer"
                    },
                    "valueType": {
                        "type": "string"
                    },
                    "variableName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/user:User": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY User can be used to allow access to foreman.\n"
                },
                "admin": {
                    "type": "boolean",
                    "description": "If the user is allow admin privileges\n"
                },
                "authSourceId": {
                    "type": "integer",
                    "description": "Set the authentication source, i.e internal (1,default) or external (2)\n"
                },
                "defaultLocationId": {
                    "type": "integer",
                    "description": "Default location for the user, if empty takes global default\n"
                },
                "defaultOrganizationId": {
                    "type": "integer",
                    "description": "Default organization for the user, if empty takes global default\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of user\n"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name of the user\n"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name of user\n"
                },
                "locale": {
                    "type": "string",
                    "description": "Sets the timezone/location of a user\n"
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of all locations a user has access to\n"
                },
                "login": {
                    "type": "string",
                    "description": "Username used for logging-in\n"
                },
                "mail": {
                    "type": "string",
                    "description": "Email of user\n"
                },
                "organizationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of all organizations a user has access to\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of user, required if auth_source_id is 1 (internal)\n",
                    "secret": true
                }
            },
            "required": [
                "__meta_",
                "login"
            ],
            "inputProperties": {
                "admin": {
                    "type": "boolean",
                    "description": "If the user is allow admin privileges\n"
                },
                "authSourceId": {
                    "type": "integer",
                    "description": "Set the authentication source, i.e internal (1,default) or external (2)\n"
                },
                "defaultLocationId": {
                    "type": "integer",
                    "description": "Default location for the user, if empty takes global default\n"
                },
                "defaultOrganizationId": {
                    "type": "integer",
                    "description": "Default organization for the user, if empty takes global default\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of user\n"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name of the user\n"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name of user\n"
                },
                "locale": {
                    "type": "string",
                    "description": "Sets the timezone/location of a user\n"
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of all locations a user has access to\n"
                },
                "login": {
                    "type": "string",
                    "description": "Username used for logging-in\n"
                },
                "mail": {
                    "type": "string",
                    "description": "Email of user\n"
                },
                "organizationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of all organizations a user has access to\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of user, required if auth_source_id is 1 (internal)\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "login"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY User can be used to allow access to foreman.\n"
                    },
                    "admin": {
                        "type": "boolean",
                        "description": "If the user is allow admin privileges\n"
                    },
                    "authSourceId": {
                        "type": "integer",
                        "description": "Set the authentication source, i.e internal (1,default) or external (2)\n"
                    },
                    "defaultLocationId": {
                        "type": "integer",
                        "description": "Default location for the user, if empty takes global default\n"
                    },
                    "defaultOrganizationId": {
                        "type": "integer",
                        "description": "Default organization for the user, if empty takes global default\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of user\n"
                    },
                    "firstname": {
                        "type": "string",
                        "description": "First name of the user\n"
                    },
                    "lastname": {
                        "type": "string",
                        "description": "Last name of user\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "Sets the timezone/location of a user\n"
                    },
                    "locationIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of all locations a user has access to\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "Username used for logging-in\n"
                    },
                    "mail": {
                        "type": "string",
                        "description": "Email of user\n"
                    },
                    "organizationIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of all organizations a user has access to\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of user, required if auth_source_id is 1 (internal)\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "foreman:index/usergroup:Usergroup": {
            "properties": {
                "__meta_": {
                    "type": "boolean",
                    "description": "@SUMMARY Usergroups can be used to organize permissions and ownership of the hosts.\n"
                },
                "admin": {
                    "type": "boolean",
                    "description": "Is an admin user group.@EXAMPLE true\n"
                },
                "name": {
                    "type": "string",
                    "description": "Usergroup name. @EXAMPLE \"compute\"\n"
                }
            },
            "required": [
                "__meta_",
                "name"
            ],
            "inputProperties": {
                "admin": {
                    "type": "boolean",
                    "description": "Is an admin user group.@EXAMPLE true\n"
                },
                "name": {
                    "type": "string",
                    "description": "Usergroup name. @EXAMPLE \"compute\"\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Usergroup resources.\n",
                "properties": {
                    "__meta_": {
                        "type": "boolean",
                        "description": "@SUMMARY Usergroups can be used to organize permissions and ownership of the hosts.\n"
                    },
                    "admin": {
                        "type": "boolean",
                        "description": "Is an admin user group.@EXAMPLE true\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Usergroup name. @EXAMPLE \"compute\"\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "foreman:index/getArchitecture:getArchitecture": {
            "inputs": {
                "description": "A collection of arguments for invoking getArchitecture.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getArchitecture.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingsystemIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "operatingsystemIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getComputeprofile:getComputeprofile": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeprofile.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getComputeprofile.\n",
                "properties": {
                    "computeAttributes": {
                        "items": {
                            "$ref": "#/types/foreman:index/getComputeprofileComputeAttribute:getComputeprofileComputeAttribute"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "computeAttributes",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getComputeresource:getComputeresource": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeresource.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getComputeresource.\n",
                "properties": {
                    "cachingenabled": {
                        "type": "boolean"
                    },
                    "datacenter": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displaytype": {
                        "type": "string"
                    },
                    "hypervisor": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "server": {
                        "type": "string"
                    },
                    "setconsolepassword": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "cachingenabled",
                    "datacenter",
                    "description",
                    "displaytype",
                    "hypervisor",
                    "name",
                    "password",
                    "server",
                    "setconsolepassword",
                    "url",
                    "user",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getDefaulttemplate:getDefaulttemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getDefaulttemplate.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDefaulttemplate.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingsystemId": {
                        "type": "integer"
                    },
                    "provisioningtemplateId": {
                        "type": "integer"
                    },
                    "templatekindId": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "operatingsystemId",
                    "provisioningtemplateId",
                    "templatekindId",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getDomain:getDomain": {
            "inputs": {
                "description": "A collection of arguments for invoking getDomain.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomain.\n",
                "properties": {
                    "fullname": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parameters": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "fullname",
                    "name",
                    "parameters",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getEnvironment:getEnvironment": {
            "inputs": {
                "description": "A collection of arguments for invoking getEnvironment.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEnvironment.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getGlobalParameter:getGlobalParameter": {
            "inputs": {
                "description": "A collection of arguments for invoking getGlobalParameter.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGlobalParameter.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "value",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getHostgroup:getHostgroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getHostgroup.\n",
                "properties": {
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "title"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHostgroup.\n",
                "properties": {
                    "architectureId": {
                        "type": "integer"
                    },
                    "computeProfileId": {
                        "type": "integer"
                    },
                    "computeResourceId": {
                        "type": "integer"
                    },
                    "configGroupIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "contentSourceId": {
                        "type": "integer"
                    },
                    "contentViewId": {
                        "type": "integer"
                    },
                    "domainId": {
                        "type": "integer"
                    },
                    "environmentId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "lifecycleEnvironmentId": {
                        "type": "integer"
                    },
                    "mediumId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingsystemId": {
                        "type": "integer"
                    },
                    "parameters": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "parentId": {
                        "type": "integer"
                    },
                    "ptableId": {
                        "type": "integer"
                    },
                    "puppetCaProxyId": {
                        "type": "integer"
                    },
                    "puppetClassIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "puppetProxyId": {
                        "type": "integer"
                    },
                    "pxeLoader": {
                        "type": "string"
                    },
                    "realmId": {
                        "type": "integer"
                    },
                    "rootPassword": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "architectureId",
                    "computeProfileId",
                    "computeResourceId",
                    "configGroupIds",
                    "contentSourceId",
                    "contentViewId",
                    "domainId",
                    "environmentId",
                    "lifecycleEnvironmentId",
                    "mediumId",
                    "name",
                    "operatingsystemId",
                    "parameters",
                    "parentId",
                    "ptableId",
                    "puppetCaProxyId",
                    "puppetClassIds",
                    "puppetProxyId",
                    "pxeLoader",
                    "realmId",
                    "rootPassword",
                    "subnetId",
                    "title",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getHttpproxy:getHttpproxy": {
            "inputs": {
                "description": "A collection of arguments for invoking getHttpproxy.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHttpproxy.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "url",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getImage:getImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getImage.\n",
                "properties": {
                    "computeResourceId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "computeResourceId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getImage.\n",
                "properties": {
                    "architectureId": {
                        "type": "integer"
                    },
                    "computeResourceId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingsystemId": {
                        "type": "integer"
                    },
                    "userData": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "required": [
                    "architectureId",
                    "computeResourceId",
                    "name",
                    "operatingsystemId",
                    "userData",
                    "username",
                    "uuid",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getJobtemplate:getJobtemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getJobtemplate.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getJobtemplate.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "descriptionFormat": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "jobCategory": {
                        "type": "string"
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "providerType": {
                        "type": "string"
                    },
                    "snippet": {
                        "type": "boolean"
                    },
                    "template": {
                        "type": "string"
                    },
                    "templateInputs": {
                        "items": {
                            "$ref": "#/types/foreman:index/getJobtemplateTemplateInput:getJobtemplateTemplateInput"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "description",
                    "descriptionFormat",
                    "jobCategory",
                    "locked",
                    "name",
                    "providerType",
                    "snippet",
                    "template",
                    "templateInputs",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getKatelloContentCredential:getKatelloContentCredential": {
            "inputs": {
                "description": "A collection of arguments for invoking getKatelloContentCredential.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKatelloContentCredential.\n",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "content",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getKatelloContentView:getKatelloContentView": {
            "inputs": {
                "description": "A collection of arguments for invoking getKatelloContentView.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKatelloContentView.\n",
                "properties": {
                    "autoPublish": {
                        "type": "boolean"
                    },
                    "componentIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "composite": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "filtered": {
                        "type": "boolean"
                    },
                    "filters": {
                        "items": {
                            "$ref": "#/types/foreman:index/getKatelloContentViewFilter:getKatelloContentViewFilter"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "latestVersionId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "integer"
                    },
                    "repositoryIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "solveDependencies": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "autoPublish",
                    "componentIds",
                    "composite",
                    "description",
                    "filters",
                    "filtered",
                    "label",
                    "latestVersionId",
                    "name",
                    "organizationId",
                    "repositoryIds",
                    "solveDependencies",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getKatelloLifecycleEnvironment:getKatelloLifecycleEnvironment": {
            "inputs": {
                "description": "A collection of arguments for invoking getKatelloLifecycleEnvironment.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKatelloLifecycleEnvironment.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "library": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "integer"
                    },
                    "priorId": {
                        "type": "integer"
                    },
                    "successorId": {
                        "type": "integer"
                    }
                },
                "required": [
                    "description",
                    "label",
                    "library",
                    "name",
                    "organizationId",
                    "priorId",
                    "successorId",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getKatelloProduct:getKatelloProduct": {
            "inputs": {
                "description": "A collection of arguments for invoking getKatelloProduct.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKatelloProduct.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "gpgKeyId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sslCaCertId": {
                        "type": "integer"
                    },
                    "sslClientCertId": {
                        "type": "integer"
                    },
                    "sslClientKeyId": {
                        "type": "integer"
                    },
                    "syncPlanId": {
                        "type": "integer"
                    }
                },
                "required": [
                    "description",
                    "gpgKeyId",
                    "label",
                    "name",
                    "sslCaCertId",
                    "sslClientCertId",
                    "sslClientKeyId",
                    "syncPlanId",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getKatelloRepository:getKatelloRepository": {
            "inputs": {
                "description": "A collection of arguments for invoking getKatelloRepository.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKatelloRepository.\n",
                "properties": {
                    "ansibleCollectionRequirements": {
                        "type": "string"
                    },
                    "checksumType": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "debArchitectures": {
                        "type": "string"
                    },
                    "debComponents": {
                        "type": "string"
                    },
                    "debReleases": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dockerTagsWhitelist": {
                        "type": "string"
                    },
                    "dockerUpstreamName": {
                        "type": "string"
                    },
                    "downloadConcurrency": {
                        "type": "integer"
                    },
                    "downloadPolicy": {
                        "type": "string"
                    },
                    "gpgKeyId": {
                        "type": "integer"
                    },
                    "httpProxyId": {
                        "type": "integer"
                    },
                    "httpProxyPolicy": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ignorableContent": {
                        "type": "string"
                    },
                    "ignoreGlobalProxy": {
                        "type": "boolean"
                    },
                    "label": {
                        "type": "string"
                    },
                    "mirrorOnSync": {
                        "type": "boolean"
                    },
                    "mirroringPolicy": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "integer"
                    },
                    "unprotected": {
                        "type": "boolean"
                    },
                    "upstreamPassword": {
                        "type": "string"
                    },
                    "upstreamUsername": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "verifySslOnSync": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "ansibleCollectionRequirements",
                    "checksumType",
                    "contentType",
                    "debArchitectures",
                    "debComponents",
                    "debReleases",
                    "description",
                    "dockerTagsWhitelist",
                    "dockerUpstreamName",
                    "downloadConcurrency",
                    "downloadPolicy",
                    "gpgKeyId",
                    "httpProxyId",
                    "httpProxyPolicy",
                    "ignorableContent",
                    "ignoreGlobalProxy",
                    "label",
                    "mirrorOnSync",
                    "mirroringPolicy",
                    "name",
                    "productId",
                    "unprotected",
                    "upstreamPassword",
                    "upstreamUsername",
                    "url",
                    "verifySslOnSync",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getKatelloSyncPlan:getKatelloSyncPlan": {
            "inputs": {
                "description": "A collection of arguments for invoking getKatelloSyncPlan.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKatelloSyncPlan.\n",
                "properties": {
                    "cronExpression": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "interval": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "syncDate": {
                        "type": "string"
                    }
                },
                "required": [
                    "cronExpression",
                    "description",
                    "enabled",
                    "interval",
                    "name",
                    "syncDate",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getMedia:getMedia": {
            "inputs": {
                "description": "A collection of arguments for invoking getMedia.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMedia.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingsystemIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "osFamily": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "operatingsystemIds",
                    "osFamily",
                    "path",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getModel:getModel": {
            "inputs": {
                "description": "A collection of arguments for invoking getModel.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getModel.\n",
                "properties": {
                    "hardwareModel": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "info": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "vendorClass": {
                        "type": "string"
                    }
                },
                "required": [
                    "hardwareModel",
                    "info",
                    "name",
                    "vendorClass",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getOperatingsystem:getOperatingsystem": {
            "inputs": {
                "description": "A collection of arguments for invoking getOperatingsystem.\n",
                "properties": {
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "title"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOperatingsystem.\n",
                "properties": {
                    "architectures": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "family": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "major": {
                        "type": "string"
                    },
                    "media": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "minor": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parameters": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "partitiontables": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "passwordHash": {
                        "type": "string"
                    },
                    "provisioningTemplates": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "releaseName": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "architectures",
                    "description",
                    "family",
                    "major",
                    "media",
                    "minor",
                    "name",
                    "parameters",
                    "partitiontables",
                    "passwordHash",
                    "provisioningTemplates",
                    "releaseName",
                    "title",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getParameter:getParameter": {
            "inputs": {
                "description": "A collection of arguments for invoking getParameter.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getParameter.\n",
                "properties": {
                    "domainId": {
                        "type": "integer"
                    },
                    "hostId": {
                        "type": "integer"
                    },
                    "hostgroupId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingsystemId": {
                        "type": "integer"
                    },
                    "subnetId": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "domainId",
                    "hostId",
                    "hostgroupId",
                    "name",
                    "operatingsystemId",
                    "subnetId",
                    "value",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getPartitiontable:getPartitiontable": {
            "inputs": {
                "description": "A collection of arguments for invoking getPartitiontable.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPartitiontable.\n",
                "properties": {
                    "auditComment": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "hostIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "hostgroupIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "layout": {
                        "type": "string"
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingsystemIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "osFamily": {
                        "type": "string"
                    },
                    "snippet": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "auditComment",
                    "description",
                    "hostIds",
                    "hostgroupIds",
                    "layout",
                    "locked",
                    "name",
                    "operatingsystemIds",
                    "osFamily",
                    "snippet",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getPolicy:getPolicy": {
            "deprecationMessage": "foreman.index/getpolicy.getPolicy has been deprecated in favor of foreman.index/getenvironment.getEnvironment",
            "inputs": {
                "description": "A collection of arguments for invoking getPolicy.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicy.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getProvisioningtemplate:getProvisioningtemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getProvisioningtemplate.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProvisioningtemplate.\n",
                "properties": {
                    "auditComment": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingsystemIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "snippet": {
                        "type": "boolean"
                    },
                    "template": {
                        "type": "string"
                    },
                    "templateCombinationsAttributes": {
                        "items": {
                            "$ref": "#/types/foreman:index/getProvisioningtemplateTemplateCombinationsAttribute:getProvisioningtemplateTemplateCombinationsAttribute"
                        },
                        "type": "array"
                    },
                    "templateKindId": {
                        "type": "integer"
                    }
                },
                "required": [
                    "auditComment",
                    "description",
                    "locked",
                    "name",
                    "operatingsystemIds",
                    "snippet",
                    "template",
                    "templateCombinationsAttributes",
                    "templateKindId",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getPuppetclass:getPuppetclass": {
            "inputs": {
                "description": "A collection of arguments for invoking getPuppetclass.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPuppetclass.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getSetting:getSetting": {
            "inputs": {
                "description": "A collection of arguments for invoking getSetting.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSetting.\n",
                "properties": {
                    "categoryName": {
                        "type": "string"
                    },
                    "default": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "readonly": {
                        "type": "boolean"
                    },
                    "settingsType": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "categoryName",
                    "default",
                    "description",
                    "name",
                    "readonly",
                    "settingsType",
                    "value",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getSmartclassparameter:getSmartclassparameter": {
            "inputs": {
                "description": "A collection of arguments for invoking getSmartclassparameter.\n",
                "properties": {
                    "parameter": {
                        "type": "string"
                    },
                    "puppetclassId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "parameter",
                    "puppetclassId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSmartclassparameter.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "parameter": {
                        "type": "string"
                    },
                    "puppetclassId": {
                        "type": "integer"
                    }
                },
                "required": [
                    "parameter",
                    "puppetclassId",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getSmartproxy:getSmartproxy": {
            "inputs": {
                "description": "A collection of arguments for invoking getSmartproxy.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSmartproxy.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "url",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getSubnet:getSubnet": {
            "inputs": {
                "description": "A collection of arguments for invoking getSubnet.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSubnet.\n",
                "properties": {
                    "bmcId": {
                        "type": "integer"
                    },
                    "bootMode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dhcpId": {
                        "type": "integer"
                    },
                    "dnsPrimary": {
                        "type": "string"
                    },
                    "dnsSecondary": {
                        "type": "string"
                    },
                    "domainIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "from": {
                        "type": "string"
                    },
                    "gateway": {
                        "type": "string"
                    },
                    "httpbootId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ipam": {
                        "type": "string"
                    },
                    "mask": {
                        "type": "string"
                    },
                    "mtu": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "networkAddress": {
                        "type": "string"
                    },
                    "networkType": {
                        "type": "string"
                    },
                    "templateId": {
                        "type": "integer"
                    },
                    "tftpId": {
                        "type": "integer"
                    },
                    "to": {
                        "type": "string"
                    },
                    "vlanid": {
                        "type": "integer"
                    }
                },
                "required": [
                    "bmcId",
                    "bootMode",
                    "description",
                    "dhcpId",
                    "dnsPrimary",
                    "dnsSecondary",
                    "domainIds",
                    "from",
                    "gateway",
                    "httpbootId",
                    "ipam",
                    "mask",
                    "mtu",
                    "networkAddress",
                    "networkType",
                    "templateId",
                    "tftpId",
                    "to",
                    "vlanid",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getTemplateinput:getTemplateinput": {
            "outputs": {
                "description": "A collection of values returned by getTemplateinput.\n",
                "properties": {
                    "advanced": {
                        "type": "boolean"
                    },
                    "default": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "factName": {
                        "type": "string"
                    },
                    "hiddenValue": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "inputType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "puppetClassName": {
                        "type": "string"
                    },
                    "puppetParameterName": {
                        "type": "string"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "templateId": {
                        "type": "integer"
                    },
                    "valueType": {
                        "type": "string"
                    },
                    "variableName": {
                        "type": "string"
                    }
                },
                "required": [
                    "advanced",
                    "default",
                    "description",
                    "factName",
                    "hiddenValue",
                    "id",
                    "inputType",
                    "name",
                    "puppetClassName",
                    "puppetParameterName",
                    "required",
                    "resourceType",
                    "templateId",
                    "valueType",
                    "variableName"
                ],
                "type": "object"
            }
        },
        "foreman:index/getTemplatekind:getTemplatekind": {
            "inputs": {
                "description": "A collection of arguments for invoking getTemplatekind.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTemplatekind.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getUser:getUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "mail": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "admin": {
                        "type": "boolean"
                    },
                    "authSourceId": {
                        "type": "integer"
                    },
                    "defaultLocationId": {
                        "type": "integer"
                    },
                    "defaultOrganizationId": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "locationIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "login": {
                        "type": "string"
                    },
                    "mail": {
                        "type": "string"
                    },
                    "organizationIds": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "admin",
                    "authSourceId",
                    "defaultLocationId",
                    "defaultOrganizationId",
                    "locale",
                    "locationIds",
                    "organizationIds",
                    "password",
                    "id"
                ],
                "type": "object"
            }
        },
        "foreman:index/getUsergroup:getUsergroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getUsergroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsergroup.\n",
                "properties": {
                    "admin": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "admin",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        }
    }
}